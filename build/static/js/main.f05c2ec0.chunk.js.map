{"version":3,"sources":["components/Header.js","App.js","index.js"],"names":["Header","App","require","createClient","key","Promise","L","icon","iconUrl","iconSize","iconAnchor","popupAnchor","circle","color","fillColor","fillOpacity","radius","getNursingAidCircle","value","isNaN","parseInt","getHospitalAidRadius","getHospitalAidCircle","getNursingAidRadius","getAidCircle","getAidRadius","onClickedUp","state","console","log","setState","onValueChangedButton","onClickedDown","onSelectionChanged","event","target","filter_history","testing_data","filter","pilot","County","rows","i","length","push","Test_Date","Total_Number_of_Tests_Performed","all_testing_data","filter_data","virus_mar_data","province_state","virus_data","virus_may_data","virus_jul_data","virus_sep_data","virus_nov_data","onValueChanged","location","lat","lng","zoom","virus_oct_data","hospital_list","nursing_bronx","COVID_19_Manhattan","show_wildlife","getHospitalIcon","score","greenIcon","divIcon","className","html","redIcon","getBuildingIcon","getEmptyIcon","getDivIcon","this","position","onClick","min","max","step","onChange","Map","id","center","TileLayer","noWrap","attribution","url","map","each","index","longitude","latitude","Marker","deaths","Popup","combined_key","Total_Staff_Confirmed","Circle","Staff_Total_COVID_19_Deaths","Tooltip","Provider_Address","location_1","death","borough","facility_name","confirmed","name","Row","Col","sm","size","width","height","data","offset","alt","src","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f05c2ec0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst headerStyle = {\n    backgroundColor: \"#07648d\",\n    fontSize: \"20px\",\n    color: \"white\",\n    borderTop: \"1px solid #E7E7E7\",\n    textAlign: \"center\",\n    padding: \"40px\",\n    position: \"relative\",\n    left: \"0\",\n    top: \"0\",\n    height: \"20px\",\n    width: \"100%\"\n  };\n  \n  const phantomStyle = {\n    display: \"block\",\n    padding: \"0px\",\n    height: \"0px\",\n    width: \"100%\"\n  };\n  \n  function Header({ children }) {\n    return (\n      <div>\n        <div style={phantomStyle} />\n        <div style={headerStyle}>{children}</div>\n      </div>\n    );\n  }\n\nexport default Header","import React,{Component} from 'react';\nimport Tab from 'react-bootstrap/Tab'\nimport Tabs from 'react-bootstrap/Tabs'\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { BarChart } from \"reaviz\";\nimport { Zoom } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css'\nimport {Form, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col} from 'reactstrap'\nimport { Map, TileLayer, Marker, Popup,GeoJSON,Circle,Tooltip } from 'react-leaflet'\nimport './App.css';\n//import data from './data/diplomacy.json'\n//import travel from './data/travel_advisory.json'\n//import worldmap from './data/world_map.json'\n\n//import virus_apr_data from './data/virus_data.json'\n\n//import virus_jun_data from './data/virus_data.json'\n\n//import virus_aug_data from './data/virus_data.json'\n/*\nimport virus_data from './data/virus_data.json'\nimport virus_mar_data from './data/virus_mar_data.json'\nimport virus_may_data from './data/virus_may_data.json'\nimport virus_jul_data from './data/virus_jul_data.json'\nimport virus_sep_data from './data/virus_sep_data.json'\nimport virus_oct_data from './data/virus_data.json'\nimport virus_nov_data from './data/virus_nov_data.json'\nimport testing_data from './data/testing_data.json'\nimport hospital_list from './data/hospital_list.json'\nimport nursing_bronx from './data/nursing_bronx.json'\nimport COVID_19_Manhattan from './data/COVID_19_Manhattan.json' */\n\nimport virus_data from './data/virus_data.json'\nimport virus_mar_data from './data/virus_mar_data.json'\nimport virus_may_data from './data/virus_may_data.json'\nimport virus_jul_data from './data/virus_jul_data.json'\nimport virus_sep_data from './data/virus_data.json'\nimport virus_oct_data from './data/virus_data.json'\nimport virus_nov_data from './data/virus_data.json'\nimport testing_data from './data/testing_data.json'\nimport hospital_list from './data/hospital_list.json'\nimport nursing_bronx from './data/nursing_bronx.json'\nimport COVID_19_Manhattan from './data/COVID_19_Manhattan.json'\nimport ReactPlayer from 'react-player/youtube'\nimport { TwitterTimelineEmbed} from 'react-twitter-embed';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport worldGeoJSON from 'geojson-world-map';\n\nconst googleMapsClient = require('@google/maps').createClient({\n  key: 'add key here',\n  Promise: Promise\n});\n\nvar myGoogleIcon = L.icon({\n  iconUrl: '/images/google_icon.png',\n  iconSize: [25,41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n  });\n\nvar myIcon = L.icon({\niconUrl: '/images/building_icon.png',\niconSize: [25,41],\niconAnchor: [12.5, 41],\npopupAnchor: [0, -41]\n});\n\n\nvar mySecondIcon = L.icon({\n  iconUrl: './images/star.png',\n  iconSize: [25,41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n  });\n\nvar circle = L.circle([51.508, -0.11], {\n  color: 'red',\n  fillColor: '#f03',\n  fillOpacity: 0.5,\n  radius: 50\n});\n\nclass App extends Component {\n\n\n\n  getNursingAidCircle = (value) => \n  {\n    if(isNaN(value) == true || value == null)\n    {\n      return 'white';\n    }\n    var color = 'white';\n  \n  value = parseInt(value);\n  \n  if(value < 1)\n  {\n    color = 'green'\n  }\n\n  else \n  {\n    color = 'red';\n  }\n  \n  return color\n  \n  }\n\n  getHospitalAidRadius = (value) => {\n\n    var radius = 500;\n    if(isNaN(value) == true || value == null)\n    {\n      return 0;\n    }\n   \n    return radius;\n  }\n\n\n  getHospitalAidCircle = (value) => \n  {\n    if(isNaN(value) == true || value == null)\n    {\n      return 'black';\n    }\n    var color = 'black';\n  \n  value = parseInt(value);\n  \n  if(value < 1)\n  {\n    color = 'brown'\n  }\n\n  else \n  {\n    color = 'blue';\n  }\n  \n  return color\n  \n  }\n\n  getNursingAidRadius = (value) => {\n\n    var radius = 500;\n    if(isNaN(value) == true || value == null)\n    {\n      return 0;\n    }\n   \n    return radius;\n  }\n\n  getAidCircle = (value) => \n  {\n    if(isNaN(value) == true || value == null)\n    {\n      return 'white';\n    }\n    var color = 'white';\n  \n  value = parseInt(value);\n  \n  if(value < 10)\n  {\n    color = 'green'\n  }\n  else if(value >= 10 && value < 1000)\n  {\n    color = 'blue';\n  }\n  else \n  {\n    color = 'red';\n  }\n  \n  return color\n  \n  }\n\n  getAidRadius = (value) => {\n\n    if(isNaN(value) == true || value == null)\n    {\n      return 100;\n    }\n    var radius = 1000;\n\n    value = parseInt(value);\n    if(value >= 0 && value < 10)\n    {\n      radius = 10 * value;\n    }\n    else if(value >= 10 && value < 1000)\n    {\n      radius = 5 * value;\n    }\n    else\n    {\n      radius = 1 * value/2;\n    }\n    return radius;\n  }\n\n  onClickedUp = () =>\n  {\n    if(parseInt(this.state.value) === 11)\n    return;\n    console.log(this.state.value);\n    this.setState({value: parseInt(this.state.value) + 2});\n    this.onValueChangedButton(parseInt(this.state.value));\n\n  }\n\n \n  onClickedDown =() =>\n  {\n    if(parseInt(this.state.value) === 1)\n    return;\n    this.setState({value: parseInt(this.state.value) - 2 });\n    this.onValueChangedButton(parseInt(this.state.value));\n    \n  }\n\n  onSelectionChanged = (event) => {\n    var value = event.target.value;\n\n      var filter_history = testing_data.filter(function (pilot) {\n      return (pilot.County) == value;\n    });\n   \n    var rows = [];\n      for (var i = 0; i < filter_history.length; i++) {\n        rows.push({\"key\": filter_history[i].Test_Date,\n          \"data\" : parseInt(filter_history[i].Total_Number_of_Tests_Performed)});\n      };\n \n      this.setState({all_testing_data: rows});\n\n  }\n\n  onValueChangedButton = (value) => {\n    \n  \n    if(value == 3)\n    {\n      var filter_data= virus_mar_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n\n      this.setState({virus_data: filter_data});\n    }\n     else if(value== 4)\n    {\n      /*\n      var filter_data= virus_apr_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});*/\n    }\n         else if(value == 5)\n    {\n      var filter_data= virus_may_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n            else if(value == 6)\n    {\n     /* var filter_data= virus_jun_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});*/\n    }\n    else if(value== 7)\n    {\n      var filter_data= virus_jul_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n      else if(value == 8)\n    {\n     /* var filter_data= virus_aug_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});*/\n    }\n        else if(value == 9)\n    {\n      var filter_data= virus_sep_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n    else if(value == 10)\n    {\n      /*var filter_data= virus_oct_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});*/\n    }\n    else\n    {\n      var filter_data= virus_nov_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n\n  }\n\n  onValueChanged = (event) => {\n    \n    this.setState({value: event.target.value});\n    if(event.target.value == 3)\n    {\n      var filter_data= virus_mar_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n\n      this.setState({virus_data: filter_data});\n    }\n     else if(event.target.value == 4)\n    {\n     /* var filter_data= virus_apr_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});*/\n    }\n         else if(event.target.value == 5)\n    {\n      var filter_data= virus_may_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n            else if(event.target.value == 6)\n    {\n     /* var filter_data= virus_jun_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});*/\n    }\n    else if(event.target.value == 7)\n    {\n      var filter_data= virus_jul_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n      else if(event.target.value == 8)\n    {\n    /*  var filter_data= virus_aug_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});*/\n    }\n        else if(event.target.value == 9)\n    {\n      var filter_data= virus_sep_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n    else if(event.target.value == 10)\n    {\n     /* var filter_data= virus_oct_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});*/\n    }\n    else\n    {\n      var filter_data= virus_nov_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n\n  }\n\n  state={\n    location: {\n      lat: 40.766505,\n      lng: -73.877285,\n      },\n    zoom: 11,\n    all_testing_data:[\n      \n    ],\n    value:3,\n    virus_data: virus_data,\n    virus_mar_data: virus_mar_data,\n    //virus_apr_data: virus_apr_data,\n    virus_may_data: virus_may_data,\n    //virus_jun_data: virus_jun_data,\n    virus_jul_data: virus_jul_data,\n    virus_sep_data: virus_sep_data,\n    virus_oct_data: virus_oct_data,\n    virus_nov_data: virus_nov_data,\n    testing_data: testing_data,\n    hospital_list: hospital_list,\n    nursing_bronx: nursing_bronx,\n    COVID_19_Manhattan: COVID_19_Manhattan,\n    show_wildlife: true\n  }\n\n  getHospitalIcon = (score) =>\n  {\n \n    if(score == null)\n    score = 0;\n \n   var greenIcon = L.divIcon({\n     className : 'div-green-icon',\n     html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/building_icon.png\"/></span>'\n   })\n \n   var yellowIcon = L.divIcon({\n     className : 'div-yellow-icon',\n     html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var orangeIcon = L.divIcon({\n     className : 'div-orange-icon',\n     html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var redIcon = L.divIcon({\n     className : 'div-red-icon',\n     html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var emptyIcon = L.divIcon({\n     className : 'div-red-icon',\n     html: '<span></span>'\n   })\n \n   if(parseInt(score) > 0)\n   return redIcon;\n \n   return greenIcon;\n \n  }\n\n\n  getBuildingIcon = (score) =>\n  {\n \n    if(score == null)\n    score = 0;\n \n   var greenIcon = L.divIcon({\n     className : 'div-green-icon',\n     html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var yellowIcon = L.divIcon({\n     className : 'div-yellow-icon',\n     html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var orangeIcon = L.divIcon({\n     className : 'div-orange-icon',\n     html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var redIcon = L.divIcon({\n     className : 'div-red-icon',\n     html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var emptyIcon = L.divIcon({\n     className : 'div-red-icon',\n     html: '<span></span>'\n   })\n \n   if(parseInt(score) > 0)\n   return redIcon;\n \n   return greenIcon;\n \n  }\n\n\n  getEmptyIcon = () =>\n  {\n    var emptyIcon = L.divIcon({\n      className : 'div-red-icon',\n      html: '<span></span>'\n    })\n\n    return emptyIcon;\n  }\n\n  getDivIcon = (score) =>\n {\n\n  score = parseInt(score);\n\n  var greenIcon = L.divIcon({\n    className : 'div-green-icon',\n    html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n  })\n\n  var yellowIcon = L.divIcon({\n    className : 'div-yellow-icon',\n    html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n  })\n\n  var orangeIcon = L.divIcon({\n    className : 'div-orange-icon',\n    html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n  })\n\n  var redIcon = L.divIcon({\n    className : 'div-red-icon',\n    html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n  })\n\n  var emptyIcon = L.divIcon({\n    className : 'div-red-icon',\n    html: '<span></span>'\n  })\n\n\n  return greenIcon;\n\n }\n\n  componentDidMount(){\n\n    var filter_history = testing_data.filter(function (pilot) {\n      return (pilot.County) == \"New York\";\n    });\n   \n    var rows = [];\n      for (var i = 0; i < filter_history.length; i++) {\n        rows.push({\"key\": filter_history[i].Test_Date,\n          \"data\" : parseInt(filter_history[i].Total_Number_of_Tests_Performed)});\n      };\n      //console.log(rows);\n      this.setState({all_testing_data: rows});\n    /*\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    \n    var raw = JSON.stringify({\"username\":\"testapi1\",\"password\":\"coronavirus19\"});\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://covid19.cloudeya.org/token\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n      */\n\n     var filter_data= virus_mar_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    this.setState({virus_data: filter_data});\n/*\n     var filter_data= virus_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    var filter_may_data= virus_may_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n    var filter_sep_data= virus_sep_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n    var filter_oct_data= virus_oct_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    var filter_nov_data= virus_nov_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    this.setState({virus_data: virus_oct_data});\n*/\n/*\n    var key =  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RhcGkxIiwiaWF0IjoxNjA0ODk2NTAzLCJleHAiOjE2MDUwOTY1MDN9.X0JT6_eWG-gvLEEikOqyrBrPdnvAZcBEYSgG4fSECOI\"\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Authorization\", \"Bearer \" + key);\n\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n     redirect: 'follow'\n    };\n\nfetch(\"https://covid19.cloudeya.org/MAR2020\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n    */\n\n  }\n\n\n  render(){\n\n    const position=[this.state.location.lat, this.state.location.lng]\n  return (\n    <div className=\"App\">\n     <br/>\n     <h3>Covid-19 Detection over Time</h3>\n     <button  onClick={this.onClickedUp}>Up</button> <button onClick={this.onClickedDown}>Down</button>\n   <RangeSlider min={3} max={11}\n   value={this.state.value} step={2}\n   onChange={this.onValueChanged} />\n\n      <Map id=\"map\" className=\"map\" center={position} zoom={this.state.zoom}>\n        <TileLayer noWrap=\"true\"\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {\nthis.state.show_wildlife ? \n\nthis.state.virus_data.map((each, index) => {\n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n  \n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position} icon={this.getDivIcon(each.deaths)}>\n         <Popup><br /> \n          {each.combined_key}<br />  \n          </Popup>\n      </Marker>\n      }})\n: ''\n        }\n\n\n        {\nthis.state.show_wildlife ? \n\nthis.state.nursing_bronx.map((each, index) => {\n     \n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n  \n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position} icon={this.getBuildingIcon(each.Total_Staff_Confirmed)}>\n          <Circle \n                  center={{lat:each.latitude, lng: each.longitude}}\n                  fillColor={this.getNursingAidCircle(each.Staff_Total_COVID_19_Deaths)} \n                  fillOpacity = {1}\n                  radius={this.getNursingAidRadius(5)}><Tooltip>{\"Confirmed: \" + each.Total_Staff_Confirmed +  \" Deaths: \" + each.Staff_Total_COVID_19_Deaths +  \" Address: \" + each.Provider_Address}</Tooltip></Circle> \n      </Marker>\n      }})\n: ''\n        }\n\n\n        {\nthis.state.show_wildlife ? \n\nthis.state.COVID_19_Manhattan.map((each, index) => {\n      \n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n  \n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position} icon={this.getBuildingIcon(each.Total_Staff_Confirmed)}>\n          <Circle \n                  center={{lat:each.latitude, lng: each.longitude}}\n                  fillColor={this.getNursingAidCircle(each.Staff_Total_COVID_19_Deaths)} \n                  fillOpacity = {1}\n                  radius={this.getNursingAidRadius(5)}><Tooltip>{\"Confirmed: \" + each.Total_Staff_Confirmed +  \" Deaths: \" + each.Staff_Total_COVID_19_Deaths +  \" Address: \" + each.Provider_Address}</Tooltip></Circle> \n      </Marker>\n      }})\n: ''\n        } \n\n        {\nthis.state.show_wildlife ? \n\nthis.state.hospital_list.map((each, index) => {\n     \n          if (isNaN(each.location_1.longitude) === false && isNaN(each.location_1.latitude) === false && each.location_1.latitude != null && each.location_1.longitude != null) {\n  \n        var position=[each.location_1.latitude, each.location_1.longitude]\n        return <Marker key={index} position={position} icon={this.getHospitalIcon(each.death)}>\n        <Circle \n                  center={{lat:each.location_1.latitude, lng: each.location_1.longitude}}\n                  fillColor={this.getHospitalAidCircle(each.death)} \n                  fillOpacity = {1}\n                  radius={this.getNursingAidRadius(5)}><Tooltip>{\"Deaths: \" + each.death +  \" Deaths: \" + each.borough +  \" Address: \" + each.facility_name}</Tooltip></Circle> \n      </Marker>\n      }})\n: ''\n        }\n      \n        {\n          this.state.show_wildlife ? \n\nthis.state.virus_data.map((each, index) => {\n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n\n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position} icon={this.getEmptyIcon()}>\n        <Circle \n                  center={{lat:each.latitude, lng: each.longitude}}\n                  fillColor={this.getAidCircle(each.deaths)} \n                  fillOpacity = {1}\n                  radius={this.getAidRadius(each.deaths)}><Tooltip>{\"Confirmed:\" + each.confirmed}</Tooltip></Circle> \n      </Marker>\n      }})\n: ''\n\n        }\n        </Map>\n        <h3>Testing Data</h3>\n        <select onChange={this.onSelectionChanged} name=\"counties\" id=\"counties\">\n      <option value=\"New York\">Manhattan</option>\n      <option value=\"Bronx\">Bronx</option>\n      <option value=\"Queens\">Queens</option>\n     <option value=\"Kings\">Kings</option>\n      </select>\n      <hr/>\n      <Row>\n      <Col sm={{ size: 6}}>\n<BarChart width={1000} height={250} data={this.state.all_testing_data} />\n    </Col>\n    <Col sm={{ size: 5, offset: 1 }}>\n    <img alt=\"chart\" src=\"/vaxzones/images/population.png\" height=\"200px\" />\n    </Col>\n    </Row>\n\n        \n      <hr/>\n        </div>)\n\n}\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'leaflet/dist/leaflet.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}