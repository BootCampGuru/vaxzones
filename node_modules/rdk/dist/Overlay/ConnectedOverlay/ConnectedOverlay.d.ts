import { FC, Ref } from 'react';
import { TriggerTypes } from '../OverlayTrigger';
import { ReferenceProp } from '../../Position';
import { ConnectedOverlayHookOptions } from './useConnectedOverlay';
export interface OverlayEvent {
    type: TriggerTypes;
    nativeEvent: any;
}
export interface ConnectedOverlayProps extends ConnectedOverlayHookOptions {
    open: boolean;
    reference?: ReferenceProp;
    content: any;
    trigger?: TriggerTypes[] | TriggerTypes;
    triggerElement?: any;
    triggerClassName?: string;
    onActivate?: (event?: OverlayEvent) => void;
    onDeactivate?: (event?: OverlayEvent) => void;
}
export interface ConnectedOverlayRef {
    updatePosition: () => void;
}
export declare const ConnectedOverlay: FC<ConnectedOverlayProps & {
    ref?: Ref<ConnectedOverlayRef>;
}>;
