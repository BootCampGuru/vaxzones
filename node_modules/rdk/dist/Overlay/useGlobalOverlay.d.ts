import React from 'react';
export interface GlobalOverlayCommon {
    closeOnEscape?: boolean;
    closeOnBackdropClick?: boolean;
    hasBackdrop?: boolean;
    backdropClassName?: string;
    onClose?: () => void;
}
export declare const useGlobalOverlay: {
    (options?: GlobalOverlayCommon | undefined): {
        overlayIndex: number | null;
        portalIndex: number | null;
        isOpen: boolean;
        setOpen: React.Dispatch<React.SetStateAction<boolean>>;
        ref: React.RefObject<HTMLElement>;
        GlobalOverlay: ({ children }: any) => JSX.Element;
    };
    displayName: string;
    __docgenInfo: {
        description: string;
        displayName: string;
        props: {
            closeOnEscape: {
                defaultValue: null;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            closeOnBackdropClick: {
                defaultValue: null;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            hasBackdrop: {
                defaultValue: null;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            backdropClassName: {
                defaultValue: null;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
            onClose: {
                defaultValue: null;
                description: string;
                name: string;
                required: boolean;
                type: {
                    name: string;
                };
            };
        };
    };
};
