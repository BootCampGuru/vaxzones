{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('classnames'), require('ellipsize'), require('d3-array'), require('calculate-size'), require('human-format'), require('d3-shape'), require('transformation-matrix'), require('d3-scale'), require('memoize-bind'), require('react-cool-dimensions'), require('rdk'), require('big-integer'), require('chroma-js'), require('realayers'), require('memoize-one'), require('react-fast-compare'), require('framer-motion'), require('d3-interpolate'), require('d3-geo'), require('d3-sankey'), require('react-countup')) : typeof define === 'function' && define.amd ? define(['exports', 'react', 'classnames', 'ellipsize', 'd3-array', 'calculate-size', 'human-format', 'd3-shape', 'transformation-matrix', 'd3-scale', 'memoize-bind', 'react-cool-dimensions', 'rdk', 'big-integer', 'chroma-js', 'realayers', 'memoize-one', 'react-fast-compare', 'framer-motion', 'd3-interpolate', 'd3-geo', 'd3-sankey', 'react-countup'], factory) : (global = global || self, factory(global.reaviz = {}, global.React, global.classNames, global.ellipsize, global.d3Array, global.calculateSize, global.humanFormat, global.d3Shape, global.transformationMatrix, global.d3Scale, global.bind, global.useDimensions, global.rdk, global.bigInt, global.chroma, global.realayers, global.memoize, global.isEqual, global.framerMotion, global.d3Interpolate, global.d3Geo, global.d3Sankey, global.CountUp));\n})(this, function (exports, React, classNames, ellipsize, d3Array, calculateSize, humanFormat, d3Shape, transformationMatrix, d3Scale, bind, useDimensions, rdk, bigInt, chroma, realayers, memoize, isEqual, framerMotion, d3Interpolate, d3Geo, d3Sankey, CountUp) {\n  'use strict';\n\n  var React__default = 'default' in React ? React['default'] : React;\n  classNames = classNames && Object.prototype.hasOwnProperty.call(classNames, 'default') ? classNames['default'] : classNames;\n  ellipsize = ellipsize && Object.prototype.hasOwnProperty.call(ellipsize, 'default') ? ellipsize['default'] : ellipsize;\n  calculateSize = calculateSize && Object.prototype.hasOwnProperty.call(calculateSize, 'default') ? calculateSize['default'] : calculateSize;\n  humanFormat = humanFormat && Object.prototype.hasOwnProperty.call(humanFormat, 'default') ? humanFormat['default'] : humanFormat;\n  bind = bind && Object.prototype.hasOwnProperty.call(bind, 'default') ? bind['default'] : bind;\n  useDimensions = useDimensions && Object.prototype.hasOwnProperty.call(useDimensions, 'default') ? useDimensions['default'] : useDimensions;\n  bigInt = bigInt && Object.prototype.hasOwnProperty.call(bigInt, 'default') ? bigInt['default'] : bigInt;\n  chroma = chroma && Object.prototype.hasOwnProperty.call(chroma, 'default') ? chroma['default'] : chroma;\n  memoize = memoize && Object.prototype.hasOwnProperty.call(memoize, 'default') ? memoize['default'] : memoize;\n  isEqual = isEqual && Object.prototype.hasOwnProperty.call(isEqual, 'default') ? isEqual['default'] : isEqual;\n  CountUp = CountUp && Object.prototype.hasOwnProperty.call(CountUp, 'default') ? CountUp['default'] : CountUp;\n\n  class LinearAxisTickLabel extends React.Component {\n    getAlign() {\n      const {\n        align,\n        half\n      } = this.props;\n\n      if ((align === 'inside' || align === 'outside') && half === 'center') {\n        return 'center';\n      }\n\n      if (align === 'inside') {\n        return half === 'start' ? 'end' : 'start';\n      }\n\n      if (align === 'outside') {\n        return half === 'start' ? 'start' : 'end';\n      }\n\n      return align;\n    }\n\n    getTickLineSpacing() {\n      const {\n        line\n      } = this.props;\n\n      if (!line) {\n        return [0, 0];\n      }\n\n      const size = line.props.size;\n      const position = line.props.position;\n\n      if (position === 'start') {\n        return [size * -1, 0];\n      } else if (position === 'end') {\n        return [0, size];\n      } else {\n        return [size * -0.5, size * 0.5];\n      }\n    }\n\n    getOffset() {\n      const {\n        padding,\n        position,\n        rotation,\n        orientation\n      } = this.props;\n      const adjustedPadding = typeof padding === 'number' ? {\n        fromAxis: padding,\n        alongAxis: padding\n      } : padding;\n      const spacing = this.getTickLineSpacing();\n      const offset1 = position === 'start' ? spacing[0] - adjustedPadding.fromAxis : position === 'end' ? spacing[1] + adjustedPadding.fromAxis : 0;\n      const align = this.getAlign();\n      let offset2 = rotation === true ? -5 : 0;\n      offset2 += align === 'center' ? 0 : align === 'start' ? -adjustedPadding.alongAxis : adjustedPadding.alongAxis;\n      const horz = orientation === 'horizontal';\n      return {\n        [horz ? 'x' : 'y']: offset2,\n        [horz ? 'y' : 'x']: offset1\n      };\n    }\n\n    getTextPosition() {\n      const {\n        angle,\n        orientation,\n        position\n      } = this.props;\n      let transform = '';\n      let textAnchor = '';\n      let alignmentBaseline = 'middle';\n\n      if (angle !== 0) {\n        transform = `rotate(${angle})`;\n        textAnchor = 'end';\n      } else {\n        const align = this.getAlign();\n\n        if (orientation === 'horizontal') {\n          textAnchor = align === 'center' ? 'middle' : align === 'start' ? 'end' : 'start';\n\n          if (position === 'start') {\n            alignmentBaseline = 'baseline';\n          } else if (position === 'end') {\n            alignmentBaseline = 'hanging';\n          }\n        } else {\n          alignmentBaseline = align === 'center' ? 'middle' : align === 'start' ? 'baseline' : 'hanging';\n\n          if (position === 'start') {\n            textAnchor = 'end';\n          } else if (position === 'end') {\n            textAnchor = 'start';\n          } else {\n            textAnchor = 'middle';\n          }\n        }\n      }\n\n      return {\n        transform,\n        textAnchor: this.props.textAnchor || textAnchor,\n        alignmentBaseline\n      };\n    }\n\n    render() {\n      const {\n        fill,\n        text,\n        fullText,\n        fontSize,\n        fontFamily,\n        className\n      } = this.props;\n      const {\n        x,\n        y\n      } = this.getOffset();\n      const textPosition = this.getTextPosition();\n      return React__default.createElement(\"g\", {\n        transform: `translate(${x}, ${y})`,\n        fontSize: fontSize,\n        fontFamily: fontFamily\n      }, React__default.createElement(\"title\", null, fullText), React__default.createElement(\"text\", Object.assign({}, textPosition, {\n        fill: fill,\n        className: className\n      }), text));\n    }\n\n  }\n\n  LinearAxisTickLabel.defaultProps = {\n    fill: '#8F979F',\n    fontSize: 11,\n    fontFamily: 'sans-serif',\n    rotation: true,\n    padding: 0,\n    align: 'center'\n  };\n\n  class LinearAxisTickLine extends React.PureComponent {\n    positionTick() {\n      const {\n        size,\n        position,\n        orientation\n      } = this.props;\n      const isVertical = orientation === 'vertical';\n      const tickSize = size || 0;\n      const start = position === 'start' ? tickSize * -1 : position === 'center' ? tickSize * -0.5 : 0;\n      const end = start + tickSize;\n      return {\n        x1: isVertical ? end : 0,\n        x2: isVertical ? start : 0,\n        y1: isVertical ? 0 : start,\n        y2: isVertical ? 0 : end\n      };\n    }\n\n    render() {\n      const {\n        strokeColor,\n        strokeWidth,\n        className\n      } = this.props;\n      const path = this.positionTick();\n      return React__default.createElement(\"line\", Object.assign({\n        className: className,\n        strokeWidth: strokeWidth,\n        stroke: strokeColor\n      }, path));\n    }\n\n  }\n\n  LinearAxisTickLine.defaultProps = {\n    strokeColor: '#8F979F',\n    strokeWidth: 1,\n    size: 5\n  }; // https://stackoverflow.com/questions/673905/best-way-to-determine-users-locale-within-browser\n\n  const getNavigatorLanguage = () => {\n    if (typeof window === 'undefined') {\n      return 'en';\n    }\n\n    if (navigator.languages && navigator.languages.length) {\n      return navigator.languages[0];\n    }\n\n    if (navigator.userLanguage || navigator.language || navigator.browserLanguage) {\n      return 'en';\n    }\n  };\n\n  const locale = getNavigatorLanguage();\n  const options = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour12: true,\n    formatMatcher: 'best fit'\n  };\n  /**\r\n   * Format a value based on type.\r\n   */\n\n  function formatValue(value) {\n    if (value !== undefined) {\n      if (value instanceof Date) {\n        return value.toLocaleDateString(locale, options);\n      } else if (typeof value === 'number') {\n        return value.toLocaleString();\n      }\n\n      return value;\n    }\n\n    return 'No value';\n  }\n\n  const ONE_DAY = 60 * 60 * 24;\n  const DURATION_TICK_STEPS = [0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1, 5, 10, 15, 60, 60 * 15, 60 * 30, 60 * 60, 60 * 60 * 2, 60 * 60 * 4, 60 * 60 * 6, 60 * 60 * 8, 60 * 60 * 12, ONE_DAY // 24 h\n  ];\n  /**\r\n   * Reduce the ticks to the max number of ticks.\r\n   */\n\n  function reduceTicks(ticks, maxTicks) {\n    if (ticks.length > maxTicks) {\n      const reduced = [];\n      const modulus = Math.floor(ticks.length / maxTicks);\n\n      for (let i = 0; i < ticks.length; i++) {\n        if (i % modulus === 0) {\n          reduced.push(ticks[i]);\n        }\n      }\n\n      ticks = reduced;\n    }\n\n    return ticks;\n  }\n  /**\r\n   * Determine the max ticks for the available width.\r\n   */\n\n\n  function getMaxTicks(size, dimension) {\n    const tickWidth = Math.max(size, 0);\n    return Math.floor(dimension / tickWidth);\n  }\n  /**\r\n   * Formats the ticks in a duration format.\r\n   */\n\n\n  function getDurationTicks(domain, maxTicks) {\n    const domainWidth = domain[1] - domain[0];\n    let tickStep = null;\n\n    for (const s of DURATION_TICK_STEPS) {\n      if (domainWidth / s < maxTicks) {\n        tickStep = s;\n        break;\n      }\n    }\n\n    if (tickStep === null) {\n      const numDayTicks = domainWidth / ONE_DAY;\n      const dayStep = Math.ceil(numDayTicks / maxTicks);\n      tickStep = ONE_DAY * dayStep;\n    }\n\n    const ticks = [domain[0]];\n\n    while (ticks[ticks.length - 1] + tickStep <= domain[1]) {\n      ticks.push(ticks[ticks.length - 1] + tickStep);\n    }\n\n    return ticks;\n  }\n  /**\r\n   * Get the tick values from the scale.\r\n   */\n\n\n  function getTicks(scale, tickValues, type, maxTicks = 100, interval) {\n    let result;\n\n    if (tickValues) {\n      result = tickValues;\n    } else {\n      if (scale.ticks) {\n        if (type === 'duration') {\n          result = getDurationTicks(scale.domain(), maxTicks);\n        } else if (interval) {\n          result = scale.ticks(interval);\n        } else {\n          if (type === 'time') {\n            // If its time, we need to handle the time count\n            // manually because d3 does this odd rounding\n            result = scale.ticks();\n            result = reduceTicks(result, maxTicks);\n          } else {\n            result = scale.ticks(maxTicks);\n          }\n        }\n      } else {\n        tickValues = scale.domain();\n        result = reduceTicks(tickValues, maxTicks);\n      }\n    }\n\n    return result;\n  }\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n\n  function __rest(s, e) {\n    var t = {};\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n  }\n  /**\r\n   * CloneElement is a wrapper component for createElement function.\r\n   * This allows you to describe your cloning element declaratively\r\n   * which is a more natural API for React.\r\n   */\n\n\n  function CloneElement(_a) {\n    var {\n      children,\n      element,\n      childRef\n    } = _a,\n        rest = __rest(_a, [\"children\", \"element\", \"childRef\"]);\n\n    const getProjectedProps = React.useMemo(() => props => {\n      const childProps = element.props;\n      return Object.keys(props).reduce((acc, key) => {\n        const prop = props[key];\n        const childProp = childProps[key];\n\n        if (typeof prop === 'function' && typeof childProp === 'function') {\n          acc[key] = args => {\n            prop(args);\n            childProp(args);\n          };\n        } else if (key === 'className') {\n          acc[key] = classNames(prop, childProp);\n        } else {\n          acc[key] = prop;\n        }\n\n        return acc;\n      }, {});\n    }, [rest]);\n\n    if (element === null) {\n      return children;\n    } // Tricky logic around functional vs class components\n\n\n    const ref = childRef ? node => {\n      if (typeof childRef === 'function') {\n        childRef(node);\n      } else if (ref) {\n        childRef.current = node;\n      }\n    } : undefined;\n    const newProps = getProjectedProps(rest);\n    return React.cloneElement(element, Object.assign(Object.assign(Object.assign({}, element.props), newProps), {\n      children,\n      ref\n    }));\n  }\n\n  const calculateDimensions = (text, fontFamily, fontSize) => {\n    // SSR Rendering doesn't support canvas measurements\n    // we have to make a guess in this case...\n    if (typeof document === 'undefined') {\n      return {\n        width: text.length * 8,\n        height: 25\n      };\n    }\n\n    return calculateSize(text, {\n      font: fontFamily,\n      fontSize: `${fontSize}px`\n    });\n  };\n\n  class LinearAxisTickSeries extends React.Component {\n    /**\r\n     * Gets the adjusted scale given offsets.\r\n     */\n    getAdjustedScale() {\n      const {\n        scale\n      } = this.props;\n\n      if (scale.bandwidth) {\n        let offset = scale.bandwidth() / 2;\n\n        if (scale.round()) {\n          offset = Math.round(offset);\n        }\n\n        return d => +scale(d) + offset;\n      } else {\n        return d => +scale(d);\n      }\n    }\n    /**\r\n     * Gets the x/y position for a given tick.\r\n     */\n\n\n    getPosition(scaledTick) {\n      const {\n        orientation\n      } = this.props;\n\n      if (orientation === 'horizontal') {\n        return {\n          x: scaledTick,\n          y: 0\n        };\n      } else {\n        return {\n          x: 0,\n          y: scaledTick\n        };\n      }\n    }\n    /**\r\n     * Gets the dimension (height/width) this axis is calculating on.\r\n     */\n\n\n    getDimension() {\n      const {\n        height,\n        width,\n        orientation\n      } = this.props;\n      return orientation === 'vertical' ? height : width;\n    }\n    /**\r\n     * Calculates the rotation angle that the ticks need to be shifted to.\r\n     * This equation will measure the length of the text in a external canvas\r\n     * object and determine what the longest label is and rotate until they fit.\r\n     */\n\n\n    getRotationAngle(ticks) {\n      if (!this.props.label) {\n        return 0;\n      }\n\n      const label = this.props.label.props;\n      const dimension = this.getDimension();\n      const maxTicksLength = d3Array.max(ticks, tick => tick.width);\n      let angle = 0;\n\n      if (label.rotation) {\n        if (label.rotation === true) {\n          let baseWidth = maxTicksLength;\n          const maxBaseWidth = Math.floor(dimension / ticks.length);\n\n          while (baseWidth > maxBaseWidth && angle > -90) {\n            angle -= 30;\n            baseWidth = Math.cos(angle * (Math.PI / 180)) * maxTicksLength;\n          }\n        } else {\n          angle = label.rotation;\n        }\n      }\n\n      return angle;\n    }\n    /**\r\n     * Gets the formatted label of the tick.\r\n     */\n\n\n    getLabelFormat() {\n      const {\n        label,\n        scale\n      } = this.props;\n\n      if (label && label.props.format) {\n        return label.props.format;\n      } else if (scale.tickFormat) {\n        return scale.tickFormat.apply(scale, [5]);\n      } else {\n        return v => formatValue(v);\n      }\n    }\n    /**\r\n     * Gets the ticks given the dimensions and scales and returns\r\n     * the text and position.\r\n     */\n\n\n    getTicks() {\n      const {\n        scale,\n        tickSize,\n        tickValues,\n        interval,\n        axis,\n        label\n      } = this.props;\n      const dimension = this.getDimension();\n      const maxTicks = getMaxTicks(tickSize, dimension);\n      const ticks = getTicks(scale, tickValues, axis.type, maxTicks, interval);\n      const adjustedScale = this.getAdjustedScale();\n      const format = this.getLabelFormat();\n      const midpoint = dimension / 2;\n      return ticks.map(tick => {\n        const fullText = format(tick);\n        const scaledTick = adjustedScale(tick);\n        const position = this.getPosition(scaledTick);\n        const text = ellipsize(fullText, 18);\n        const size = label ? calculateDimensions(text, label.props.fontFamily, label.props.fontSize.toString()) : {};\n        return Object.assign(Object.assign(Object.assign({}, position), size), {\n          text,\n          fullText,\n          half: scaledTick === midpoint ? 'center' : scaledTick < midpoint ? 'start' : 'end'\n        });\n      });\n    }\n\n    render() {\n      const {\n        label,\n        line,\n        height,\n        width,\n        orientation\n      } = this.props;\n      const ticks = this.getTicks();\n      const angle = this.getRotationAngle(ticks);\n      return React__default.createElement(React.Fragment, null, ticks.map((tick, i) => React__default.createElement(\"g\", {\n        key: i,\n        transform: `translate(${tick.x}, ${tick.y})`\n      }, line && React__default.createElement(CloneElement, {\n        element: line,\n        height: height,\n        width: width,\n        orientation: orientation\n      }), label && React__default.createElement(CloneElement, {\n        element: label,\n        text: tick.text,\n        fullText: tick.fullText,\n        half: tick.half,\n        angle: angle,\n        orientation: orientation,\n        line: line\n      }))));\n    }\n\n  }\n\n  LinearAxisTickSeries.defaultProps = {\n    line: React__default.createElement(LinearAxisTickLine, null),\n    label: React__default.createElement(LinearAxisTickLabel, null),\n    tickSize: 30\n  };\n  const humanFormatScale = new humanFormat.Scale({\n    k: 1000,\n    M: 1000000,\n    B: 1000000000\n  });\n  const humanFormatMillionScale = new humanFormat.Scale({\n    M: 1,\n    B: 1000,\n    T: 1000000\n  });\n  const ONE_MILLION = 1000000;\n  const ONE_BILLION = 1000000000;\n\n  const humanFormatBigInteger = bigInteger => {\n    if (bigInteger.greater(ONE_BILLION)) {\n      return humanFormat(bigInteger.divide(ONE_MILLION).toJSNumber(), {\n        scale: humanFormatMillionScale\n      });\n    }\n\n    return humanFormat(bigInteger.toJSNumber(), {\n      scale: humanFormatScale\n    });\n  };\n\n  const bigIntegerToLocaleString = bigInteger => {\n    let i = 0;\n    let formattedString = '';\n\n    for (const c of bigInteger.toString().split('').reverse()) {\n      if (i > 0 && i % 3 === 0) {\n        formattedString = ',' + formattedString;\n      }\n\n      formattedString = c + formattedString;\n      i++;\n    }\n\n    return formattedString;\n  };\n  /**\r\n   * Given a margins object, returns the top/left/right/bottom positions.\r\n   */\n\n\n  function parseMargins(margins) {\n    let top = 0;\n    let right = 0;\n    let bottom = 0;\n    let left = 0;\n\n    if (Array.isArray(margins)) {\n      if (margins.length === 2) {\n        top = margins[0];\n        bottom = margins[0];\n        left = margins[1];\n        right = margins[1];\n      } else if (margins.length === 4) {\n        top = margins[0];\n        right = margins[1];\n        bottom = margins[2];\n        left = margins[3];\n      }\n    } else if (margins !== undefined) {\n      top = margins;\n      right = margins;\n      bottom = margins;\n      left = margins;\n    }\n\n    return {\n      top,\n      right,\n      bottom,\n      left\n    };\n  }\n  /**\r\n   * Calculates the margins for the chart.\r\n   */\n\n\n  function calculateMarginOffsets(height, width, margins) {\n    const {\n      left,\n      right,\n      bottom,\n      top\n    } = margins;\n    const newHeight = height - top - bottom;\n    const newWidth = width - left - right;\n    return {\n      height: newHeight,\n      width: newWidth\n    };\n  }\n  /**\r\n   * Calculates the dimensions for the chart.\r\n   */\n\n\n  function getDimension({\n    xOffset,\n    yOffset,\n    height,\n    width,\n    margins\n  }) {\n    const parsedMargins = parseMargins(margins);\n    const marginDims = calculateMarginOffsets(height, width, parsedMargins);\n    const chartWidth = marginDims.width - xOffset;\n    const chartHeight = marginDims.height - yOffset;\n    return {\n      xOffset,\n      yOffset,\n      height,\n      width,\n      chartWidth,\n      chartHeight,\n      xMargin: xOffset + parsedMargins.left,\n      yMargin: parsedMargins.top\n    };\n  }\n  /**\r\n   * Gets the min/max values handling nested arrays.\r\n   */\n\n\n  function extent(data, attr) {\n    const accessor = (val, fn) => {\n      if (Array.isArray(val.data)) {\n        return fn(val.data, vv => vv[attr]);\n      }\n\n      return val[attr];\n    };\n\n    const minVal = d3Array.min(data, d => accessor(d, d3Array.min));\n    const maxVal = d3Array.max(data, d => accessor(d, d3Array.max));\n    return [minVal, maxVal];\n  }\n  /**\r\n   * Get the domain for the Y Axis.\r\n   */\n\n\n  function getYDomain({\n    data,\n    scaled = false,\n    isDiverging = false\n  }) {\n    const [startY, endY] = extent(data, 'y');\n    const [startY1, endY1] = extent(data, 'y1'); // If dealing w/ negative numbers, we should\n    // normalize the top and bottom values\n\n    if (startY < 0 || isDiverging) {\n      const posStart = -startY;\n      const maxNum = Math.max(posStart, endY);\n      return [-maxNum, maxNum];\n    } // Scaled start scale at non-zero\n\n\n    if (scaled) {\n      return [startY1, endY1];\n    } // Start at 0 based\n\n\n    return [0, endY1];\n  }\n  /**\r\n   * Get the domain for the X Axis.\r\n   */\n\n\n  function getXDomain({\n    data,\n    scaled = false,\n    isDiverging = false\n  }) {\n    const startX0 = extent(data, 'x0')[0];\n    const endX1 = extent(data, 'x1')[1]; // Histograms use dates for start/end\n\n    if (typeof startX0 === 'number' && typeof endX1 === 'number') {\n      // If dealing w/ negative numbers, we should\n      // normalize the top and bottom values\n      if (startX0 < 0 || isDiverging) {\n        const posStart = -startX0;\n        const maxNum = Math.max(posStart, endX1);\n        return [-maxNum, maxNum];\n      } // If not scaled, return 0/max domains\n\n\n      if (!scaled) {\n        return [0, endX1];\n      }\n    } // Scaled start scale at non-zero\n\n\n    return [startX0, endX1];\n  }\n  /**\r\n   * Helper function for interpolation.\r\n   */\n\n\n  function interpolate(type) {\n    if (type === 'smooth') {\n      return d3Shape.curveMonotoneX;\n    } else if (type === 'step') {\n      return d3Shape.curveStep;\n    } else {\n      return d3Shape.curveLinear;\n    }\n  }\n  /**\r\n   * Add ability to calculate scale band position.\r\n   * Reference: https://stackoverflow.com/questions/38633082/d3-getting-invert-value-of-band-scales\r\n   */\n\n\n  const scaleBandInvert = scale => {\n    const domain = scale.domain();\n    const paddingOuter = scale(domain[0]);\n    const eachBand = scale.step();\n    const [, end] = scale.range();\n    return offset => {\n      let index = Math.floor((offset - paddingOuter) / eachBand); // Handle horizontal charts...\n\n      if (end === 0) {\n        index = index * -1;\n      }\n\n      return domain[Math.max(0, Math.min(index, domain.length - 1))];\n    };\n  };\n  /**\r\n   * Given a point position, get the closes data point in the dataset.\r\n   */\n\n\n  const getClosestPoint = (pos, scale, data, attr = 'x') => {\n    if (scale.invert) {\n      const domain = scale.invert(pos); // Select the index\n\n      const bisect = d3Array.bisector(d => d[attr]).right;\n      const index = bisect(data, domain); // Determine min index\n\n      const minIndex = Math.max(0, index - 1);\n      const before = data[minIndex]; // Determine max index\n\n      const maxIndex = Math.min(data.length - 1, index);\n      const after = data[maxIndex]; // Determine which is closest to the point\n\n      let beforeVal = before[attr];\n      let afterVal = after[attr];\n      beforeVal = domain - beforeVal;\n      afterVal = afterVal - domain;\n      return beforeVal < afterVal ? before : after;\n    } else {\n      // If we have a band scale, handle that special\n      const domain = scale.domain();\n      let prop; // Of course the Marimekko is a pain...\n\n      if (scale.mariemkoInvert) {\n        prop = scale.mariemkoInvert(pos);\n      } else {\n        prop = scaleBandInvert(scale)(pos);\n      }\n\n      const idx = domain.indexOf(prop);\n      return data[idx];\n    }\n  };\n  /**\r\n   * Given an event, get the parent svg element;\r\n   */\n\n\n  const getParentSVG = event => {\n    // set node to targets owner svg\n    let node = event.target.ownerSVGElement; // find the outermost svg\n\n    if (node) {\n      while (node.ownerSVGElement) {\n        node = node.ownerSVGElement;\n      }\n    }\n\n    return node;\n  };\n  /**\r\n   * Given an event, get the relative X/Y position for a target.\r\n   */\n\n\n  const getPositionForTarget = ({\n    target,\n    clientX,\n    clientY\n  }) => {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    return {\n      x: clientX - left - target.clientLeft,\n      y: clientY - top - target.clientTop\n    };\n  };\n  /**\r\n   * Gets the point from q given matrix.\r\n   */\n\n\n  const getPointFromMatrix = (event, matrix) => {\n    const parent = getParentSVG(event);\n\n    if (!parent) {\n      return null;\n    } // Determines client coordinates relative to the editor component\n\n\n    const {\n      top,\n      left\n    } = parent.getBoundingClientRect();\n    const x = event.clientX - left;\n    const y = event.clientY - top; // Transforms the coordinate to world coordinate (in the SVG/DIV world)\n\n    return transformationMatrix.applyToPoint(transformationMatrix.inverse(matrix), {\n      x,\n      y\n    });\n  };\n  /**\r\n   * Get the start/end matrix.\r\n   */\n\n\n  const getLimitMatrix = (height, width, matrix) => transformationMatrix.applyToPoints(matrix, [{\n    x: 0,\n    y: 0\n  }, {\n    x: width,\n    y: height\n  }]);\n  /**\r\n   * Constrain the matrix.\r\n   */\n\n\n  const constrainMatrix = (height, width, matrix) => {\n    const [min, max] = getLimitMatrix(height, width, matrix);\n\n    if (max.x < width || max.y < height) {\n      return true;\n    }\n\n    if (min.x > 0 || min.y > 0) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\r\n   * Determine if scale factor is less than allowed.\r\n   */\n\n\n  const lessThanScaleFactorMin = (value, scaleFactor) => value.scaleFactorMin && value.d * scaleFactor <= value.scaleFactorMin;\n  /**\r\n   * Determine if scale factor is larger than allowed.\r\n   */\n\n\n  const moreThanScaleFactorMax = (value, scaleFactor) => value.scaleFactorMax && value.d * scaleFactor >= value.scaleFactorMax;\n  /**\r\n   * Determine if both min and max scale fctors are going out of bounds.\r\n   */\n\n\n  const isZoomLevelGoingOutOfBounds = (value, scaleFactor) => {\n    const a = lessThanScaleFactorMin(value, scaleFactor) && scaleFactor < 1;\n    const b = moreThanScaleFactorMax(value, scaleFactor) && scaleFactor > 1;\n    return a || b;\n  };\n  /**\r\n   * Toggle the text selection of the body.\r\n   */\n\n\n  function toggleTextSelection(allowSelection) {\n    const style = allowSelection ? '' : 'none';\n    ['-webkit-touch-callout', '-webkit-user-select', '-khtml-user-select', '-moz-user-select', '-ms-user-select', 'user-select'].forEach(prop => document.body.style[prop] = style);\n  }\n  /**\r\n   * Calculates whether the stroke should be shown.\r\n   */\n\n\n  function calculateShowStroke(current, data) {\n    const i = data.indexOf(current);\n    let showLine = false;\n    const prev = data[i - 1];\n\n    if (i > 0 && prev.y) {\n      showLine = true;\n    }\n\n    const cur = data[i];\n\n    if (cur.y) {\n      showLine = true;\n    }\n\n    const next = data[i + 1];\n\n    if (i < data.length - 1 && next.y) {\n      showLine = true;\n    }\n\n    return showLine;\n  }\n  /**\r\n   * Get the angle from a radian.\r\n   */\n\n\n  const getDegrees = radians => radians / Math.PI * 180 - 90;\n\n  const functionProps = (prop, val, data) => {\n    if (typeof val === 'function') {\n      return val(data);\n    } else if (prop === 'className') {\n      return classNames(val);\n    } else if (val !== undefined || val !== null) {\n      return val;\n    }\n\n    return {};\n  };\n\n  const constructFunctionProps = (props, data) => ({\n    className: functionProps('className', props.className, data),\n    style: functionProps('style', props.style, data)\n  });\n  /**\r\n   * Given a dataset and a list of accessors, returns a unique collection.\r\n   */\n\n\n  function uniqueBy(data, ...accessors) {\n    const result = [];\n\n    const ittr = (arr, depth) => {\n      for (const a of arr) {\n        const acc = accessors[depth];\n\n        if (acc === undefined) {\n          throw new Error(`Accessor not found for depth: ${depth}`);\n        }\n\n        const val = acc(a);\n\n        if (Array.isArray(val)) {\n          ittr(val, depth + 1);\n        } else if (!result.includes(val)) {\n          result.push(val);\n        }\n      }\n    };\n\n    ittr(data, 0);\n    return result;\n  }\n\n  let axisLineId = 0;\n\n  class LinearAxisLine extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        id: (axisLineId++).toString()\n      };\n    }\n\n    render() {\n      const {\n        strokeColor,\n        strokeGradient,\n        scale,\n        orientation,\n        className\n      } = this.props;\n      const {\n        id\n      } = this.state;\n      const [range0, range1] = scale.range();\n      return React__default.createElement(React.Fragment, null, React__default.createElement(\"line\", {\n        className: className,\n        x1: orientation === 'vertical' ? 0 : range0,\n        // Workaround for a Chrome/Firefox bug where it won't render gradients for straight lines\n        x2: orientation === 'vertical' ? 0.00001 : range1,\n        y1: orientation === 'vertical' ? range0 : 0,\n        y2: orientation === 'vertical' ? range1 : 0.00001,\n        strokeWidth: 1,\n        stroke: strokeGradient ? `url(#axis-gradient-${id})` : strokeColor\n      }), strokeGradient && React__default.createElement(CloneElement, {\n        element: strokeGradient,\n        id: `axis-gradient-${id}`\n      }));\n    }\n\n  }\n\n  LinearAxisLine.defaultProps = {\n    strokeColor: '#8F979F',\n    strokeWidth: 1\n  };\n\n  class LinearAxis extends React.Component {\n    constructor(props) {\n      super(props);\n      this.ref = React.createRef();\n      this.state = {\n        height: props.height,\n        width: props.width\n      };\n    }\n\n    componentDidMount() {\n      this.updateDimensions();\n    }\n\n    componentDidUpdate(prevProps) {\n      const {\n        height,\n        width,\n        scale\n      } = this.props;\n\n      if (width !== prevProps.width || height !== prevProps.height || scale !== prevProps.scale) {\n        this.updateDimensions();\n      }\n    }\n\n    updateDimensions() {\n      const {\n        onDimensionsChange,\n        orientation,\n        position\n      } = this.props;\n      const shouldOffset = position !== 'center';\n      let height;\n      let width;\n\n      if (shouldOffset) {\n        const dims = this.ref.current.getBoundingClientRect();\n        width = Math.floor(dims.width);\n        height = Math.floor(dims.height);\n      }\n\n      if (orientation === 'vertical') {\n        if (this.state.width !== width) {\n          this.setState({\n            width\n          });\n          onDimensionsChange({\n            width\n          });\n        }\n      } else {\n        if (this.state.height !== height) {\n          this.setState({\n            height\n          });\n          onDimensionsChange({\n            height\n          });\n        }\n      }\n    }\n\n    getPosition() {\n      const {\n        position,\n        width,\n        height,\n        orientation\n      } = this.props;\n      let translateY = 0;\n      let translateX = 0;\n\n      if (position === 'end' && orientation === 'horizontal') {\n        translateY = height;\n      } else if (position === 'center' && orientation === 'horizontal') {\n        translateY = height / 2;\n      } else if (position === 'end' && orientation === 'vertical') {\n        translateX = width;\n      } else if (position === 'center' && orientation === 'vertical') {\n        translateX = width / 2;\n      }\n\n      return {\n        translateX,\n        translateY\n      };\n    }\n\n    render() {\n      const {\n        scale,\n        height,\n        width,\n        orientation,\n        axisLine,\n        tickSeries\n      } = this.props;\n      const {\n        translateX,\n        translateY\n      } = this.getPosition();\n      return React__default.createElement(\"g\", {\n        transform: `translate(${translateX}, ${translateY})`,\n        ref: this.ref\n      }, axisLine && React__default.createElement(CloneElement, {\n        element: axisLine,\n        height: height,\n        width: width,\n        scale: scale,\n        orientation: orientation\n      }), (tickSeries.props.line || tickSeries.props.label) && React__default.createElement(CloneElement, {\n        element: tickSeries,\n        height: height,\n        width: width,\n        scale: scale,\n        orientation: orientation,\n        axis: this.props\n      }));\n    }\n\n  }\n\n  LinearAxis.defaultProps = {\n    axisLine: React__default.createElement(LinearAxisLine, null),\n    tickSeries: React__default.createElement(LinearAxisTickSeries, null),\n    scaled: false,\n    roundDomains: false,\n    onDimensionsChange: () => undefined\n  };\n\n  class LinearXAxisTickLabel extends React.Component {\n    render() {\n      return React__default.createElement(LinearAxisTickLabel, Object.assign({}, this.props));\n    }\n\n  }\n\n  LinearXAxisTickLabel.defaultProps = Object.assign(Object.assign({}, LinearAxisTickLabel.defaultProps), {\n    rotation: true,\n    position: 'end',\n    align: 'center'\n  });\n\n  class LinearXAxisTickLine extends React.Component {\n    render() {\n      return React__default.createElement(LinearAxisTickLine, Object.assign({}, this.props));\n    }\n\n  }\n\n  LinearXAxisTickLine.defaultProps = Object.assign(Object.assign({}, LinearAxisTickLine.defaultProps), {\n    position: 'end'\n  });\n\n  class LinearXAxisTickSeries extends React.Component {\n    render() {\n      return React__default.createElement(LinearAxisTickSeries, Object.assign({}, this.props));\n    }\n\n  }\n\n  LinearXAxisTickSeries.defaultProps = Object.assign(Object.assign({}, LinearAxisTickSeries.defaultProps), {\n    tickSize: 75,\n    line: React__default.createElement(LinearXAxisTickLine, null),\n    label: React__default.createElement(LinearXAxisTickLabel, null)\n  });\n\n  class LinearXAxis extends React.Component {\n    render() {\n      return React__default.createElement(LinearAxis, Object.assign({}, this.props));\n    }\n\n  }\n\n  LinearXAxis.defaultProps = Object.assign(Object.assign({}, LinearAxis.defaultProps), {\n    position: 'end',\n    roundDomains: false,\n    scaled: false,\n    type: 'value',\n    orientation: 'horizontal',\n    tickSeries: React__default.createElement(LinearXAxisTickSeries, null)\n  });\n\n  class LinearYAxisTickLabel extends React.Component {\n    render() {\n      return React__default.createElement(LinearAxisTickLabel, Object.assign({}, this.props));\n    }\n\n  }\n\n  LinearYAxisTickLabel.defaultProps = Object.assign(Object.assign({}, LinearAxisTickLabel.defaultProps), {\n    rotation: false,\n    position: 'start',\n    align: 'center'\n  });\n\n  class LinearYAxisTickLine extends React.Component {\n    render() {\n      return React__default.createElement(LinearAxisTickLine, Object.assign({}, this.props));\n    }\n\n  }\n\n  LinearYAxisTickLine.defaultProps = Object.assign(Object.assign({}, LinearAxisTickLine.defaultProps), {\n    position: 'start'\n  });\n\n  class LinearYAxisTickSeries extends React.Component {\n    render() {\n      return React__default.createElement(LinearAxisTickSeries, Object.assign({}, this.props));\n    }\n\n  }\n\n  LinearYAxisTickSeries.defaultProps = Object.assign(Object.assign({}, LinearAxisTickSeries.defaultProps), {\n    tickSize: 30,\n    line: React__default.createElement(LinearYAxisTickLine, null),\n    label: React__default.createElement(LinearYAxisTickLabel, null)\n  });\n\n  class LinearYAxis extends React.Component {\n    render() {\n      return React__default.createElement(LinearAxis, Object.assign({}, this.props));\n    }\n\n  }\n\n  LinearYAxis.defaultProps = Object.assign(Object.assign({}, LinearAxis.defaultProps), {\n    orientation: 'vertical',\n    scaled: false,\n    roundDomains: false,\n    type: 'value',\n    position: 'start',\n    tickSeries: React__default.createElement(LinearYAxisTickSeries, null)\n  });\n  /**\r\n   * Returns whether the axis has a visual element or not.\r\n   */\n\n  const isAxisVisible = axis => !!axis.tickSeries.props.label || !!axis.tickSeries.props.line;\n\n  class RadialAxisTickLine extends React.PureComponent {\n    render() {\n      const {\n        stroke,\n        size,\n        position,\n        innerRadius,\n        outerRadius\n      } = this.props;\n      const x1 = position === 'outside' ? size : -(outerRadius - innerRadius);\n      return React__default.createElement(\"line\", {\n        x1: x1,\n        x2: 0,\n        stroke: stroke,\n        style: {\n          pointerEvents: 'none'\n        }\n      });\n    }\n\n  }\n\n  RadialAxisTickLine.defaultProps = {\n    stroke: 'rgba(113, 128, 141, .5)',\n    size: 10,\n    position: 'inside'\n  };\n\n  const rad2deg = angle => angle * 180 / Math.PI;\n\n  class RadialAxisTickLabel extends React.PureComponent {\n    getPosition() {\n      const {\n        point,\n        autoRotate,\n        rotation,\n        padding\n      } = this.props;\n      let textAnchor;\n      let transform;\n\n      if (autoRotate) {\n        const l = point >= Math.PI;\n        const r = point < 2 * Math.PI; // TODO: This centers the text, determine better way later\n\n        if (rotation >= 85 && rotation <= 95 || rotation <= -85 && rotation >= -95) {\n          textAnchor = 'middle';\n        } else if (l && r) {\n          textAnchor = 'end';\n        } else {\n          textAnchor = 'start';\n        }\n\n        transform = `rotate(${90 - rad2deg(point)}, ${padding}, 0)`;\n      } else {\n        const shouldRotate = rotation > 100 && rotation;\n        const rotate = shouldRotate ? 180 : 0;\n        const translate = shouldRotate ? -30 : 0;\n        textAnchor = shouldRotate ? 'end' : 'start';\n        transform = `rotate(${rotate}) translate(${translate})`;\n      }\n\n      return {\n        transform,\n        textAnchor\n      };\n    }\n\n    render() {\n      const {\n        data,\n        fill,\n        fontFamily,\n        fontSize,\n        format,\n        lineSize,\n        index\n      } = this.props;\n      const text = format ? format(data, index) : formatValue(data);\n      const {\n        transform,\n        textAnchor\n      } = this.getPosition();\n      return React__default.createElement(\"g\", {\n        transform: transform\n      }, React__default.createElement(\"title\", null, text), React__default.createElement(\"text\", {\n        dy: \"0.35em\",\n        x: lineSize + 5,\n        textAnchor: textAnchor,\n        fill: fill,\n        fontFamily: fontFamily,\n        fontSize: fontSize\n      }, text));\n    }\n\n  }\n\n  RadialAxisTickLabel.defaultProps = {\n    fill: '#71808d',\n    fontSize: 11,\n    padding: 15,\n    fontFamily: 'sans-serif',\n    autoRotate: true\n  };\n\n  class RadialAxisTick extends React.Component {\n    render() {\n      const {\n        line,\n        label,\n        scale,\n        outerRadius,\n        data,\n        index,\n        padding,\n        innerRadius\n      } = this.props;\n      const point = scale(data);\n      const rotation = point * 180 / Math.PI - 90;\n      const transform = `rotate(${rotation}) translate(${outerRadius + padding},0)`;\n      const lineSize = line ? line.props.size : 0;\n      return React__default.createElement(\"g\", {\n        transform: transform\n      }, line && React__default.createElement(CloneElement, {\n        element: line,\n        innerRadius: innerRadius,\n        outerRadius: outerRadius\n      }), label && React__default.createElement(CloneElement, {\n        element: label,\n        index: index,\n        point: point,\n        rotation: rotation,\n        lineSize: lineSize,\n        data: data\n      }));\n    }\n\n  }\n\n  RadialAxisTick.defaultProps = {\n    outerRadius: 0,\n    padding: 0,\n    line: React__default.createElement(RadialAxisTickLine, null),\n    label: React__default.createElement(RadialAxisTickLabel, null)\n  };\n\n  class RadialAxisTickSeries extends React.Component {\n    render() {\n      const {\n        scale,\n        count,\n        outerRadius,\n        tick,\n        tickValues,\n        innerRadius,\n        interval,\n        type\n      } = this.props;\n      const ticks = getTicks(scale, tickValues, type, count, interval || count);\n      return React__default.createElement(React.Fragment, null, ticks.map((data, i) => React__default.createElement(CloneElement, {\n        element: tick,\n        key: i,\n        index: i,\n        scale: scale,\n        data: data,\n        innerRadius: innerRadius,\n        outerRadius: outerRadius\n      })));\n    }\n\n  }\n\n  RadialAxisTickSeries.defaultProps = {\n    count: 12,\n    type: 'time',\n    tick: React__default.createElement(RadialAxisTick, null)\n  };\n\n  class RadialAxisArc extends React.Component {\n    render() {\n      const {\n        index,\n        stroke,\n        strokeDasharray,\n        scale\n      } = this.props;\n      const r = scale(index);\n      const strokeColor = typeof stroke === 'string' ? stroke : stroke(index);\n      const strokeDash = typeof strokeDasharray === 'string' ? strokeDasharray : strokeDasharray(index);\n      return React__default.createElement(\"circle\", {\n        fill: \"none\",\n        strokeDasharray: strokeDash,\n        stroke: strokeColor,\n        style: {\n          pointerEvents: 'none'\n        },\n        cx: \"0\",\n        cy: \"0\",\n        r: r\n      });\n    }\n\n  }\n\n  RadialAxisArc.defaultProps = {\n    stroke: '#71808d',\n    strokeDasharray: '1,4'\n  };\n\n  class RadialAxisArcSeries extends React.Component {\n    render() {\n      const {\n        count,\n        innerRadius,\n        outerRadius,\n        arc\n      } = this.props;\n      const scale = d3Scale.scaleLinear().domain([0, count]).range([innerRadius, outerRadius]);\n      const arcs = scale.ticks(count);\n      return React__default.createElement(React.Fragment, null, arcs.map(d => React__default.createElement(CloneElement, {\n        element: arc,\n        key: d,\n        index: d,\n        scale: scale\n      })));\n    }\n\n  }\n\n  RadialAxisArcSeries.defaultProps = {\n    count: 12,\n    arc: React__default.createElement(RadialAxisArc, null)\n  };\n\n  class RadialAxis extends React.Component {\n    render() {\n      const {\n        arcs,\n        ticks,\n        xScale,\n        height,\n        width,\n        innerRadius,\n        type\n      } = this.props;\n      const outerRadius = Math.min(height, width) / 2;\n      return React__default.createElement(React.Fragment, null, arcs && React__default.createElement(CloneElement, {\n        element: arcs,\n        outerRadius: outerRadius,\n        innerRadius: innerRadius\n      }), ticks && React__default.createElement(CloneElement, {\n        element: ticks,\n        scale: xScale,\n        type: type,\n        innerRadius: innerRadius,\n        outerRadius: outerRadius\n      }));\n    }\n\n  }\n\n  RadialAxis.defaultProps = {\n    innerRadius: 10,\n    type: 'value',\n    arcs: React__default.createElement(RadialAxisArcSeries, null),\n    ticks: React__default.createElement(RadialAxisTickSeries, null)\n  };\n\n  class Move extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.started = false;\n      this.deltaX = 0;\n      this.deltaY = 0;\n      this.prevXPosition = 0;\n      this.prevYPosition = 0;\n\n      this.onMouseMove = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        const {\n          movementX,\n          movementY\n        } = event;\n        this.deltaX = this.deltaX + movementX;\n        this.deltaY = this.deltaY + movementY;\n\n        if (this.checkThreshold()) {\n          this.disableText(true);\n          this.setCursor(true);\n          this.deltaX = 0;\n          this.deltaY = 0;\n          this.started = true;\n          this.props.onMoveStart({\n            nativeEvent: event,\n            type: 'mouse'\n          });\n        } else {\n          this.rqf = requestAnimationFrame(() => {\n            this.props.onMove({\n              nativeEvent: event,\n              type: 'mouse',\n              x: movementX,\n              y: movementY\n            });\n          });\n        }\n      };\n\n      this.onMouseUp = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.disposeHandlers();\n\n        if (this.started) {\n          this.props.onMoveEnd({\n            nativeEvent: event,\n            type: 'mouse'\n          });\n        } else {\n          this.props.onMoveCancel({\n            nativeEvent: event,\n            type: 'mouse'\n          });\n        }\n      };\n\n      this.onTouchMove = event => {\n        event.preventDefault();\n        event.stopPropagation(); // Calculate delta from previous position and current\n\n        const {\n          clientX,\n          clientY\n        } = this.getTouchCoords(event);\n        const deltaX = clientX - this.prevXPosition;\n        const deltaY = clientY - this.prevYPosition; // Track the delta\n\n        this.deltaX = this.deltaX + deltaX;\n        this.deltaY = this.deltaY + deltaY;\n\n        if (this.checkThreshold()) {\n          this.disableText(true);\n          this.setCursor(true);\n          this.deltaX = 0;\n          this.deltaY = 0;\n          this.started = true;\n          this.props.onMoveStart({\n            // TODO: Come back and clean this up...\n            nativeEvent: Object.assign(Object.assign({}, event), {\n              clientX,\n              clientY\n            }),\n            type: 'touch'\n          });\n        } else {\n          this.rqf = requestAnimationFrame(() => {\n            this.props.onMove({\n              // TODO: Come back and clean this up...\n              nativeEvent: Object.assign(Object.assign({}, event), {\n                clientX,\n                clientY\n              }),\n              type: 'touch',\n              x: deltaX,\n              y: deltaY\n            });\n          });\n        }\n\n        this.prevXPosition = clientX;\n        this.prevYPosition = clientY;\n      };\n\n      this.onTouchEnd = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.disposeHandlers();\n\n        if (this.started) {\n          this.props.onMoveEnd({\n            nativeEvent: event,\n            type: 'touch'\n          });\n        } else {\n          this.props.onMoveCancel({\n            nativeEvent: event,\n            type: 'touch'\n          });\n        }\n      };\n    }\n\n    componentWillUnmount() {\n      cancelAnimationFrame(this.rqf);\n      this.disposeHandlers();\n    }\n\n    disposeHandlers() {\n      window.removeEventListener('mousemove', this.onMouseMove);\n      window.removeEventListener('mouseup', this.onMouseUp);\n      window.removeEventListener('touchmove', this.onTouchMove);\n      window.removeEventListener('touchend', this.onTouchEnd);\n      this.setCursor(false);\n      this.disableText(true);\n    }\n\n    disableText(shouldDisable) {\n      if (this.props.disableText) {\n        toggleTextSelection(shouldDisable);\n      }\n    }\n\n    setCursor(set) {\n      let {\n        cursor\n      } = this.props;\n\n      if (cursor) {\n        if (!set) {\n          cursor = 'inherit';\n        }\n\n        document.body.style['cursor'] = cursor;\n      }\n    }\n\n    checkThreshold() {\n      const {\n        threshold\n      } = this.props;\n      return !this.started && (Math.abs(this.deltaX) > threshold || Math.abs(this.deltaY) > threshold);\n    }\n\n    getTouchCoords(event) {\n      const {\n        clientX,\n        clientY\n      } = event.touches[0];\n      return {\n        clientX,\n        clientY\n      };\n    }\n\n    onMouseDown(event) {\n      const {\n        preventRightClick,\n        disabled\n      } = this.props;\n      const shouldCancel = event.nativeEvent.which === 3 && preventRightClick;\n\n      if (shouldCancel || disabled) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n      this.started = false; // Always bind event so we cancel movement even if no action was taken\n\n      window.addEventListener('mousemove', this.onMouseMove);\n      window.addEventListener('mouseup', this.onMouseUp);\n    }\n\n    onTouchStart(event) {\n      const {\n        disabled\n      } = this.props;\n\n      if (disabled || event.touches.length !== 1) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n      this.started = false;\n      this.prevXPosition = event.touches[0].clientX;\n      this.prevYPosition = event.touches[0].clientY; // Always bind event so we cancel movement even if no action was taken\n\n      window.addEventListener('touchmove', this.onTouchMove);\n      window.addEventListener('touchend', this.onTouchEnd);\n    }\n\n    render() {\n      return React.Children.map(this.props.children, child => React.cloneElement(child, Object.assign(Object.assign({}, child.props), {\n        onMouseDown: e => {\n          this.onMouseDown(e);\n\n          if (child.props.onMouseDown) {\n            child.props.onMouseDown(e);\n          }\n        },\n        onTouchStart: e => {\n          this.onTouchStart(e);\n\n          if (child.props.onTouchStart) {\n            child.props.onTouchStart(e);\n          }\n        }\n      })));\n    }\n\n  }\n\n  Move.defaultProps = {\n    preventRightClick: true,\n    disableText: true,\n    threshold: 0,\n    onMoveStart: () => undefined,\n    onMove: () => undefined,\n    onMoveEnd: () => undefined,\n    onMoveCancel: () => undefined\n  };\n\n  function styleInject(css, ref) {\n    if (ref === void 0) ref = {};\n    var insertAt = ref.insertAt;\n\n    if (!css || typeof document === 'undefined') {\n      return;\n    }\n\n    var head = document.head || document.getElementsByTagName('head')[0];\n    var style = document.createElement('style');\n    style.type = 'text/css';\n\n    if (insertAt === 'top') {\n      if (head.firstChild) {\n        head.insertBefore(style, head.firstChild);\n      } else {\n        head.appendChild(style);\n      }\n    } else {\n      head.appendChild(style);\n    }\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = css;\n    } else {\n      style.appendChild(document.createTextNode(css));\n    }\n  }\n\n  var css = \".BrushHandle-module_handle__1sUPw {\\n  fill: var(--color-background);\\n  stroke: var(--color-primary); }\\n\\n.BrushHandle-module_dragging__MOc92 {\\n  fill: var(--color-surface); }\\n\\n.BrushHandle-module_dot__1tWYP {\\n  fill: var(--color-on-background); }\\n\\n.BrushHandle-module_line__Tqtk3 {\\n  stroke: var(--color-primary); }\\n\";\n  var css$1 = {\n    \"handle\": \"BrushHandle-module_handle__1sUPw\",\n    \"dragging\": \"BrushHandle-module_dragging__MOc92\",\n    \"dot\": \"BrushHandle-module_dot__1tWYP\",\n    \"line\": \"BrushHandle-module_line__Tqtk3\"\n  };\n  styleInject(css);\n\n  class BrushHandle extends React.PureComponent {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        isDragging: false\n      };\n    }\n\n    onMoveStart() {\n      this.setState({\n        isDragging: true\n      });\n    }\n\n    onMove(event) {\n      this.props.onHandleDrag(event.x);\n    }\n\n    onMoveEnd() {\n      this.setState({\n        isDragging: false\n      });\n    }\n\n    render() {\n      const {\n        height\n      } = this.props;\n      const {\n        isDragging\n      } = this.state;\n      return React__default.createElement(Move, {\n        cursor: \"ew-resize\",\n        onMoveStart: bind(this.onMoveStart, this),\n        onMove: bind(this.onMove, this),\n        onMoveEnd: bind(this.onMoveEnd, this)\n      }, React__default.createElement(\"g\", null, React__default.createElement(\"line\", {\n        className: css$1.line,\n        y1: \"0\",\n        y2: height,\n        x1: \"5\",\n        x2: \"5\"\n      }), React__default.createElement(\"rect\", {\n        className: classNames(css$1.handle, {\n          [css$1.dragging]: isDragging\n        }),\n        height: height - 10,\n        style: {\n          cursor: 'ew-resize'\n        },\n        width: 8,\n        y: \"5\",\n        y1: height - 5\n      }), React__default.createElement(\"g\", {\n        transform: `translate(-1, ${height / 2 - 10})`,\n        style: {\n          pointerEvents: 'none'\n        }\n      }, d3Array.range(5).map(i => React__default.createElement(\"circle\", {\n        cy: i * 5,\n        cx: \"5\",\n        r: \".5\",\n        key: i,\n        className: css$1.dot\n      })))));\n    }\n\n  }\n\n  var css$2 = \".BrushSlice-module_slice__25s30 {\\n  fill: var(--color-primary); }\\n\\n.BrushSlice-module_unsliced__2a0pj {\\n  fill: var(--color-background);\\n  opacity: 0.5;\\n  pointer-events: none; }\\n\";\n  var css$3 = {\n    \"slice\": \"BrushSlice-module_slice__25s30\",\n    \"unsliced\": \"BrushSlice-module_unsliced__2a0pj\"\n  };\n  styleInject(css$2);\n\n  class BrushSlice extends React.PureComponent {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        isDragging: false\n      };\n    }\n\n    onMoveStart() {\n      const {\n        start,\n        end,\n        width\n      } = this.props;\n      const hasNoSlice = start === 0 && end === width;\n\n      if (!hasNoSlice) {\n        this.setState({\n          isDragging: true\n        });\n      }\n    }\n\n    onMove({\n      x\n    }) {\n      const {\n        onBrushChange,\n        width\n      } = this.props;\n      let {\n        start,\n        end\n      } = this.props;\n      start = start + x;\n      end = end + x;\n\n      if (start >= 0 && end <= width) {\n        onBrushChange({\n          start,\n          end\n        });\n      }\n    }\n\n    onMoveEnd() {\n      this.setState({\n        isDragging: false\n      });\n    }\n\n    onHandleDrag(direction, deltaX) {\n      const {\n        onBrushChange\n      } = this.props;\n      let {\n        start,\n        end\n      } = this.props;\n      start = direction === 'start' ? start + deltaX : start;\n      end = direction !== 'start' ? end + deltaX : end;\n      onBrushChange({\n        start,\n        end\n      });\n    }\n\n    render() {\n      const {\n        height,\n        start,\n        end,\n        width\n      } = this.props;\n      const {\n        isDragging\n      } = this.state;\n      const sliceWidth = Math.max(end - start, 0);\n      const endSliceWidth = Math.max(width - end, 0);\n      const hasNoSlice = start === 0 && end === width;\n      return React__default.createElement(React.Fragment, null, React__default.createElement(\"rect\", {\n        className: css$3.unsliced,\n        height: height,\n        width: start\n      }), React__default.createElement(\"rect\", {\n        transform: `translate(${end}, 0)`,\n        className: css$3.unsliced,\n        height: height,\n        width: endSliceWidth\n      }), React__default.createElement(\"g\", {\n        transform: `translate(${start}, 0)`\n      }, React__default.createElement(Move, {\n        cursor: \"grabbing\",\n        onMoveStart: bind(this.onMoveStart, this),\n        onMove: bind(this.onMove, this),\n        onMoveEnd: bind(this.onMoveEnd, this)\n      }, React__default.createElement(\"rect\", {\n        className: css$3.slice,\n        height: height,\n        width: sliceWidth,\n        style: {\n          cursor: isDragging ? 'grabbing' : 'grab',\n          opacity: hasNoSlice ? 0 : 0.1,\n          pointerEvents: !hasNoSlice ? 'initial' : 'none'\n        }\n      })), React__default.createElement(\"g\", {\n        transform: `translate(-4, 0)`\n      }, React__default.createElement(BrushHandle, {\n        height: height,\n        onHandleDrag: bind(this.onHandleDrag, this, 'start')\n      })), React__default.createElement(\"g\", {\n        transform: `translate(${sliceWidth - 5}, 0)`\n      }, React__default.createElement(BrushHandle, {\n        height: height,\n        onHandleDrag: bind(this.onHandleDrag, this, 'end')\n      }))));\n    }\n\n  }\n\n  class Brush extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isSlicing: false,\n        isPanning: false,\n        start: props.start || 0,\n        end: props.end || props.width\n      };\n    }\n\n    componentDidUpdate(prevProps) {\n      // If no brush is defined and width updates, update the offset of the end handle.\n      if (prevProps.width !== this.props.width && this.state.end === prevProps.width) {\n        this.setState({\n          end: this.props.width\n        });\n      } // Don't update if we are doing the slicing\n\n\n      if (!this.state.isSlicing && !this.state.isPanning) {\n        const {\n          start,\n          end\n        } = this.props;\n        const startUpdated = start !== prevProps.start && start !== this.state.start;\n        const endUpdated = end !== prevProps.end && end !== this.state.end;\n\n        if (startUpdated || endUpdated) {\n          this.setState(Object.assign({}, this.ensurePositionInBounds(start, end)));\n        }\n      }\n    }\n\n    getStartEnd(event, state = this.state) {\n      const {\n        x\n      } = this.getPositionsForPanEvent(event);\n      let start;\n      let end;\n\n      if (x < state.initial) {\n        start = x;\n        end = state.initial;\n      } else {\n        start = state.initial;\n        end = x;\n      }\n\n      return this.ensurePositionInBounds(start, end, state);\n    }\n\n    getPositionsForPanEvent(event) {\n      const eventObj = {\n        target: this.ref,\n        clientX: event.clientX,\n        clientY: event.clientY\n      };\n      return getPositionForTarget(eventObj);\n    }\n\n    ensurePositionInBounds(newStart, newEnd, state = this.state) {\n      const {\n        width\n      } = this.props;\n      let start = newStart;\n      let end = newEnd;\n\n      if (start === undefined || start <= 0) {\n        start = 0;\n      }\n\n      if (end === undefined) {\n        end = width;\n      }\n\n      if (start > end) {\n        start = state.start;\n      }\n\n      if (end < start) {\n        end = state.end;\n      }\n\n      if (end >= width) {\n        end = width;\n      }\n\n      return {\n        start,\n        end\n      };\n    }\n\n    onMoveStart(event) {\n      const positions = this.getPositionsForPanEvent(event.nativeEvent);\n      this.setState({\n        isSlicing: true,\n        initial: positions.x\n      });\n    }\n\n    onMove(event) {\n      this.setState(prev => {\n        const {\n          onBrushChange\n        } = this.props; // Use setState callback so we can get the true previous value\n        // rather than the bulk updated value react will trigger\n\n        const {\n          start,\n          end\n        } = this.getStartEnd(event.nativeEvent, prev);\n\n        if (onBrushChange) {\n          onBrushChange({\n            start,\n            end\n          });\n        }\n\n        return {\n          start,\n          end\n        };\n      });\n    }\n\n    onMoveEnd() {\n      this.setState({\n        isSlicing: false\n      });\n    }\n\n    onMoveCancel() {\n      const val = {\n        start: 0,\n        end: this.props.width\n      };\n      this.setState(val);\n\n      if (this.props.onBrushChange) {\n        this.props.onBrushChange(val);\n      }\n    }\n\n    onSliceChange(event) {\n      const val = this.ensurePositionInBounds(event.start, event.end);\n      this.setState(val);\n\n      if (this.props.onBrushChange) {\n        this.props.onBrushChange(val);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        disabled,\n        height,\n        width\n      } = this.props;\n      const {\n        isSlicing,\n        start,\n        end\n      } = this.state;\n      return React__default.createElement(Move, {\n        cursor: \"crosshair\",\n        onMoveStart: bind(this.onMoveStart, this),\n        onMove: bind(this.onMove, this),\n        onMoveEnd: bind(this.onMoveEnd, this),\n        onMoveCancel: bind(this.onMoveCancel, this)\n      }, React__default.createElement(\"g\", {\n        style: {\n          pointerEvents: isSlicing ? 'none' : 'auto',\n          cursor: disabled ? '' : 'crosshair'\n        }\n      }, children, !disabled && React__default.createElement(React.Fragment, null, React__default.createElement(\"rect\", {\n        ref: ref => this.ref = ref,\n        height: height,\n        width: width,\n        opacity: 0\n      }), start !== undefined && end !== undefined && React__default.createElement(BrushSlice, {\n        start: start,\n        end: end,\n        height: height,\n        width: width,\n        onBrushChange: bind(this.onSliceChange, this)\n      }))));\n    }\n\n  }\n\n  Brush.defaultProps = {\n    disabled: false,\n    height: 0,\n    width: 0,\n    onBrushChange: () => undefined\n  };\n\n  class ChartBrush extends React.Component {\n    getBrushOffset() {\n      let start;\n      let end;\n      const {\n        disabled,\n        domain,\n        scale\n      } = this.props;\n\n      if (!disabled && domain) {\n        start = scale(domain[0]);\n        end = scale(domain[1]);\n      }\n\n      return {\n        start,\n        end\n      };\n    }\n\n    onBrushChange(event) {\n      const {\n        onBrushChange,\n        scale,\n        width\n      } = this.props;\n\n      if (onBrushChange) {\n        let domain;\n\n        if (event.start !== undefined && event.end !== undefined && (event.start !== 0 || event.end !== width)) {\n          const start = scale.invert(event.start);\n          const end = scale.invert(event.end);\n          domain = [start, end];\n        }\n\n        onBrushChange({\n          domain\n        });\n      }\n    }\n\n    render() {\n      const _a = this.props,\n            {\n        scale,\n        height,\n        width,\n        children\n      } = _a,\n            rest = __rest(_a, [\"scale\", \"height\", \"width\", \"children\"]);\n\n      return React__default.createElement(Brush, Object.assign({}, rest, this.getBrushOffset(), {\n        height: height,\n        width: width,\n        onBrushChange: bind(this.onBrushChange, this)\n      }), children);\n    }\n\n  }\n\n  ChartBrush.defaultProps = {};\n\n  const ChartContainer = _a => {\n    var {\n      className,\n      children,\n      center,\n      centerX,\n      centerY,\n      style,\n      margins,\n      xAxisVisible,\n      yAxisVisible,\n      id\n    } = _a,\n        rest = __rest(_a, [\"className\", \"children\", \"center\", \"centerX\", \"centerY\", \"style\", \"margins\", \"xAxisVisible\", \"yAxisVisible\", \"id\"]);\n\n    const curId = id || rdk.useId();\n    const [xAxisSized, setXAxisSized] = React.useState(false);\n    const [yAxisSized, setYAxisSized] = React.useState(false);\n    const [xOffset, setYOffset] = React.useState(0);\n    const [yOffset, setXOffset] = React.useState(0);\n    const {\n      ref,\n      width,\n      height\n    } = useDimensions();\n    const chartSized = React.useMemo(() => {\n      if (!height || !width) {\n        return false;\n      } // TODO: @amcdnl refactor this to account for 0-2 axises on x/y\n\n\n      if (xAxisVisible && !xAxisSized) {\n        return false;\n      }\n\n      if (yAxisVisible && !yAxisSized) {\n        return false;\n      }\n\n      return true;\n    }, [height, width, xAxisSized, xAxisVisible, yAxisVisible, yAxisSized]);\n    const onUpdateAxes = React.useCallback((orientation, event) => {\n      if (orientation === 'horizontal') {\n        setXAxisSized(true);\n      } else {\n        setYAxisSized(true);\n      }\n\n      if (event.height) {\n        setYOffset(event.height);\n      }\n\n      if (event.width) {\n        setXOffset(event.width);\n      }\n    }, []);\n    const childProps = React.useMemo(() => Object.assign({\n      chartSized,\n      id: curId,\n      updateAxes: onUpdateAxes,\n      yAxisSized,\n      xAxisSized\n    }, getDimension({\n      margins,\n      height,\n      width,\n      yOffset,\n      xOffset\n    })), [chartSized, id, onUpdateAxes, yAxisSized, xAxisSized, margins, height, width, yOffset, xOffset]);\n    const translateX = center || centerX ? width / 2 : childProps.xMargin;\n    const translateY = center || centerY ? height / 2 : childProps.yMargin;\n    const styleHeight = rest.height || '100%';\n    const styleWidth = rest.width || '100%';\n    return React__default.createElement(\"div\", {\n      ref: ref,\n      style: {\n        height: styleHeight,\n        width: styleWidth\n      }\n    }, height && width && React__default.createElement(\"svg\", {\n      width: width,\n      height: height,\n      className: className,\n      style: style\n    }, React__default.createElement(\"g\", {\n      transform: `translate(${translateX}, ${translateY})`\n    }, children(childProps))));\n  };\n\n  function normalizeValue(value, maxBigInt) {\n    if (bigInt.isInstance(value)) {\n      if (maxBigInt.greater(1000000)) {\n        const divideBy = maxBigInt.divide(1000000);\n        return value.divide(divideBy).toJSNumber();\n      } else {\n        return value.toJSNumber();\n      }\n    } else {\n      return value;\n    }\n  }\n\n  function normalizeValueForFormatting(value) {\n    if (bigInt.isInstance(value)) {\n      return bigIntegerToLocaleString(value);\n    }\n\n    return value;\n  }\n\n  function getMaxBigIntegerForNested(series) {\n    let maxBigInteger = bigInt.one;\n\n    for (const group of series) {\n      const maxBigIntegerForGroup = getMaxBigIntegerForShallow(group.data);\n\n      if (maxBigIntegerForGroup.greater(maxBigInteger)) {\n        maxBigInteger = maxBigIntegerForGroup;\n      }\n    }\n\n    return maxBigInteger;\n  }\n\n  function getMaxBigIntegerForShallow(series) {\n    let maxBigInteger = bigInt.one;\n\n    for (const point of series) {\n      if (bigInt.isInstance(point.data)) {\n        const bigInteger = point.data;\n\n        if (bigInteger.greater(maxBigInteger)) {\n          maxBigInteger = bigInteger;\n        }\n      }\n    }\n\n    return maxBigInteger;\n  }\n  /**\r\n   * Accepts a `ChartDataShape` and transforms it to a chart readable data shape.\r\n   *\r\n   * Example:\r\n   *\r\n   *   [{\r\n   *    key: 'Threat Intel',\r\n   *    data: [{ key:'2011', data: 25 }]\r\n   *   }]\r\n   *\r\n   * will be transformed to:\r\n   *\r\n   *  [{\r\n   *    key: 'Threat Intel',\r\n   *    data: [\r\n   *      key: 'Threat Intel',\r\n   *      x: '2011',\r\n   *      y: 25\r\n   *    ]\r\n   *  }]\r\n   */\n\n\n  function buildNestedChartData(series, sort = false, direction = 'vertical') {\n    let result = [];\n    const maxBigInteger = getMaxBigIntegerForNested(series);\n    const isVertical = direction === 'vertical';\n\n    for (const point of series) {\n      for (const nestedPoint of point.data) {\n        const key = normalizeValueForFormatting(point.key);\n        let idx = result.findIndex(r => {\n          const left = r.key;\n\n          if (left instanceof Date && key instanceof Date) {\n            return left.getTime() === key.getTime();\n          }\n\n          return left === key;\n        });\n\n        if (idx === -1) {\n          result.push({\n            key,\n            metadata: point.metadata,\n            data: []\n          });\n          idx = result.length - 1;\n        }\n\n        const x = normalizeValue(isVertical ? nestedPoint.key : nestedPoint.data, maxBigInteger);\n        const y = normalizeValue(isVertical ? nestedPoint.data : nestedPoint.key, maxBigInteger);\n        result[idx].data.push({\n          key,\n          value: normalizeValueForFormatting(nestedPoint.data),\n          metadata: nestedPoint.metadata,\n          id: point.id,\n          x,\n          x0: isVertical ? x : 0,\n          x1: x,\n          y,\n          y0: isVertical ? 0 : y,\n          y1: y\n        });\n      }\n    } // Sort the series data based on the median value\n\n\n    if (sort) {\n      result = result.sort((a, b) => {\n        const aMax = d3Array.median(a.data, d => d.y);\n        const bMax = d3Array.median(b.data, d => d.y);\n        return aMax < bMax ? 1 : -1;\n      });\n    }\n\n    return result;\n  }\n\n  function addToChartType(a, b) {\n    if (bigInt.isInstance(a) && bigInt.isInstance(b)) {\n      return a.add(b);\n    } else if (a instanceof Date && typeof b === 'number') {\n      return new Date(a.valueOf() + b);\n    } else if (typeof a === 'number' && typeof b === 'number') {\n      return a + b;\n    } else {\n      throw new Error('Invalid types to addToChartTypes');\n    }\n  }\n  /**\r\n   * Accepts a shallow shape and normalizes it to a chart readable format.\r\n   */\n\n\n  function buildShallowChartData(series, direction = 'vertical', binSize = undefined) {\n    const result = [];\n    const maxBigInteger = getMaxBigIntegerForShallow(series);\n    const isVertical = direction === 'vertical';\n\n    for (const point of series) {\n      const isTuple = Array.isArray(point.data);\n      let k1 = point.key;\n\n      if (binSize) {\n        k1 = addToChartType(point.key, binSize);\n      }\n\n      const props = {\n        k0: normalizeValue(point.key, maxBigInteger),\n        k1: normalizeValue(k1, maxBigInteger),\n        v0: normalizeValue(isTuple ? point.data[0] : 0, maxBigInteger),\n        v1: normalizeValue(isTuple ? point.data[1] : point.data, maxBigInteger)\n      };\n      const xProp = isVertical ? 'k' : 'v';\n      const yProp = isVertical ? 'v' : 'k';\n      result.push({\n        key: normalizeValueForFormatting(props.k0),\n        value: normalizeValueForFormatting(props.v1),\n        metadata: point.metadata,\n        id: point.id,\n        x: props[`${xProp}1`],\n        x0: props[`${xProp}0`],\n        x1: props[`${xProp}1`],\n        y: props[`${yProp}1`],\n        y0: props[`${yProp}0`],\n        y1: props[`${yProp}1`]\n      });\n    }\n\n    return result;\n  }\n  /**\r\n   * Build a histogram given data set.\r\n   */\n\n\n  function buildBins(xScale, thresholds, data) {\n    const layout = d3Array.histogram().value(d => d.x).domain(xScale.domain()).thresholds(xScale.ticks(thresholds));\n    const bins = layout(data);\n    return bins.map(bin => ({\n      x0: bin.x0,\n      x1: bin.x1,\n      y: bin.length,\n      y0: 0,\n      y1: bin.length\n    }));\n  }\n  /**\r\n   * Given a dataset like:\r\n   *\r\n   *   [{\r\n   *    key: 'Threat Intel',\r\n   *    data: [{ key:'2011', data: 25 }]\r\n   *   }]\r\n   *\r\n   * it will transform it to:\r\n   *\r\n   *  [\r\n   *    { x: 'Theat Intel', '2011': 25 }\r\n   *  ]\r\n   */\n\n\n  function transformDataToStack(data) {\n    const result = [];\n    const maxBigInteger = getMaxBigIntegerForNested(data);\n\n    for (const category of data) {\n      for (const value of category.data) {\n        let idx = result.findIndex(r => {\n          if (r.x instanceof Date && category.key instanceof Date) {\n            return r.x.getTime() === category.key.getTime();\n          }\n\n          return r.x === category.key;\n        });\n\n        if (idx === -1) {\n          result.push({\n            metadata: category.metadata,\n            x: category.key,\n            formattedValues: {}\n          });\n          idx = result.length - 1;\n        }\n\n        result[idx][value.key] = normalizeValue(value.data, maxBigInteger);\n        result[idx].formattedValues[value.key] = normalizeValueForFormatting(value.data);\n      }\n    }\n\n    return result;\n  }\n  /**\r\n   * Translates the stack data to a chart standard dataset.\r\n   */\n\n\n  function transformStackToData(stackData, direction = 'vertical') {\n    const result = [];\n    const isVertical = direction === 'vertical'; // Transform the data from the d3 stack format to our internal format\n\n    for (const category of stackData) {\n      for (const point of category) {\n        const key = point.data.x;\n        let idx = result.findIndex(r => {\n          if (r.key instanceof Date && key instanceof Date) {\n            return r.key.getTime() === key.getTime();\n          }\n\n          return r.key === key;\n        });\n\n        if (idx === -1) {\n          result.push({\n            key,\n            data: []\n          });\n          idx = result.length - 1;\n        }\n\n        const categoryKey = category.key;\n        const y = point.data[categoryKey];\n        const [y0, y1] = point;\n        result[idx].data.push({\n          metadata: point.data.metadata,\n          key,\n          x: isVertical ? categoryKey : y1,\n          x0: isVertical ? categoryKey : y0,\n          x1: isVertical ? categoryKey : y1,\n          y: isVertical ? y : categoryKey,\n          y0: isVertical ? y0 : categoryKey,\n          y1: isVertical ? y1 : categoryKey,\n          value: point.data.formattedValues[categoryKey]\n        });\n      }\n    }\n\n    return result;\n  }\n  /**\r\n   * Builds a stack dataset from the standard data format.\r\n   */\n\n\n  function buildBarStackData(data, offset = 'default', direction = 'vertical') {\n    const keys = uniqueBy(data, d => d.data, d => d.key);\n    const stackData = transformDataToStack(data);\n    let stackFn = d3Shape.stack();\n\n    if (offset === 'expand') {\n      stackFn = stackFn.offset(d3Shape.stackOffsetExpand);\n    } else if (offset === 'diverging') {\n      stackFn = stackFn.offset(d3Shape.stackOffsetDiverging);\n    }\n\n    const result = stackFn.keys(keys)(stackData);\n    return transformStackToData(result, direction);\n  }\n  /**\r\n   * Builds a stack dataset from the standard data format.\r\n   */\n\n\n  function buildMarimekkoData(data) {\n    const result = buildBarStackData(data, 'expand');\n    const sums = {}; // Calculate the sum for each series and the total sum\n\n    let totalSum = 0;\n\n    for (const series of result) {\n      const sum = series.data.reduce((acc, cur) => acc + cur.y, 0);\n      sums[series.key] = sum;\n      totalSum += sum;\n    } // Calculate the x0/x1 for each series\n\n\n    let prev = 0;\n\n    for (const series of result) {\n      const x0 = prev;\n      const x1 = prev + sums[series.key] / totalSum;\n      prev = x1;\n\n      for (const point of series.data) {\n        point.x0 = x0;\n        point.x1 = x1;\n      }\n    }\n\n    return result;\n  }\n  /**\r\n   * Given a dataset like:\r\n   *\r\n   *   [{\r\n   *    key: 'Threat Intel',\r\n   *    data: [{ key:'2011', data: 25 }]\r\n   *   }]\r\n   *\r\n   * it will transform it to:\r\n   *\r\n   *  [\r\n   *    { x: '2011', 'Theat Intel': 25 }\r\n   *  ]\r\n   */\n\n\n  function transformDataToStack$1(data) {\n    const result = [];\n    const maxBigInteger = getMaxBigIntegerForNested(data);\n\n    for (const category of data) {\n      for (const value of category.data) {\n        let idx = result.findIndex(r => {\n          if (r.x instanceof Date && value.key instanceof Date) {\n            return r.x.getTime() === value.key.getTime();\n          }\n\n          return r.x === value.key;\n        });\n\n        if (idx === -1) {\n          result.push({\n            x: value.key,\n            formattedValues: {}\n          });\n          idx = result.length - 1;\n        }\n\n        result[idx][category.key] = normalizeValue(value.data, maxBigInteger);\n        result[idx].formattedValues[category.key] = normalizeValueForFormatting(value.data);\n      }\n    }\n\n    return result;\n  }\n  /**\r\n   * Translates the stack data to a chart standard dataset.\r\n   */\n\n\n  function transformStackToData$1(stackData) {\n    const result = [];\n\n    for (const category of stackData) {\n      const series = [];\n\n      for (const point of category) {\n        const [y0, y1] = point;\n        const x = point.data.x;\n        series.push({\n          key: category.key,\n          x,\n          x0: x,\n          x1: x,\n          y: y1 - y0,\n          y0,\n          y1,\n          value: point.data.formattedValues[category.key]\n        });\n      }\n\n      result.push({\n        key: category.key,\n        data: series\n      });\n    }\n\n    return result;\n  }\n  /**\r\n   * Builds a stack dataset from the standard data format.\r\n   */\n\n\n  function buildStackData(data, normalized = false) {\n    const keys = uniqueBy(data, d => d.key);\n    const stackData = transformDataToStack$1(data);\n    const stackFn = !normalized ? d3Shape.stack() : d3Shape.stack().offset(d3Shape.stackOffsetExpand);\n    const result = stackFn.keys(keys)(stackData);\n    return transformStackToData$1(result);\n  }\n\n  const buildWaterfall = (series, direction = 'vertical', binSize = undefined) => {\n    const data = buildShallowChartData(series, direction, binSize);\n    const isVertical = direction === 'vertical';\n    const v = isVertical ? 'y' : 'x';\n    let cumulative = 0;\n\n    for (const point of data) {\n      point[`${v}0`] = cumulative;\n      cumulative += point[v];\n      point[`${v}1`] = cumulative;\n      point[v] = cumulative;\n    }\n\n    return data;\n  };\n\n  class Pan extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.prevXPosition = 0;\n      this.prevYPosition = 0;\n      this.started = false;\n      this.deltaX = 0;\n      this.deltaY = 0;\n      this.childRef = React.createRef();\n\n      this.onMouseDown = event => {\n        // Stop at disabled\n        if (this.props.disabled) {\n          return;\n        } // Ignore right click\n\n\n        if (event.which === 3) {\n          return;\n        } // If global panning is turned off, it will only pan on the container\n\n\n        if (!this.props.globalPanning && event.target && !event.target.classList.contains('pan-container')) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        toggleTextSelection(false);\n        this.started = false; // Always bind event so we cancel movement even if no action was taken\n\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('mouseup', this.onMouseUp);\n      };\n\n      this.onMouseMove = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.deltaX = this.deltaX + event.movementX;\n        this.deltaY = this.deltaY + event.movementY;\n\n        if (this.checkThreshold()) {\n          if (this.props.cursor) {\n            document.body.style['cursor'] = this.props.cursor;\n          }\n\n          this.deltaX = 0;\n          this.deltaY = 0;\n          this.started = true;\n          this.onPanStart(event, 'mouse');\n        } else {\n          this.pan(event.movementX, event.movementY, event, 'mouse');\n        }\n      };\n\n      this.onMouseUp = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.disposeHandlers();\n        toggleTextSelection(true);\n\n        if (this.started) {\n          this.onPanEnd(event, 'mouse');\n        } else {\n          this.props.onPanCancel({\n            nativeEvent: event,\n            source: 'mouse'\n          });\n        }\n      };\n\n      this.onTouchStart = event => {\n        // Stop at disabled\n        if (this.props.disabled) {\n          return;\n        } // Reqquire more than one touch\n\n\n        if (event.touches.length !== 1) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        toggleTextSelection(false);\n        this.started = false;\n        this.prevXPosition = event.touches[0].clientX;\n        this.prevYPosition = event.touches[0].clientY; // Always bind event so we cancel movement even if no action was taken\n\n        window.addEventListener('touchmove', this.onTouchMove);\n        window.addEventListener('touchend', this.onTouchEnd);\n      };\n\n      this.onTouchMove = event => {\n        event.preventDefault();\n        event.stopPropagation(); // Calculate delta from previous position and current\n\n        const x = event.touches[0].clientX;\n        const y = event.touches[0].clientY;\n        const deltaX = x - this.prevXPosition;\n        const deltaY = y - this.prevYPosition;\n        this.deltaX = this.deltaX + deltaX;\n        this.deltaY = this.deltaY + deltaY;\n\n        if (this.checkThreshold()) {\n          this.deltaX = 0;\n          this.deltaY = 0;\n          this.started = true;\n          this.onPanStart(event, 'touch');\n        } else {\n          const contrained = this.pan(deltaX, deltaY, event, 'touch');\n\n          if (!contrained) {\n            this.prevXPosition = x;\n            this.prevYPosition = y;\n          }\n        }\n      };\n\n      this.onTouchEnd = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.disposeHandlers();\n        toggleTextSelection(true);\n\n        if (this.started) {\n          this.onPanEnd(event, 'touch');\n        } else {\n          this.props.onPanCancel({\n            nativeEvent: event,\n            source: 'touch'\n          });\n        }\n      };\n    }\n\n    componentDidMount() {\n      if (this.childRef.current) {\n        this.childRef.current.addEventListener('mousedown', this.onMouseDown, {\n          passive: false\n        });\n        this.childRef.current.addEventListener('touchstart', this.onTouchStart, {\n          passive: false\n        });\n      }\n    }\n\n    componentWillUnmount() {\n      this.disposeHandlers();\n\n      if (this.childRef.current) {\n        this.childRef.current.removeEventListener('mousedown', this.onMouseDown);\n        this.childRef.current.removeEventListener('touchstart', this.onTouchStart);\n      }\n    }\n\n    disposeHandlers() {\n      window.removeEventListener('mousemove', this.onMouseMove);\n      window.removeEventListener('mouseup', this.onMouseUp);\n      window.removeEventListener('touchmove', this.onTouchMove);\n      window.removeEventListener('touchend', this.onTouchEnd); // Reset cursor on body back to original\n\n      document.body.style['cursor'] = 'inherit';\n      toggleTextSelection(true);\n    }\n\n    checkThreshold() {\n      const {\n        threshold\n      } = this.props;\n      return !this.started && (Math.abs(this.deltaX) > threshold || Math.abs(this.deltaY) > threshold);\n    }\n\n    onPanStart(nativeEvent, source) {\n      this.props.onPanStart({\n        nativeEvent,\n        source\n      });\n    }\n\n    onPanMove(x, y, source, nativeEvent) {\n      this.props.onPanMove({\n        source,\n        nativeEvent,\n        x,\n        y\n      });\n    }\n\n    onPanEnd(nativeEvent, source) {\n      const {\n        onPanEnd\n      } = this.props;\n      onPanEnd({\n        nativeEvent,\n        source\n      });\n    }\n\n    pan(x, y, nativeEvent, source) {\n      const {\n        scale,\n        constrain,\n        width,\n        height,\n        matrix\n      } = this.props;\n      const newMatrix = transformationMatrix.smoothMatrix(transformationMatrix.transform(matrix, transformationMatrix.translate(x / scale, y / scale)), 100);\n      const shouldConstrain = constrain && constrainMatrix(height, width, newMatrix);\n\n      if (!shouldConstrain) {\n        this.onPanMove(newMatrix.e, newMatrix.f, source, nativeEvent);\n      }\n\n      return shouldConstrain;\n    }\n\n    render() {\n      return React__default.createElement(\"g\", {\n        ref: this.childRef\n      }, this.props.children);\n    }\n\n  }\n\n  Pan.defaultProps = {\n    x: 0,\n    y: 0,\n    disabled: false,\n    scale: 1,\n    threshold: 10,\n    globalPanning: true,\n    onPanStart: () => undefined,\n    onPanMove: () => undefined,\n    onPanEnd: () => undefined,\n    onPanCancel: () => undefined\n  };\n  /**\r\n   * Gets the position between a given set of points.\r\n   */\n\n  const getMidpoint = (pointA, pointB) => ({\n    x: (pointA.x + pointB.x) / 2,\n    y: (pointA.y + pointB.y) / 2\n  });\n  /**\r\n   * Gets the distance between a given set of points.\r\n   */\n\n\n  const getDistanceBetweenPoints = (pointA, pointB) => Math.sqrt(Math.pow(pointB.y - pointA.y, 2) + Math.pow(pointB.x - pointA.x, 2));\n  /**\r\n   * Get touch points.\r\n   */\n\n\n  function getTouchPoints(event, node) {\n    const {\n      left,\n      top\n    } = node.getBoundingClientRect();\n    const [pointA, pointB] = [...event.touches].map(touch => ({\n      x: touch.clientX - Math.round(left),\n      y: touch.clientY - Math.round(top)\n    }));\n    const distance = getDistanceBetweenPoints(pointA, pointB);\n    const midpoint = getMidpoint(pointA, pointB);\n    return {\n      pointA,\n      pointB,\n      distance,\n      midpoint\n    };\n  }\n\n  class Zoom extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.childRef = React.createRef();\n\n      this.onMouseWheel = event => {\n        const {\n          disableMouseWheel,\n          requireZoomModifier,\n          matrix,\n          onZoomEnd\n        } = this.props;\n\n        if (disableMouseWheel) {\n          return false;\n        }\n\n        const hasModifier = event.metaKey || event.ctrlKey;\n\n        if (requireZoomModifier && !hasModifier) {\n          return false;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        const point = getPointFromMatrix(event, matrix);\n\n        if (point) {\n          const {\n            x,\n            y\n          } = point;\n          const step = this.getStep(event.deltaY);\n          this.scale(x, y, step, event); // Do small timeout to 'guess' when its done zooming\n\n          clearTimeout(this.timeout);\n          this.timeout = setTimeout(() => onZoomEnd(), 500);\n        }\n      };\n\n      this.onTouchStart = event => {\n        if (event.touches.length === 2) {\n          event.preventDefault();\n          event.stopPropagation();\n          toggleTextSelection(false);\n          this.firstTouch = getTouchPoints(event, this.childRef.current);\n          this.lastDistance = this.firstTouch.distance;\n          window.addEventListener('touchmove', this.onTouchMove);\n          window.addEventListener('touchend', this.onTouchEnd);\n        }\n      };\n\n      this.onTouchMove = event => {\n        if (event.touches.length === 2) {\n          event.preventDefault();\n          event.stopPropagation();\n          const {\n            distance\n          } = getTouchPoints(event, this.childRef.current);\n          const distanceFactor = distance / this.lastDistance;\n          const point = transformationMatrix.applyToPoint(transformationMatrix.inverse(this.props.matrix), {\n            x: this.firstTouch.midpoint.x,\n            y: this.firstTouch.midpoint.y\n          });\n\n          if (point.x && point.y) {\n            const outside = this.scale(point.x, point.y, distanceFactor, event);\n\n            if (!outside) {\n              this.lastDistance = distance;\n            }\n          }\n        }\n      };\n\n      this.onTouchEnd = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        window.removeEventListener('touchmove', this.onTouchMove);\n        window.removeEventListener('touchend', this.onTouchEnd);\n        toggleTextSelection(true);\n        this.props.onZoomEnd();\n      };\n    }\n\n    componentDidMount() {\n      const {\n        disabled,\n        disableMouseWheel\n      } = this.props;\n      const ref = this.childRef.current;\n\n      if (!disabled && ref) {\n        if (!disableMouseWheel) {\n          ref.addEventListener('mousewheel', this.onMouseWheel, {\n            passive: false\n          });\n        }\n\n        ref.addEventListener('touchstart', this.onTouchStart, {\n          passive: false\n        });\n      }\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('touchmove', this.onTouchMove);\n      window.removeEventListener('touchend', this.onTouchEnd);\n      cancelAnimationFrame(this.rqf);\n      clearTimeout(this.timeout);\n      const ref = this.childRef.current;\n\n      if (ref) {\n        ref.removeEventListener('mousewheel', this.onMouseWheel);\n        ref.removeEventListener('touchstart', this.onTouchStart);\n      }\n\n      toggleTextSelection(true);\n    }\n\n    getStep(delta) {\n      const {\n        scaleFactor\n      } = this.props;\n      return -delta > 0 ? scaleFactor + 1 : 1 - scaleFactor;\n    }\n\n    scale(x, y, step, nativeEvent) {\n      const {\n        minZoom,\n        maxZoom,\n        onZoom,\n        matrix\n      } = this.props;\n      const outside = isZoomLevelGoingOutOfBounds({\n        d: matrix.a,\n        scaleFactorMin: minZoom,\n        scaleFactorMax: maxZoom\n      }, step);\n\n      if (!outside) {\n        const newMatrix = transformationMatrix.smoothMatrix(transformationMatrix.transform(matrix, transformationMatrix.translate(x, y), transformationMatrix.scale(step, step), transformationMatrix.translate(-x, -y)), 100);\n        this.rqf = requestAnimationFrame(() => {\n          onZoom({\n            scale: newMatrix.a,\n            x: newMatrix.e,\n            y: newMatrix.f,\n            nativeEvent\n          });\n        });\n      }\n\n      return outside;\n    }\n\n    render() {\n      const {\n        style,\n        children\n      } = this.props;\n      return React__default.createElement(\"g\", {\n        ref: this.childRef,\n        style: style\n      }, children);\n    }\n\n  }\n\n  Zoom.defaultProps = {\n    x: 0,\n    y: 0,\n    scale: 1,\n    scaleFactor: 0.1,\n    minZoom: 1,\n    maxZoom: 10\n  };\n  var css$4 = \".DiscreteLegend-module_container__2mEDZ {\\n  display: flex;\\n  overflow: auto; }\\n  .DiscreteLegend-module_container__2mEDZ.DiscreteLegend-module_horizontal__1X-xR {\\n    align-items: center;\\n    flex-direction: row; }\\n  .DiscreteLegend-module_container__2mEDZ.DiscreteLegend-module_vertical__2VWFB {\\n    flex-direction: column; }\\n\";\n  var css$5 = {\n    \"container\": \"DiscreteLegend-module_container__2mEDZ\",\n    \"horizontal\": \"DiscreteLegend-module_horizontal__1X-xR\",\n    \"vertical\": \"DiscreteLegend-module_vertical__2VWFB\"\n  };\n  styleInject(css$4);\n\n  class DiscreteLegend extends React.Component {\n    render() {\n      const {\n        entries,\n        orientation,\n        style\n      } = this.props;\n      const className = classNames(css$5.container, this.props.className, {\n        [css$5.horizontal]: orientation === 'horizontal',\n        [css$5.vertical]: orientation === 'vertical'\n      });\n      return React__default.createElement(\"div\", {\n        className: className,\n        style: style\n      }, entries.map((entry, index) => React__default.createElement(CloneElement, {\n        element: entry,\n        key: `dle-${index}`\n      })));\n    }\n\n  }\n\n  DiscreteLegend.defaultProps = {\n    orientation: 'vertical'\n  };\n  var css$6 = \".DiscreteLegendEntry-module_entry__2t_fB {\\n  display: flex;\\n  color: var(--color-on-primary);\\n  padding: 8px;\\n  will-change: transparency;\\n  transition: opacity 150ms ease-in; }\\n  .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_vertical__hlqTw {\\n    flex-direction: column;\\n    text-align: center; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_vertical__hlqTw:first-child {\\n      padding-top: 0; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_vertical__hlqTw:last-child {\\n      padding-bottom: 0; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_vertical__hlqTw svg {\\n      display: block;\\n      margin: 0 auto; }\\n  .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_horizontal__22RL3 {\\n    align-items: center;\\n    flex-direction: row; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_horizontal__22RL3:first-child {\\n      padding-left: 0; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_horizontal__22RL3:last-child {\\n      padding-right: 0; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_horizontal__22RL3 .DiscreteLegendEntry-module_label__1eXDb {\\n      margin-left: 8px; }\\n  .DiscreteLegendEntry-module_entry__2t_fB .DiscreteLegendEntry-module_label__1eXDb {\\n    font-size: 12px; }\\n  .DiscreteLegendEntry-module_entry__2t_fB svg {\\n    width: 15px;\\n    height: 15px; }\\n\";\n  var css$7 = {\n    \"entry\": \"DiscreteLegendEntry-module_entry__2t_fB\",\n    \"vertical\": \"DiscreteLegendEntry-module_vertical__hlqTw\",\n    \"horizontal\": \"DiscreteLegendEntry-module_horizontal__22RL3\",\n    \"label\": \"DiscreteLegendEntry-module_label__1eXDb\"\n  };\n  styleInject(css$6);\n  var css$8 = \".DiscreteLegendSymbol-module_symbol__jSdtc {\\n  width: 15px;\\n  height: 3px; }\\n\";\n  var css$9 = {\n    \"symbol\": \"DiscreteLegendSymbol-module_symbol__jSdtc\"\n  };\n  styleInject(css$8);\n\n  class DiscreteLegendSymbol extends React.PureComponent {\n    render() {\n      const {\n        className,\n        color\n      } = this.props;\n      return React__default.createElement(\"div\", {\n        className: classNames(css$9.symbol, className),\n        style: {\n          background: color\n        }\n      });\n    }\n\n  }\n\n  DiscreteLegendSymbol.defaultProps = {};\n\n  class DiscreteLegendEntry extends React.Component {\n    render() {\n      const {\n        label,\n        symbol,\n        onMouseEnter,\n        onMouseLeave,\n        title,\n        color,\n        style,\n        onClick,\n        orientation\n      } = this.props;\n      const className = classNames(css$7.entry, this.props.className, {\n        [css$7.vertical]: orientation === 'vertical',\n        [css$7.horizontal]: orientation === 'horizontal'\n      });\n      return React__default.createElement(\"div\", {\n        title: title,\n        className: className,\n        onClick: onClick,\n        onMouseEnter: onMouseEnter,\n        onMouseLeave: onMouseLeave,\n        style: style\n      }, React__default.createElement(CloneElement, {\n        element: symbol,\n        color: color\n      }), React__default.createElement(\"span\", {\n        className: css$7.label\n      }, label));\n    }\n\n  }\n\n  DiscreteLegendEntry.defaultProps = {\n    symbol: React__default.createElement(DiscreteLegendSymbol, null),\n    orientation: 'horizontal',\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined,\n    onClick: () => undefined\n  };\n  var css$a = \".SequentialLegend-module_container__3zYTi {\\n  display: flex;\\n  height: 100%; }\\n  .SequentialLegend-module_container__3zYTi.SequentialLegend-module_vertical__1GIoN {\\n    flex-direction: column;\\n    max-width: 55px; }\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_vertical__1GIoN .SequentialLegend-module_start__2Ed_Q,\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_vertical__1GIoN .SequentialLegend-module_end__1vA4W {\\n      text-align: center;\\n      padding: 5px 0;\\n      width: 100%; }\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_vertical__1GIoN .SequentialLegend-module_gradient__ebuYY {\\n      width: 25px;\\n      margin: 0 auto; }\\n  .SequentialLegend-module_container__3zYTi.SequentialLegend-module_horizontal__ljDoI {\\n    flex-direction: row-reverse; }\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_horizontal__ljDoI .SequentialLegend-module_start__2Ed_Q,\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_horizontal__ljDoI .SequentialLegend-module_end__1vA4W {\\n      max-width: 20%; }\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_horizontal__ljDoI .SequentialLegend-module_start__2Ed_Q {\\n      text-align: right;\\n      padding-left: 5px; }\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_horizontal__ljDoI .SequentialLegend-module_end__1vA4W {\\n      text-align: left;\\n      padding-right: 5px; }\\n  .SequentialLegend-module_container__3zYTi .SequentialLegend-module_gradient__ebuYY {\\n    flex: 1;\\n    width: 100%;\\n    border-radius: 2px; }\\n  .SequentialLegend-module_container__3zYTi .SequentialLegend-module_start__2Ed_Q,\\n  .SequentialLegend-module_container__3zYTi .SequentialLegend-module_end__1vA4W {\\n    color: var(--color-on-primary);\\n    font-size: 12px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n\";\n  var css$b = {\n    \"container\": \"SequentialLegend-module_container__3zYTi\",\n    \"vertical\": \"SequentialLegend-module_vertical__1GIoN\",\n    \"start\": \"SequentialLegend-module_start__2Ed_Q\",\n    \"end\": \"SequentialLegend-module_end__1vA4W\",\n    \"gradient\": \"SequentialLegend-module_gradient__ebuYY\",\n    \"horizontal\": \"SequentialLegend-module_horizontal__ljDoI\"\n  };\n  styleInject(css$a);\n\n  class SequentialLegend extends React.PureComponent {\n    render() {\n      const {\n        orientation,\n        className,\n        style,\n        colorScheme,\n        data\n      } = this.props; // Generate the color gradient\n\n      const color = chroma.scale(colorScheme).colors(10).reverse().map((c, i) => `${c} ${i * 10}%`).join(','); // Get the extent from the data passed\n\n      const [end, start] = d3Array.extent(uniqueBy(data, d => d.data, d => d.data)); // Get direction\n\n      const gradientDir = orientation === 'vertical' ? '' : 'to left,';\n      return React__default.createElement(\"div\", {\n        style: style,\n        className: classNames(css$b.container, className, {\n          [css$b.vertical]: orientation === 'vertical',\n          [css$b.horizontal]: orientation === 'horizontal'\n        })\n      }, React__default.createElement(\"div\", {\n        className: css$b.start\n      }, formatValue(start)), React__default.createElement(\"div\", {\n        className: css$b.gradient,\n        style: {\n          background: `linear-gradient(${gradientDir}${color})`\n        }\n      }), React__default.createElement(\"div\", {\n        className: css$b.end\n      }, formatValue(end)));\n    }\n\n  }\n\n  SequentialLegend.defaultProps = {\n    colorScheme: ['rgba(28, 107, 86, 0.5)', '#2da283'],\n    orientation: 'vertical'\n  };\n  var css$c = \".Gridline-module_gridLine__3cVfZ {\\n  stroke-dasharray: 2 5;\\n  shape-rendering: crispEdges;\\n  pointer-events: none; }\\n\";\n  var css$d = {\n    \"gridLine\": \"Gridline-module_gridLine__3cVfZ\"\n  };\n  styleInject(css$c);\n\n  class Gridline extends React.PureComponent {\n    getCoords() {\n      const {\n        direction,\n        data,\n        height,\n        width,\n        scale,\n        strokeWidth,\n        strokeColor,\n        strokeDasharray\n      } = this.props;\n      const pos = scale(data);\n\n      if (direction === 'x') {\n        return {\n          x1: pos,\n          x2: pos,\n          y1: 0,\n          y2: height,\n          fill: 'none',\n          stroke: strokeColor,\n          strokeDasharray,\n          strokeWidth\n        };\n      } else {\n        return {\n          y1: pos,\n          y2: pos,\n          x1: 0,\n          x2: width,\n          fill: 'none',\n          stroke: strokeColor,\n          strokeDasharray,\n          strokeWidth\n        };\n      }\n    }\n\n    render() {\n      const coords = this.getCoords();\n      return React__default.createElement(\"line\", Object.assign({\n        className: css$d.gridLine\n      }, coords));\n    }\n\n  }\n\n  Gridline.defaultProps = {\n    strokeWidth: 1,\n    direction: 'all',\n    strokeColor: 'rgba(153, 153, 153, 0.5)'\n  };\n\n  class GridlineSeries extends React.Component {\n    getGridlines() {\n      const {\n        yScale,\n        xScale,\n        yAxis,\n        xAxis,\n        height,\n        width\n      } = this.props;\n      return {\n        yAxisGrid: getTicks(yScale, yAxis.tickSeries.props.tickValues, yAxis.type, getMaxTicks(yAxis.tickSeries.props.tickSize, height), yAxis.tickSeries.props.interval),\n        xAxisGrid: getTicks(xScale, xAxis.tickSeries.props.tickValues, xAxis.type, getMaxTicks(xAxis.tickSeries.props.tickSize, width), xAxis.tickSeries.props.interval)\n      };\n    }\n\n    renderSeries(yAxisGrid, xAxisGrid, element, type) {\n      const {\n        xScale,\n        yScale\n      } = this.props;\n      return React__default.createElement(React.Fragment, null, this.shouldRenderY(element.props.direction) && this.renderGroup(element, yAxisGrid, yScale, 'y', type), this.shouldRenderX(element.props.direction) && this.renderGroup(element, xAxisGrid, xScale, 'x', type));\n    }\n\n    shouldRenderY(direction) {\n      return direction === 'all' || direction === 'y';\n    }\n\n    shouldRenderX(direction) {\n      return direction === 'all' || direction === 'x';\n    }\n\n    getSkipIndex(direction) {\n      const {\n        yAxis,\n        xAxis\n      } = this.props;\n\n      if (direction === 'x' && yAxis.axisLine !== null && yAxis.position === 'start' || direction === 'y' && xAxis.axisLine !== null && xAxis.position === 'end') {\n        return 0;\n      }\n\n      return null;\n    }\n\n    renderGroup(element, grid, scale, direction, type) {\n      const {\n        height,\n        width\n      } = this.props;\n      const skipIdx = this.getSkipIndex(direction);\n      return grid.map((point, index) => React__default.createElement(React.Fragment, {\n        key: `${type}-${direction}-${index}`\n      }, index !== skipIdx && React__default.createElement(CloneElement, {\n        element: element,\n        index: index,\n        scale: scale,\n        data: point,\n        height: height,\n        width: width,\n        direction: direction\n      })));\n    }\n\n    render() {\n      const {\n        line,\n        stripe\n      } = this.props;\n      const {\n        yAxisGrid,\n        xAxisGrid\n      } = this.getGridlines();\n      return React__default.createElement(\"g\", {\n        style: {\n          pointerEvents: 'none'\n        }\n      }, line && this.renderSeries(yAxisGrid, xAxisGrid, line, 'line'), stripe && this.renderSeries(yAxisGrid, xAxisGrid, stripe, 'stripe'));\n    }\n\n  }\n\n  GridlineSeries.defaultProps = {\n    line: React__default.createElement(Gridline, null),\n    stripe: null\n  };\n  var css$e = \".GridStripe-module_gridStripe__1UlRd {\\n  pointer-events: none; }\\n\";\n  var css$f = {\n    \"gridStripe\": \"GridStripe-module_gridStripe__1UlRd\"\n  };\n  styleInject(css$e);\n\n  class GridStripe extends React.PureComponent {\n    getCoords() {\n      const {\n        position,\n        data,\n        height,\n        width,\n        scale,\n        fill,\n        index\n      } = this.props;\n      const pos = scale(data);\n      const stripeFill = index % 2 ? 'none' : fill;\n      const dim = scale.bandwidth();\n\n      if (position === 'vertical') {\n        return {\n          y: 0,\n          x: pos,\n          height: height,\n          width: dim,\n          fill: stripeFill\n        };\n      } else {\n        return {\n          y: pos,\n          x: 0,\n          height: dim,\n          width,\n          fill: stripeFill\n        };\n      }\n    }\n\n    render() {\n      const coords = this.getCoords();\n      return React__default.createElement(\"rect\", Object.assign({\n        className: css$f.gridStripe\n      }, coords));\n    }\n\n  }\n\n  GridStripe.defaultProps = {\n    fill: '#2a3138'\n  };\n  var css$g = \".MarkLine-module_markLine__Uilm3 {\\n  pointer-events: none;\\n  stroke-dasharray: 4, 4;\\n  stroke-linecap: round; }\\n\";\n  var css$h = {\n    \"markLine\": \"MarkLine-module_markLine__Uilm3\"\n  };\n  styleInject(css$g);\n\n  class MarkLine extends React.PureComponent {\n    render() {\n      const {\n        pointX,\n        height,\n        strokeColor,\n        strokeWidth\n      } = this.props;\n      return React__default.createElement(\"line\", {\n        stroke: strokeColor,\n        strokeWidth: strokeWidth,\n        y1: \"0\",\n        vectorEffect: \"non-scaling-stroke\",\n        y2: height,\n        x1: pointX,\n        x2: pointX,\n        className: css$h.markLine\n      });\n    }\n\n  }\n\n  MarkLine.defaultProps = {\n    strokeWidth: 1,\n    strokeColor: '#eee'\n  };\n\n  class GradientStop extends React.PureComponent {\n    render() {\n      const {\n        offset,\n        stopOpacity,\n        color\n      } = this.props;\n      return React__default.createElement(\"stop\", {\n        offset: offset,\n        stopOpacity: stopOpacity,\n        stopColor: color\n      });\n    }\n\n  }\n\n  GradientStop.defaultProps = {\n    stopOpacity: 1\n  };\n\n  class Gradient extends React.Component {\n    getDirection() {\n      if (this.props.direction === 'vertical') {\n        return {\n          x1: '10%',\n          x2: '10%',\n          y1: '100%',\n          y2: '0%'\n        };\n      } else {\n        return {\n          y1: '0%',\n          y2: '0%',\n          x1: '0%',\n          x2: '100%'\n        };\n      }\n    }\n\n    render() {\n      const {\n        id,\n        stops,\n        color\n      } = this.props;\n      const direction = this.getDirection();\n      return React__default.createElement(\"linearGradient\", Object.assign({\n        spreadMethod: \"pad\",\n        id: id\n      }, direction), stops.map((stop, index) => React__default.createElement(CloneElement, {\n        element: stop,\n        key: `gradient-${index}`,\n        color: stop.props.color || color\n      })));\n    }\n\n  }\n\n  Gradient.defaultProps = {\n    direction: 'vertical',\n    stops: [React__default.createElement(GradientStop, {\n      offset: \"0%\",\n      stopOpacity: 0.3,\n      key: \"start\"\n    }), React__default.createElement(GradientStop, {\n      offset: \"80%\",\n      stopOpacity: 1,\n      key: \"stop\"\n    })]\n  };\n\n  class RadialGradient extends React.Component {\n    render() {\n      const {\n        id,\n        stops,\n        color,\n        radius\n      } = this.props;\n      return React__default.createElement(\"radialGradient\", {\n        id: id,\n        cx: 0,\n        cy: 0,\n        r: radius,\n        gradientUnits: \"userSpaceOnUse\"\n      }, stops.map((stop, index) => React__default.createElement(CloneElement, {\n        element: stop,\n        key: `gradient-${index}`,\n        color: color\n      })));\n    }\n\n  }\n\n  RadialGradient.defaultProps = {\n    radius: '30%',\n    stops: [React__default.createElement(GradientStop, {\n      offset: \"0%\",\n      stopOpacity: 0.2,\n      key: \"start\"\n    }), React__default.createElement(GradientStop, {\n      offset: \"80%\",\n      stopOpacity: 0.7,\n      key: \"stop\"\n    })]\n  };\n\n  class Mask extends React.PureComponent {\n    render() {\n      const {\n        id,\n        fill\n      } = this.props;\n      return React__default.createElement(\"mask\", {\n        id: id\n      }, React__default.createElement(\"rect\", {\n        x: \"0\",\n        y: \"0\",\n        width: \"100%\",\n        height: \"100%\",\n        fill: fill\n      }));\n    }\n\n  }\n\n  class Stripes extends React.PureComponent {\n    render() {\n      const {\n        id,\n        fill\n      } = this.props;\n      return React__default.createElement(\"pattern\", {\n        id: id,\n        width: \"4\",\n        height: \"4\",\n        patternUnits: \"userSpaceOnUse\",\n        patternTransform: \"rotate(45)\"\n      }, React__default.createElement(\"rect\", {\n        className: \"area-stripe\",\n        width: \"1\",\n        height: \"4\",\n        fill: fill\n      }));\n    }\n\n  }\n\n  Stripes.defaultProps = {};\n  var css$i = \".TooltipTemplate-module_label__jiS7i {\\n  font-size: 16px;\\n  margin-bottom: 3px;\\n  color: var(--color-on-background); }\\n\\n.TooltipTemplate-module_value__1B9bc {\\n  font-size: 13px;\\n  color: var(--color-on-background);\\n  opacity: 0.7; }\\n\\n.TooltipTemplate-module_subValue__10sXY {\\n  display: block;\\n  text-align: left;\\n  padding: 3px 5px; }\\n  .TooltipTemplate-module_subValue__10sXY .TooltipTemplate-module_subValueColor__1cUVB {\\n    width: 5px;\\n    height: 15px;\\n    margin-right: 8px;\\n    display: inline-block; }\\n  .TooltipTemplate-module_subValue__10sXY .TooltipTemplate-module_subValueName__jhmgI {\\n    margin-right: 5px; }\\n\";\n  var css$j = {\n    \"label\": \"TooltipTemplate-module_label__jiS7i\",\n    \"value\": \"TooltipTemplate-module_value__1B9bc\",\n    \"subValue\": \"TooltipTemplate-module_subValue__10sXY\",\n    \"subValueColor\": \"TooltipTemplate-module_subValueColor__1cUVB\",\n    \"subValueName\": \"TooltipTemplate-module_subValueName__jhmgI\"\n  };\n  styleInject(css$i);\n\n  const TooltipTemplate = ({\n    value,\n    color,\n    className\n  }) => {\n    if (!value) {\n      return null;\n    }\n\n    const renderValues = (data, index) => {\n      const fill = color(data, index);\n      return React__default.createElement(\"span\", {\n        className: css$j.subValue\n      }, React__default.createElement(\"span\", {\n        className: css$j.subValueColor,\n        style: {\n          backgroundColor: fill\n        }\n      }), React__default.createElement(\"span\", {\n        className: css$j.subValueName\n      }, formatValue(data.key || data.x), \":\"), React__default.createElement(\"span\", null, formatValue(data.value || data.y)));\n    };\n\n    const renderMultiple = value => {\n      const excessCount = value.data.length - 15;\n      const pagedValues = value.data.slice(0, 15);\n      return React__default.createElement(React.Fragment, null, pagedValues.map((point, i) => React__default.createElement(React.Fragment, {\n        key: i\n      }, renderValues(point, i))), excessCount > 0 && React__default.createElement(\"div\", null, \"...\", excessCount, \" more...\"));\n    };\n\n    const isMultiple = Array.isArray(value.data);\n    return React__default.createElement(\"div\", {\n      className: className\n    }, React__default.createElement(\"div\", {\n      className: css$j.label\n    }, formatValue(value.x)), React__default.createElement(\"div\", {\n      className: css$j.value\n    }, isMultiple && renderMultiple(value), !isMultiple && React__default.createElement(React.Fragment, null, formatValue(value.value || value.y))));\n  };\n\n  const ChartTooltip = _a => {\n    var {\n      content = React__default.createElement(TooltipTemplate, null),\n      value,\n      data,\n      color\n    } = _a,\n        rest = __rest(_a, [\"content\", \"value\", \"data\", \"color\"]);\n\n    return React__default.createElement(realayers.Tooltip, Object.assign({}, rest, {\n      content: () => {\n        if (!value && !data) {\n          return null;\n        }\n\n        return typeof content === 'function' ? content(data || value, color) : React.cloneElement(content, Object.assign(Object.assign({}, content.props), {\n          value,\n          color\n        }));\n      }\n    }));\n  };\n\n  class TooltipArea extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {};\n      this.ref = React.createRef();\n      this.transformData = memoize(series => {\n        const {\n          inverse,\n          isHorizontal\n        } = this.props;\n        const result = [];\n\n        if (inverse) {\n          for (const point of series) {\n            const seriesPoint = point;\n\n            if (Array.isArray(seriesPoint.data)) {\n              for (const nestedPoint of seriesPoint.data) {\n                const right = nestedPoint.x;\n                let idx = result.findIndex(r => {\n                  const left = r.x;\n\n                  if (left instanceof Date && right instanceof Date) {\n                    return left.getTime() === right.getTime();\n                  }\n\n                  return left === right;\n                });\n\n                if (idx === -1) {\n                  result.push({\n                    x: nestedPoint.x,\n                    data: []\n                  });\n                  idx = result.length - 1;\n                }\n\n                const data = result[idx].data;\n\n                if (Array.isArray(data)) {\n                  data.push(nestedPoint);\n                }\n              }\n            } else {\n              result.push(point);\n            }\n          }\n        } else {\n          for (const point of series) {\n            const nestedPoint = point;\n\n            if (Array.isArray(nestedPoint.data)) {\n              result.push(Object.assign(Object.assign({}, nestedPoint), {\n                x: nestedPoint.key,\n                data: nestedPoint.data.map(d => Object.assign(Object.assign({}, d), {\n                  key: !isHorizontal ? d.x : d.y,\n                  value: !isHorizontal ? d.y : d.x\n                }))\n              }));\n            } else {\n              const shallowPoint = point;\n              result.push(Object.assign(Object.assign({}, shallowPoint), {\n                // Histograms special logic...\n                x: shallowPoint.key === undefined ? shallowPoint.x0 : point.key,\n                y: shallowPoint.value === undefined ? shallowPoint.y : shallowPoint.value\n              }));\n            }\n          }\n        }\n\n        return result;\n      });\n    }\n\n    getXCoord(x, y) {\n      const {\n        isRadial,\n        width,\n        height\n      } = this.props; // If the shape is radial, we need to convert the X coords to a radial format.\n\n      if (isRadial) {\n        const outerRadius = Math.min(width, height) / 2;\n        let rad = Math.atan2(y - outerRadius, x - outerRadius) + Math.PI / 2; // TODO: Figure out what the 'correct' way to do this is...\n\n        if (rad < 0) {\n          rad += Math.PI * 2;\n        }\n\n        return rad;\n      }\n\n      return x;\n    }\n\n    onMouseMove(event) {\n      const {\n        xScale,\n        yScale,\n        onValueEnter,\n        height,\n        width,\n        data,\n        isRadial,\n        isHorizontal,\n        placement\n      } = this.props;\n      const {\n        value\n      } = this.state;\n      const transformed = this.transformData(data); // Get our default placement\n\n      let newPlacement = placement;\n\n      if (!placement) {\n        if (isHorizontal) {\n          newPlacement = 'right';\n        } else {\n          newPlacement = 'top';\n        }\n      } // Get the path container element\n\n\n      let target = this.ref.current;\n      const {\n        y,\n        x\n      } = getPositionForTarget({\n        target: target,\n        // Manually pass the x/y from the event\n        clientX: event.clientX,\n        clientY: event.clientY\n      }); // Need to flip scales/coords if we are a horz layout\n\n      let keyScale;\n      let valueScale;\n      let coord;\n\n      if (isHorizontal) {\n        keyScale = yScale;\n        valueScale = xScale;\n        coord = y;\n      } else {\n        coord = this.getXCoord(x, y);\n        keyScale = xScale;\n        valueScale = yScale;\n      }\n\n      const newValue = getClosestPoint(coord, keyScale, transformed);\n\n      if (!isEqual(newValue, value) && newValue) {\n        const pointX = keyScale(newValue.x);\n        let pointY = valueScale(newValue.y);\n        let marginX = 0;\n        let marginY = 0;\n\n        if (isNaN(pointY)) {\n          pointY = height / 2;\n          marginX = 10;\n\n          if (!placement) {\n            newPlacement = 'right';\n          }\n        } else {\n          marginY = -10;\n        } // If the points didn't change, don't trigger an update\n\n\n        if (pointX === this.prevX && pointY === this.prevY) {\n          return;\n        }\n\n        this.prevY = pointY;\n        this.prevX = pointX;\n        const target = event.target;\n        const {\n          top,\n          left\n        } = target.getBoundingClientRect();\n        let offsetX = 0;\n        let offsetY = 0;\n\n        if (isRadial) {\n          // If its radial, we need to convert the coords to radial format\n          const outerRadius = Math.min(width, height) / 2;\n          offsetX = pointY * Math.cos(pointX - Math.PI / 2) + outerRadius;\n          offsetY = pointY * Math.sin(pointX - Math.PI / 2) + outerRadius;\n        } else {\n          offsetX = pointX;\n          offsetY = pointY;\n        }\n\n        offsetX += left + marginX;\n        offsetY += top + marginY;\n        this.setState({\n          placement: newPlacement,\n          visible: true,\n          value: newValue,\n          offsetX,\n          offsetY\n        });\n        onValueEnter({\n          visible: true,\n          value: newValue,\n          pointY,\n          pointX,\n          offsetX,\n          offsetY,\n          nativeEvent: event\n        });\n      }\n    }\n\n    onMouseLeave() {\n      this.prevX = undefined;\n      this.prevY = undefined;\n      this.setState({\n        value: undefined,\n        visible: false\n      });\n      this.props.onValueLeave();\n    }\n\n    getTooltipReference() {\n      const {\n        offsetX,\n        offsetY\n      } = this.state;\n      return {\n        width: 4,\n        height: 4,\n        top: offsetY,\n        left: offsetX\n      };\n    }\n\n    renderRadial() {\n      let {\n        height,\n        width,\n        innerRadius,\n        outerRadius\n      } = this.props;\n      innerRadius = innerRadius || 0;\n      outerRadius = outerRadius || Math.min(width, height) / 2;\n      const d = d3Shape.arc()({\n        innerRadius,\n        outerRadius,\n        startAngle: 180,\n        endAngle: Math.PI / 2\n      });\n      return React__default.createElement(\"path\", {\n        d: d,\n        opacity: \"0\",\n        cursor: \"auto\",\n        ref: this.ref,\n        onMouseMove: bind(this.onMouseMove, this)\n      });\n    }\n\n    renderLinear() {\n      const {\n        height,\n        width\n      } = this.props;\n      return React__default.createElement(\"rect\", {\n        height: height,\n        ref: this.ref,\n        width: width,\n        opacity: 0,\n        cursor: \"auto\",\n        onMouseMove: bind(this.onMouseMove, this)\n      });\n    }\n\n    render() {\n      const {\n        isRadial,\n        children,\n        tooltip,\n        disabled,\n        color\n      } = this.props;\n      const {\n        visible,\n        placement,\n        value\n      } = this.state;\n      return React__default.createElement(React.Fragment, null, disabled && children, !disabled && React__default.createElement(\"g\", {\n        onMouseLeave: bind(this.onMouseLeave, this)\n      }, isRadial && this.renderRadial(), !isRadial && this.renderLinear(), React__default.createElement(CloneElement, {\n        element: tooltip,\n        visible: visible,\n        placement: placement,\n        modifiers: {\n          offset: {\n            offset: '0, 15px'\n          }\n        },\n        reference: this.getTooltipReference(),\n        color: color,\n        value: value\n      }), children));\n    }\n\n  }\n\n  TooltipArea.defaultProps = {\n    isRadial: false,\n    tooltip: React__default.createElement(ChartTooltip, null),\n    inverse: true,\n    onValueEnter: () => undefined,\n    onValueLeave: () => undefined\n  };\n\n  class ZoomPan extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.zoomRef = React.createRef();\n      this.panRef = React.createRef();\n      this.state = {\n        isZooming: false,\n        isPanning: false,\n        matrix: transformationMatrix.identity()\n      };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n      // TODO: the types in the library don't seem to be correct...\n      const matrix = transformationMatrix.transform(transformationMatrix.fromDefinition([{\n        type: 'translate',\n        tx: props.x,\n        ty: props.y\n      }, {\n        type: 'scale',\n        sx: props.scale,\n        sy: props.scale\n      }]));\n\n      if (!isEqual(matrix, state.matrix)) {\n        return {\n          matrix\n        };\n      }\n\n      return null;\n    }\n\n    onPanStart(event) {\n      this.setState({\n        isPanning: true\n      });\n      this.props.onPanStart(event);\n    }\n\n    onPanMove(event) {\n      this.props.onZoomPan({\n        scale: this.props.scale,\n        x: event.x,\n        y: event.y,\n        type: 'pan',\n        nativeEvent: event.nativeEvent\n      });\n      this.props.onPanMove(event);\n    }\n\n    onPanEnd(event) {\n      this.setState({\n        isPanning: false\n      });\n      this.props.onPanEnd(event);\n    }\n\n    onZoom(event) {\n      this.props.onZoomPan({\n        x: event.x,\n        y: event.y,\n        scale: event.scale,\n        nativeEvent: event.nativeEvent,\n        type: 'zoom'\n      });\n      this.props.onZoom(event);\n    }\n\n    onZoomEnd() {\n      this.setState({\n        isZooming: false\n      });\n      this.props.onZoomEnd();\n    }\n\n    render() {\n      const {\n        height,\n        width,\n        children,\n        disabled,\n        pannable,\n        maxZoom,\n        minZoom,\n        zoomable,\n        scale,\n        x,\n        y,\n        disableMouseWheel,\n        constrain,\n        zoomStep,\n        onPanCancel,\n        requireZoomModifier,\n        globalPanning\n      } = this.props;\n      const {\n        isZooming,\n        isPanning\n      } = this.state;\n      const cursor = pannable ? 'move' : 'auto';\n      const selection = isZooming || isPanning ? 'none' : 'auto';\n      const matrix = transformationMatrix.fromObject(this.state.matrix);\n      return React__default.createElement(Pan, {\n        x: x,\n        y: y,\n        scale: scale,\n        matrix: matrix,\n        constrain: constrain,\n        height: height,\n        width: width,\n        disabled: !pannable || disabled,\n        ref: this.panRef,\n        globalPanning: globalPanning,\n        onPanStart: bind(this.onPanStart, this),\n        onPanMove: bind(this.onPanMove, this),\n        onPanEnd: bind(this.onPanEnd, this),\n        onPanCancel: onPanCancel\n      }, React__default.createElement(Zoom, {\n        ref: this.zoomRef,\n        disabled: !zoomable || disabled,\n        scaleFactor: zoomStep,\n        disableMouseWheel: disableMouseWheel,\n        maxZoom: maxZoom,\n        minZoom: minZoom,\n        scale: scale,\n        x: x,\n        y: y,\n        style: {\n          cursor\n        },\n        requireZoomModifier: requireZoomModifier,\n        matrix: matrix,\n        onZoom: bind(this.onZoom, this),\n        onZoomEnd: bind(this.onZoomEnd, this)\n      }, !disabled && React__default.createElement(\"rect\", {\n        height: height,\n        width: width,\n        opacity: 0,\n        className: \"pan-container\"\n      }), React__default.createElement(\"g\", {\n        style: {\n          pointerEvents: selection,\n          userSelect: selection\n        }\n      }, children)));\n    }\n\n  }\n\n  ZoomPan.defaultProps = {\n    maxZoom: 10,\n    minZoom: 0,\n    zoomStep: 0.1,\n    pannable: true,\n    zoomable: true,\n    constrain: true,\n    height: 0,\n    width: 0,\n    x: 0,\n    y: 0,\n    scale: 1,\n    globalPanning: true,\n    onPanStart: () => undefined,\n    onPanMove: () => undefined,\n    onPanEnd: () => undefined,\n    onPanCancel: () => undefined,\n    onZoom: () => undefined,\n    onZoomEnd: () => undefined\n  };\n  /**\r\n   * Gets the X Scale function.\r\n   */\n\n  function getXScale({\n    type,\n    roundDomains,\n    data,\n    width,\n    domain,\n    padding,\n    scaled,\n    isMultiSeries = false,\n    isDiverging = false\n  }) {\n    let scale;\n\n    if (type === 'time' || type === 'duration' || type === 'value') {\n      if (type === 'time') {\n        scale = d3Scale.scaleTime().rangeRound([0, width]);\n      } else {\n        scale = d3Scale.scaleLinear().rangeRound([0, width]);\n      }\n\n      scale = scale.domain(domain || getXDomain({\n        data,\n        scaled,\n        isDiverging\n      }));\n    } else {\n      if (!domain) {\n        if (isMultiSeries) {\n          domain = uniqueBy(data, d => d.key);\n        } else {\n          domain = uniqueBy(data, d => d.x);\n        }\n      }\n\n      scale = d3Scale.scaleBand().rangeRound([0, width]).padding(padding || 0).domain(domain);\n    }\n\n    return roundDomains ? scale.nice() : scale;\n  }\n  /**\r\n   * Gets the Y Scale function.\r\n   */\n\n\n  function getYScale({\n    type,\n    height,\n    data,\n    domain,\n    roundDomains = false,\n    scaled = false,\n    padding = 0,\n    isMultiSeries = false,\n    isDiverging = false\n  }) {\n    let scale;\n\n    if (type === 'time' || type === 'value' || type === 'duration') {\n      scale = d3Scale.scaleLinear().range([height, 0]).domain(domain || getYDomain({\n        data,\n        scaled,\n        isDiverging\n      }));\n    } else {\n      if (!domain) {\n        if (isMultiSeries) {\n          domain = uniqueBy(data, d => d.key);\n        } else {\n          domain = uniqueBy(data, d => d.y);\n        }\n      }\n\n      scale = d3Scale.scaleBand().rangeRound([height, 0]).padding(padding).domain(domain);\n    }\n\n    return roundDomains ? scale.nice() : scale;\n  }\n  /**\r\n   * Get a linear scale for the mariemko chart.\r\n   */\n\n\n  const getMarimekkoScale = (width, roundDomains) => {\n    const scale = d3Scale.scaleLinear().rangeRound([0, width]);\n    return roundDomains ? scale.nice() : scale;\n  };\n  /**\r\n   * Builds a fake scale function to get a group scale for a marimekko value scale.\r\n   */\n\n\n  const getMarimekkoGroupScale = ({\n    data,\n    width,\n    valueScale,\n    padding\n  }) => {\n    const domain = uniqueBy(data, d => d.key);\n    const barCount = data.length;\n    const widthMinusPadding = width - padding * (barCount - 1);\n    const xMultiplier = widthMinusPadding / width; // Given a data series, find the x0/x1 for it.\n\n    const getXRange = series => {\n      const [val] = series.data;\n      const x0 = valueScale(val.x0);\n      const x1 = valueScale(val.x1);\n      return {\n        x0,\n        x1\n      };\n    };\n\n    const scale = arg => {\n      let result = 0;\n      const index = data.findIndex(d => d.key === arg);\n      const series = data[index];\n\n      if (series && series.data && series.data.length) {\n        const {\n          x1,\n          x0\n        } = getXRange(series);\n        result = (x1 - x0) / 2 + x0;\n\n        if (padding) {\n          result = result * xMultiplier + index * padding;\n        }\n      }\n\n      return result;\n    };\n\n    scale.range = () => [0, width];\n\n    scale.domain = () => domain; // Special invert function for marimekko\n\n\n    scale.mariemkoInvert = offset => {\n      let found;\n\n      for (let i = 0; i < domain.length; i++) {\n        const attr = domain[i];\n        const series = data[i];\n        const {\n          x1,\n          x0\n        } = getXRange(series);\n\n        if (offset >= x0 - padding / 2 && offset <= x1 - padding / 2) {\n          found = attr;\n          break;\n        }\n      }\n\n      return found;\n    };\n\n    return scale;\n  };\n  /**\r\n   * Get the group scale aka x0.\r\n   */\n\n\n  function getGroupScale({\n    dimension,\n    padding,\n    data,\n    direction = 'vertical'\n  }) {\n    const domain = uniqueBy(data, d => d.key);\n    const spacing = domain.length / (dimension / padding + 1);\n    const range = direction === 'vertical' ? [0, dimension] : [dimension, 0];\n    return d3Scale.scaleBand().rangeRound(range).paddingInner(spacing).paddingOuter(spacing / 2).domain(domain);\n  }\n  /**\r\n   * Get the inner scale aka x1.\r\n   */\n\n\n  function getInnerScale({\n    groupScale,\n    padding,\n    data,\n    prop = 'x'\n  }) {\n    const dimension = groupScale.bandwidth();\n    const domain = uniqueBy(data, d => d.data, d => d[prop]);\n    const spacing = domain.length / (dimension / padding + 1);\n    return d3Scale.scaleBand().rangeRound([0, dimension]).paddingInner(spacing).domain(domain);\n  }\n  /**\r\n   * Get the Y Scale for a given set of radiuses.\r\n   * Reference: https://github.com/d3/d3-scale/issues/90\r\n   */\n\n\n  const getRadialYScale = (innerRadius, outerRadius, domain) => {\n    if (domain[0] === 0 && domain[1] === 0) {\n      // If all values are 0, set the domain to [0, 1], so the zero values are\n      // all at the bottom of the chart, not the middle.\n      domain = [0, 1];\n    }\n\n    const y = d3Scale.scaleLinear().range([innerRadius * innerRadius, outerRadius * outerRadius]).domain(domain);\n    const yScale = Object.assign(d => Math.sqrt(y(d)), y);\n    return yScale;\n  };\n\n  class ChartZoomPan extends React.Component {\n    onZoomPan(event) {\n      const {\n        width,\n        data,\n        axisType,\n        roundDomains,\n        onZoomPan\n      } = this.props;\n      const can = event.type === 'zoom' || event.type === 'pan' && event.scale > 1;\n\n      if (can) {\n        const scale = getXScale({\n          width: width,\n          type: axisType,\n          roundDomains,\n          data\n        });\n        const newScale = scale.copy().domain(scale.range().map(x => (x - event.x) / event.scale).map(scale.clamp(true).invert, event.x));\n        onZoomPan({\n          domain: newScale.domain(),\n          isZoomed: event.scale !== 1\n        });\n      }\n    }\n\n    getOffset() {\n      let zoomOffset = {\n        scale: undefined,\n        x: undefined\n      };\n      const {\n        disabled,\n        domain,\n        width,\n        data,\n        axisType,\n        roundDomains\n      } = this.props;\n\n      if (!disabled && domain) {\n        const xScale = getXScale({\n          width,\n          type: axisType,\n          roundDomains,\n          data\n        });\n        let offset = xScale(domain[0]);\n        const endOffset = xScale(domain[1]);\n        const scale = width / (endOffset - offset); // Apply the new scale to the offset so its scaled correctly\n\n        offset = offset * scale;\n        zoomOffset = {\n          scale: scale,\n          x: -offset\n        };\n      }\n\n      return zoomOffset;\n    }\n\n    render() {\n      const _a = this.props,\n            {\n        data,\n        height,\n        children,\n        width,\n        onZoomPan\n      } = _a,\n            rest = __rest(_a, [\"data\", \"height\", \"children\", \"width\", \"onZoomPan\"]);\n\n      const {\n        scale,\n        x\n      } = this.getOffset();\n      return React__default.createElement(ZoomPan, Object.assign({}, rest, {\n        scale: scale,\n        x: x,\n        height: height,\n        width: width,\n        pannable: scale > 1,\n        onZoomPan: bind(this.onZoomPan, this)\n      }), children);\n    }\n\n  }\n\n  ChartZoomPan.defaultProps = {\n    onZoomPan: () => undefined\n  };\n  const DEFAULT_TRANSITION = {\n    type: 'spring',\n    velocity: 10,\n    damping: 50\n  };\n\n  const MotionPath = _a => {\n    var {\n      custom,\n      transition\n    } = _a,\n        rest = __rest(_a, [\"custom\", \"transition\"]);\n\n    const d = framerMotion.useMotionValue(custom.exit.d);\n    const prevPath = framerMotion.useMotionValue(custom.exit.d);\n    const spring = framerMotion.useSpring(prevPath, Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n      from: 0,\n      to: 1\n    }));\n    React.useEffect(() => {\n      const interpolator = d3Interpolate.interpolate(prevPath.get(), custom.enter.d);\n      const unsub = spring.onChange(v => d.set(interpolator(v)));\n      prevPath.set(custom.enter.d);\n      return unsub;\n    });\n\n    const _b = custom.enter,\n          {\n      d: enterD\n    } = _b,\n          enterRest = __rest(_b, [\"d\"]);\n\n    const _c = custom.exit,\n          exitRest = __rest(_c, [\"d\"]);\n\n    return React__default.createElement(framerMotion.motion.path, Object.assign({}, rest, {\n      initial: exitRest,\n      exit: exitRest,\n      animate: enterRest,\n      transition: transition,\n      d: transition.type !== false ? d : enterD\n    }));\n  };\n  /**\r\n   * Color Schemes\r\n   * Credits: https://gka.github.io/chroma.js/#chroma-brewer\r\n   */\n\n\n  const schemes = Object.assign({\n    cybertron: chroma.scale(['#2d60e8', '#26efb5']).correctLightness().colors(8)\n  }, chroma.brewer);\n  /**\r\n   * Given a point, get the key attributes for it.\r\n   */\n\n  const rangeHelper = (point, attribute) => point.map((r, i) => {\n    if (r) {\n      if (r[attribute] !== undefined) {\n        return r[attribute];\n      } else if (r.data && r.data[attribute] !== undefined) {\n        return r.data[attribute];\n      }\n    }\n\n    return i;\n  });\n  /**\r\n   * Get a color given a range.\r\n   */\n\n\n  const getColor = props => {\n    let {\n      point,\n      colorScheme,\n      attribute,\n      index,\n      data,\n      active,\n      isMultiSeries,\n      domain,\n      key,\n      scale\n    } = Object.assign({\n      attribute: 'key',\n      isMultiSeries: false,\n      scale: d3Scale.scaleOrdinal\n    }, props);\n\n    if (typeof colorScheme === 'string' && schemes[colorScheme]) {\n      colorScheme = schemes[colorScheme];\n    }\n\n    if (Array.isArray(colorScheme)) {\n      if (!domain) {\n        if (isMultiSeries && Array.isArray(data)) {\n          const maxIdx = d3Array.maxIndex(data, d => d.data.length);\n          const maxVal = data[maxIdx];\n          data = maxVal.data;\n        }\n\n        domain = rangeHelper(data, attribute);\n      }\n\n      key = key !== undefined ? key : point[attribute];\n      return scale(colorScheme).domain(domain)(key);\n    } else if (typeof colorScheme === 'function') {\n      return colorScheme(point, index, active);\n    } else {\n      return colorScheme;\n    }\n  };\n\n  var css$k = \".ScatterPoint-module_inactive__2qwES {\\n  opacity: 0.2; }\\n\";\n  var css$l = {\n    \"inactive\": \"ScatterPoint-module_inactive__2qwES\"\n  };\n  styleInject(css$k);\n\n  const ScatterPoint = _a => {\n    var {\n      symbol,\n      index,\n      id,\n      data,\n      xScale,\n      yScale,\n      active = true,\n      tooltip = React__default.createElement(ChartTooltip, null),\n      cursor = 'pointer',\n      size = 4,\n      color = schemes.cybertron[0],\n      animated = true,\n      onClick = () => undefined,\n      onMouseEnter = () => undefined,\n      onMouseLeave = () => undefined\n    } = _a,\n        rest = __rest(_a, [\"symbol\", \"index\", \"id\", \"data\", \"xScale\", \"yScale\", \"active\", \"tooltip\", \"cursor\", \"size\", \"color\", \"animated\", \"onClick\", \"onMouseEnter\", \"onMouseLeave\"]);\n\n    const rectRef = React.useRef(null);\n    const [tooltipVisible, setTooltipVisible] = React.useState(false);\n    const extras = React.useMemo(() => constructFunctionProps(rest, data), [rest, data]);\n    const r = React.useMemo(() => typeof size === 'function' ? size(data) : size, [size, data]);\n    const renderedSymbol = React.useMemo(() => symbol ? symbol(data) : null, [data, symbol]);\n    const transitionProps = React.useMemo(() => animated ? Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n      delay: index * 0.005\n    }) : {\n      type: false,\n      delay: 0\n    }, [index, animated]);\n    const enterProps = React.useMemo(() => {\n      let cy = yScale(data.y1);\n\n      if (yScale.bandwidth) {\n        const width = yScale.bandwidth();\n        cy = cy + width / 2;\n      }\n\n      return {\n        x: xScale(data.x),\n        y: cy\n      };\n    }, [data, yScale]);\n    const exitProps = React.useMemo(() => {\n      const [yStartDomain] = yScale.domain();\n      return {\n        y: yScale(yStartDomain),\n        x: xScale(data.x)\n      };\n    }, [data, yScale]);\n    const fill = React.useMemo(() => getColor({\n      colorScheme: color,\n      index,\n      point: data\n    }), [data, color, index]);\n    return React__default.createElement(React.Fragment, null, React__default.createElement(\"g\", {\n      ref: rectRef,\n      onMouseEnter: () => {\n        setTooltipVisible(true);\n        onMouseEnter(data);\n      },\n      onMouseLeave: () => {\n        setTooltipVisible(false);\n        onMouseLeave(data);\n      },\n      onClick: () => onClick(data),\n      className: classNames({\n        [css$l.inactive]: !active\n      })\n    }, symbol ? React__default.createElement(framerMotion.motion.g, Object.assign({\n      key: `symbol-${id}-${data.id}`\n    }, extras, {\n      initial: {\n        translateX: exitProps.x,\n        translateY: exitProps.y,\n        opacity: 0\n      },\n      animate: {\n        translateX: enterProps.x,\n        translateY: enterProps.y,\n        opacity: 1\n      },\n      exit: {\n        translateX: exitProps.x,\n        translateY: exitProps.y,\n        opacity: 0\n      },\n      transition: transitionProps\n    }), renderedSymbol) : React__default.createElement(framerMotion.motion.circle, {\n      key: `symbol-${id}-${data.id}`,\n      className: extras.className,\n      style: Object.assign(Object.assign({}, extras.style), {\n        cursor\n      }),\n      initial: {\n        cx: exitProps.x,\n        cy: exitProps.y,\n        fill,\n        r,\n        opacity: 0\n      },\n      animate: {\n        cx: enterProps.x,\n        cy: enterProps.y,\n        opacity: 1,\n        fill,\n        r\n      },\n      exit: {\n        cx: exitProps.x,\n        cy: exitProps.y,\n        fill,\n        r,\n        opacity: 0\n      },\n      transition: transitionProps\n    })), tooltip && !tooltip.props.disabled && React__default.createElement(CloneElement, {\n      element: tooltip,\n      visible: tooltipVisible,\n      reference: rectRef,\n      value: data\n    }));\n  }; // For bubble charts, often symbols exceed the area\n  // and we want to add a little bit of padding to prevent clipping\n\n\n  const PADDING = 25;\n  const HALF_PADDING = PADDING / 2;\n\n  const ScatterSeries = _a => {\n    var {\n      data,\n      height,\n      width,\n      id,\n      isZoomed,\n      activeIds,\n      point = React__default.createElement(ScatterPoint, null)\n    } = _a,\n        rest = __rest(_a, [\"data\", \"height\", \"width\", \"id\", \"isZoomed\", \"activeIds\", \"point\"]);\n\n    const renderPoint = React.useCallback((pointData, index) => {\n      let pointId;\n\n      if (pointData.id) {\n        pointId = pointData.id;\n      }\n\n      const key = pointId || index;\n      const active = !(activeIds && activeIds.length) || activeIds.includes(pointId);\n      const visible = point.props.visible;\n\n      if (visible && !visible(pointData, index)) {\n        return React__default.createElement(React.Fragment, {\n          key: key\n        });\n      }\n\n      return React__default.createElement(CloneElement, Object.assign({\n        element: point,\n        key: key\n      }, rest, {\n        id: id,\n        data: pointData,\n        index: index,\n        active: active\n      }));\n    }, [point, id, rest, activeIds]);\n    return React__default.createElement(React.Fragment, null, React__default.createElement(\"defs\", null, React__default.createElement(\"clipPath\", {\n      id: `${id}-path`\n    }, React__default.createElement(\"rect\", {\n      width: isZoomed ? width : width + PADDING,\n      height: height + PADDING,\n      x: isZoomed ? 0 : -HALF_PADDING,\n      y: -HALF_PADDING\n    }))), React__default.createElement(\"g\", {\n      clipPath: `url(#${id}-path)`\n    }, data.map(renderPoint)));\n  };\n\n  var css$m = \".ScatterPlot-module_scatterPlot__gOR7J {\\n  overflow: visible; }\\n\";\n  var css$n = {\n    \"scatterPlot\": \"ScatterPlot-module_scatterPlot__gOR7J\"\n  };\n  styleInject(css$m);\n\n  class ScatterPlot extends React.Component {\n    constructor(props) {\n      super(props);\n      this.getData = memoize(data => {\n        return buildShallowChartData(data);\n      });\n      const zoom = props.zoomPan ? props.zoomPan.props : {\n        domain: undefined\n      };\n      const zoomControlled = !zoom.hasOwnProperty('domain');\n      this.state = {\n        isZoomed: !!zoom.domain,\n        zoomDomain: zoom.domain,\n        zoomControlled\n      };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n      if (props.zoomPan) {\n        const zoom = props.zoomPan.props;\n\n        if (!state.zoomControlled && zoom.domain !== state.zoomDomain) {\n          return {\n            zoomDomain: zoom.domain,\n            isZoomed: !!zoom.domain\n          };\n        }\n      }\n\n      return null;\n    }\n\n    getScales(data, chartHeight, chartWidth) {\n      const {\n        xAxis,\n        yAxis\n      } = this.props;\n      const {\n        zoomDomain\n      } = this.state;\n      const yScale = getYScale({\n        roundDomains: yAxis.props.roundDomains,\n        type: yAxis.props.type,\n        height: chartHeight,\n        data,\n        domain: yAxis.props.domain\n      });\n      const xScale = getXScale({\n        width: chartWidth,\n        type: xAxis.props.type,\n        roundDomains: xAxis.props.roundDomains,\n        data,\n        domain: zoomDomain || xAxis.props.domain\n      });\n      return {\n        data,\n        yScale,\n        xScale\n      };\n    }\n\n    onZoomPan(event) {\n      if (this.state.zoomControlled) {\n        this.setState({\n          zoomDomain: event.domain,\n          isZoomed: event.isZoomed,\n          preventAnimation: true\n        });\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setState({\n          preventAnimation: false\n        }), 500);\n      }\n    }\n\n    renderChart(containerProps) {\n      const {\n        chartHeight,\n        chartWidth,\n        id,\n        updateAxes\n      } = containerProps;\n      const {\n        series,\n        xAxis,\n        yAxis,\n        gridlines,\n        brush,\n        zoomPan,\n        secondaryAxis\n      } = this.props;\n      const {\n        isZoomed,\n        zoomDomain,\n        preventAnimation\n      } = this.state;\n      const data = this.getData(this.props.data);\n      const {\n        yScale,\n        xScale\n      } = this.getScales(data, chartHeight, chartWidth);\n      const animated = preventAnimation === true ? false : series.props.animated;\n      return React__default.createElement(React.Fragment, null, containerProps.chartSized && gridlines && React__default.createElement(CloneElement, {\n        element: gridlines,\n        height: chartHeight,\n        width: chartWidth,\n        yScale: yScale,\n        xScale: xScale,\n        yAxis: yAxis.props,\n        xAxis: xAxis.props\n      }), React__default.createElement(CloneElement, {\n        element: xAxis,\n        height: chartHeight,\n        width: chartWidth,\n        scale: xScale,\n        onDimensionsChange: bind(updateAxes, this, 'horizontal')\n      }), React__default.createElement(CloneElement, {\n        element: yAxis,\n        height: chartHeight,\n        width: chartWidth,\n        scale: yScale,\n        onDimensionsChange: bind(updateAxes, this, 'vertical')\n      }), secondaryAxis && secondaryAxis.map((axis, i) => React__default.createElement(CloneElement, {\n        key: i,\n        element: axis,\n        height: chartHeight,\n        width: chartWidth,\n        onDimensionsChange: bind(updateAxes, this, 'horizontal')\n      })), containerProps.chartSized && React__default.createElement(CloneElement, {\n        element: brush,\n        height: chartHeight,\n        width: chartWidth,\n        scale: xScale\n      }, React__default.createElement(CloneElement, {\n        element: zoomPan,\n        onZoomPan: bind(this.onZoomPan, this),\n        height: chartHeight,\n        width: chartWidth,\n        axisType: xAxis.props.type,\n        roundDomains: xAxis.props.roundDomains,\n        data: data,\n        domain: zoomDomain\n      }, React__default.createElement(CloneElement, {\n        element: series,\n        id: `area-series-${id}`,\n        data: data,\n        height: chartHeight,\n        width: chartWidth,\n        yScale: yScale,\n        xScale: xScale,\n        isZoomed: isZoomed,\n        animated: animated\n      }))));\n    }\n\n    render() {\n      const {\n        xAxis,\n        yAxis,\n        id,\n        width,\n        height,\n        margins,\n        className\n      } = this.props;\n      return React__default.createElement(ChartContainer, {\n        id: id,\n        width: width,\n        height: height,\n        margins: margins,\n        xAxisVisible: isAxisVisible(xAxis.props),\n        yAxisVisible: isAxisVisible(yAxis.props),\n        className: classNames(css$n.scatterPlot, className)\n      }, props => this.renderChart(props));\n    }\n\n  }\n\n  ScatterPlot.defaultProps = {\n    data: [],\n    xAxis: React__default.createElement(LinearXAxis, {\n      type: \"time\"\n    }),\n    yAxis: React__default.createElement(LinearYAxis, {\n      type: \"value\"\n    }),\n    series: React__default.createElement(ScatterSeries, null),\n    gridlines: React__default.createElement(GridlineSeries, null),\n    brush: null,\n    zoomPan: null\n  };\n  var css$o = \".PointSeries-module_point__3ORLE {\\n  stroke: rgba(255, 255, 255, 0.5);\\n  stroke-width: 1px; }\\n\";\n  var css$p = {\n    \"point\": \"PointSeries-module_point__3ORLE\"\n  };\n  styleInject(css$o);\n\n  class PointSeries extends React.Component {\n    isVisible(point, index) {\n      const {\n        show,\n        activeValues,\n        data\n      } = this.props;\n      const isActive = activeValues && point && isEqual(activeValues.x, point.x);\n\n      if (show === 'hover') {\n        return isActive;\n      } else if (show === 'first') {\n        if (activeValues) {\n          return isActive;\n        } else {\n          return index === 0;\n        }\n      } else if (show === 'last') {\n        if (activeValues) {\n          return isActive;\n        } else {\n          return index === data.length - 1;\n        }\n      }\n\n      return show;\n    }\n\n    render() {\n      const {\n        data,\n        xScale,\n        yScale,\n        animated,\n        point,\n        color,\n        height,\n        width,\n        id\n      } = this.props;\n      return React__default.createElement(ScatterSeries, {\n        height: height,\n        width: width,\n        id: id,\n        animated: animated,\n        data: data,\n        xScale: xScale,\n        yScale: yScale,\n        point: React__default.createElement(CloneElement, {\n          element: point,\n          color: color,\n          className: css$p.point,\n          size: 4,\n          tooltip: null,\n          visible: this.isVisible.bind(this)\n        })\n      });\n    }\n\n  }\n\n  PointSeries.defaultProps = {\n    show: 'hover',\n    point: React__default.createElement(ScatterPoint, null)\n  };\n\n  class Area extends React.Component {\n    getAreaPath(data) {\n      const {\n        interpolation\n      } = this.props;\n      const fn = d3Shape.area().x(d => d.x).y0(d => d.y0).y1(d => d.y1).curve(interpolate(interpolation));\n      return fn(data);\n    }\n\n    getCoords() {\n      const {\n        data,\n        xScale,\n        yScale\n      } = this.props;\n      return data.map(item => ({\n        x: xScale(item.x),\n        x1: xScale(item.x) - xScale(item.x1),\n        y: yScale(item.y),\n        y0: yScale(item.y0),\n        y1: yScale(item.y1)\n      }));\n    }\n\n    getAreaEnter(coords) {\n      const areaPath = this.getAreaPath(coords);\n      return {\n        d: areaPath === null ? undefined : areaPath\n      };\n    }\n\n    getAreaExit() {\n      const {\n        yScale,\n        data,\n        xScale\n      } = this.props;\n      const maxY = Math.max(...yScale.range());\n      const coords = data.map(item => ({\n        x: xScale(item.x),\n        x1: 0,\n        y: 0,\n        y1: maxY,\n        y0: maxY\n      }));\n      const areaPath = this.getAreaPath(coords);\n      return {\n        d: areaPath === null ? undefined : areaPath\n      };\n    }\n\n    getFill() {\n      const {\n        mask,\n        id,\n        gradient\n      } = this.props;\n\n      if (mask) {\n        return `url(#mask-pattern-${id})`;\n      } else {\n        if (gradient) {\n          return `url(#gradient-${id})`;\n        }\n\n        return '';\n      }\n    }\n\n    getTransition() {\n      const {\n        animated,\n        index\n      } = this.props;\n\n      if (animated) {\n        return Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n          delay: index * 0.05\n        });\n      } else {\n        return {\n          type: false,\n          delay: 0\n        };\n      }\n    }\n\n    renderArea(coords) {\n      const {\n        mask,\n        id,\n        data\n      } = this.props;\n      const fill = this.getFill();\n      const maskPath = mask ? `url(#mask-${id})` : '';\n      const enter = this.getAreaEnter(coords);\n      const exit = this.getAreaExit();\n      const extras = constructFunctionProps(this.props, data);\n      const transition = this.getTransition();\n      return React__default.createElement(MotionPath, Object.assign({}, extras, {\n        pointerEvents: \"none\",\n        mask: maskPath,\n        fill: fill,\n        transition: transition,\n        custom: {\n          enter,\n          exit\n        }\n      }));\n    }\n\n    render() {\n      const {\n        id,\n        gradient,\n        mask,\n        data,\n        color,\n        index\n      } = this.props;\n      const coords = this.getCoords();\n      const stroke = color(data, index);\n      return React__default.createElement(React.Fragment, null, this.renderArea(coords), mask && React__default.createElement(React.Fragment, null, React__default.createElement(Mask, {\n        id: `mask-${id}`,\n        fill: `url(#gradient-${id})`\n      }), React__default.createElement(CloneElement, {\n        element: mask,\n        id: `mask-pattern-${id}`,\n        fill: stroke\n      })), gradient && React__default.createElement(CloneElement, {\n        element: gradient,\n        id: `gradient-${id}`,\n        color: stroke\n      }));\n    }\n\n  }\n\n  Area.defaultProps = {\n    gradient: React__default.createElement(Gradient, null),\n    interpolation: 'linear'\n  };\n\n  class Line extends React.PureComponent {\n    constructor() {\n      super(...arguments);\n      this.state = {};\n      this.ghostPathRef = React.createRef();\n    }\n\n    componentDidMount() {\n      if (this.ghostPathRef.current) {\n        this.setState({\n          pathLength: this.ghostPathRef.current.getTotalLength()\n        });\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.ghostPathRef.current && (prevProps.data !== this.props.data || prevProps.width !== this.props.width)) {\n        this.setState({\n          pathLength: this.ghostPathRef.current.getTotalLength()\n        });\n      }\n    }\n\n    getLinePath(data) {\n      const {\n        showZeroStroke,\n        interpolation\n      } = this.props;\n      const fn = d3Shape.line().x(d => d.x).y(d => d.y1).defined(d => showZeroStroke || calculateShowStroke(d, data)).curve(interpolate(interpolation));\n      return fn(data);\n    }\n\n    getCoords() {\n      const {\n        data,\n        xScale,\n        yScale\n      } = this.props;\n      return data.map(item => ({\n        x: xScale(item.x),\n        x1: xScale(item.x) - xScale(item.x1),\n        y: yScale(item.y),\n        y0: yScale(item.y0),\n        y1: yScale(item.y1)\n      }));\n    }\n\n    getLineEnter(coords) {\n      const {\n        hasArea\n      } = this.props;\n      const {\n        pathLength\n      } = this.state;\n      const linePath = this.getLinePath(coords);\n      let strokeDasharray = '';\n\n      if (!hasArea && pathLength !== undefined) {\n        strokeDasharray = `${pathLength} ${pathLength}`;\n      }\n\n      return {\n        d: linePath === null ? undefined : linePath,\n        strokeDashoffset: 0,\n        strokeDasharray: strokeDasharray\n      };\n    }\n\n    getLineExit() {\n      const {\n        hasArea,\n        yScale,\n        xScale,\n        data\n      } = this.props;\n      const {\n        pathLength\n      } = this.state;\n      let coords;\n\n      if (hasArea) {\n        const maxY = Math.max(...yScale.range());\n        coords = data.map(item => ({\n          x: xScale(item.x),\n          x1: 0,\n          y: maxY,\n          y1: maxY,\n          y0: maxY\n        }));\n      } else {\n        coords = this.getCoords();\n      }\n\n      const linePath = this.getLinePath(coords);\n      let strokeDasharray = '';\n      let strokeDashoffset = 0;\n\n      if (!hasArea && pathLength !== undefined) {\n        strokeDasharray = `${pathLength} ${pathLength}`;\n        strokeDashoffset = pathLength;\n      }\n\n      return {\n        d: linePath === null ? undefined : linePath,\n        strokeDasharray,\n        strokeDashoffset\n      };\n    }\n\n    getTransition() {\n      const {\n        animated,\n        index,\n        hasArea\n      } = this.props;\n\n      if (animated) {\n        return Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n          delay: hasArea ? 0 : index * 0.05\n        });\n      } else {\n        return {\n          type: false,\n          delay: 0\n        };\n      }\n    }\n\n    render() {\n      const {\n        data,\n        color,\n        index,\n        strokeWidth,\n        hasArea\n      } = this.props;\n      const {\n        pathLength\n      } = this.state;\n      const coords = this.getCoords();\n      const stroke = color(data, index);\n      const enter = this.getLineEnter(coords);\n      const exit = this.getLineExit();\n      const extras = constructFunctionProps(this.props, data);\n      const transition = this.getTransition();\n      const showLine = hasArea || pathLength !== undefined;\n      return React__default.createElement(React.Fragment, null, showLine && React__default.createElement(MotionPath, Object.assign({}, extras, {\n        pointerEvents: \"none\",\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n        fill: \"none\",\n        transition: transition,\n        custom: {\n          enter,\n          exit\n        }\n      })), !hasArea && React__default.createElement(\"path\", {\n        opacity: \"0\",\n        d: enter.d,\n        ref: this.ghostPathRef,\n        pointerEvents: \"none\"\n      }));\n    }\n\n  }\n\n  Line.defaultProps = {\n    showZeroStroke: true,\n    strokeWidth: 3\n  }; // For area charts, often symbols exceed the area\n  // and we want to add a little bit of padding to prevent clipping\n\n  const PADDING$1 = 25;\n  const HALF_PADDING$1 = PADDING$1 / 2;\n\n  class AreaSeries extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {};\n    }\n\n    getColor(point, index) {\n      const {\n        colorScheme,\n        data\n      } = this.props;\n      const {\n        activeValues\n      } = this.state;\n      const key = Array.isArray(point) ? point[0].key : point === null || point === void 0 ? void 0 : point.key;\n      return getColor({\n        data,\n        colorScheme,\n        active: activeValues,\n        point,\n        index,\n        key\n      });\n    }\n\n    onValueEnter(event) {\n      this.setState({\n        activePoint: event.pointX,\n        activeValues: event.value\n      });\n    }\n\n    onValueLeave() {\n      this.setState({\n        activePoint: undefined,\n        activeValues: undefined\n      });\n    }\n\n    renderArea(data, index = 0) {\n      const {\n        id,\n        width,\n        xScale,\n        yScale,\n        area,\n        line,\n        interpolation,\n        animated\n      } = this.props;\n      return React__default.createElement(React.Fragment, null, line && React__default.createElement(CloneElement, {\n        element: line,\n        xScale: xScale,\n        yScale: yScale,\n        data: data,\n        width: width,\n        index: index,\n        hasArea: area !== null,\n        animated: animated,\n        interpolation: interpolation,\n        color: this.getColor.bind(this)\n      }), area && React__default.createElement(CloneElement, {\n        element: area,\n        id: `${id}-area-${index}`,\n        xScale: xScale,\n        yScale: yScale,\n        data: data,\n        index: index,\n        animated: animated,\n        interpolation: interpolation,\n        color: this.getColor.bind(this)\n      }));\n    }\n\n    renderSymbols(data, index = 0) {\n      const {\n        xScale,\n        yScale,\n        symbols,\n        id,\n        height,\n        width,\n        animated,\n        area\n      } = this.props;\n      const {\n        activeValues\n      } = this.state;\n      const visible = symbols !== null;\n      const activeSymbols = symbols && symbols.props.activeValues || activeValues; // Animations are only valid for Area\n\n      const isAnimated = area !== undefined && animated && !activeSymbols;\n      return React__default.createElement(React.Fragment, null, visible && React__default.createElement(CloneElement, {\n        element: symbols,\n        key: `point-series-${id}`,\n        id: id,\n        height: height,\n        width: width,\n        activeValues: activeSymbols,\n        xScale: xScale,\n        yScale: yScale,\n        index: index,\n        data: data,\n        animated: isAnimated,\n        color: () => this.getColor(data, index)\n      }));\n    }\n\n    renderMarkLine() {\n      const {\n        height,\n        markLine\n      } = this.props;\n      const {\n        activePoint,\n        activeValues\n      } = this.state;\n      return React__default.createElement(React.Fragment, null, activeValues && markLine && React__default.createElement(CloneElement, {\n        element: markLine,\n        height: height,\n        pointX: activePoint\n      }));\n    }\n\n    renderSingleSeries(data) {\n      return React__default.createElement(React.Fragment, null, this.renderArea(data), this.renderMarkLine(), this.renderSymbols(data));\n    }\n\n    renderMultiSeries(data) {\n      return React__default.createElement(React.Fragment, null, data.map((point, index) => React__default.createElement(React.Fragment, {\n        key: `${point.key.toString()}`\n      }, this.renderArea(point.data, index))).reverse(), this.renderMarkLine(), data.map((point, index) => React__default.createElement(React.Fragment, {\n        key: `${point.key.toString()}`\n      }, this.renderSymbols(point.data, index))).reverse());\n    }\n\n    render() {\n      const {\n        data,\n        height,\n        id,\n        width,\n        isZoomed,\n        tooltip,\n        xScale,\n        yScale,\n        type\n      } = this.props;\n      const isMulti = type === 'grouped' || type === 'stacked' || type === 'stackedNormalized';\n      return React__default.createElement(React.Fragment, null, React__default.createElement(\"defs\", null, React__default.createElement(\"clipPath\", {\n        id: `${id}-path`\n      }, React__default.createElement(\"rect\", {\n        width: isZoomed ? width : width + PADDING$1,\n        height: height + PADDING$1,\n        x: isZoomed ? 0 : -HALF_PADDING$1,\n        y: -HALF_PADDING$1\n      }))), React__default.createElement(CloneElement, {\n        element: tooltip,\n        xScale: xScale,\n        yScale: yScale,\n        data: data,\n        height: height,\n        width: width,\n        color: this.getColor.bind(this),\n        onValueEnter: bind(this.onValueEnter, this),\n        onValueLeave: bind(this.onValueLeave, this)\n      }, React__default.createElement(\"g\", {\n        clipPath: `url(#${id}-path)`\n      }, isMulti && this.renderMultiSeries(data), !isMulti && this.renderSingleSeries(data))));\n    }\n\n  }\n\n  AreaSeries.defaultProps = {\n    colorScheme: 'cybertron',\n    animated: true,\n    interpolation: 'linear',\n    type: 'standard',\n    line: React__default.createElement(Line, null),\n    area: React__default.createElement(Area, null),\n    markLine: React__default.createElement(MarkLine, null),\n    tooltip: React__default.createElement(TooltipArea, null),\n    symbols: React__default.createElement(PointSeries, null)\n  };\n\n  class StackedNormalizedAreaSeries extends React.Component {\n    render() {\n      const _a = this.props,\n            {\n        type,\n        symbols\n      } = _a,\n            rest = __rest(_a, [\"type\", \"symbols\"]);\n\n      return React__default.createElement(AreaSeries, Object.assign({}, rest, {\n        type: \"stackedNormalized\",\n        symbols: symbols && React__default.createElement(CloneElement, Object.assign({\n          element: symbols\n        }, symbols.props, {\n          point: React__default.createElement(CloneElement, Object.assign({\n            element: symbols.props.point\n          }, symbols.props.point.props, {\n            tooltip: null\n          }))\n        }))\n      }));\n    }\n\n  }\n\n  StackedNormalizedAreaSeries.defaultProps = Object.assign(Object.assign({}, AreaSeries.defaultProps), {\n    type: 'stackedNormalized',\n    tooltip: React__default.createElement(TooltipArea, {\n      tooltip: React__default.createElement(ChartTooltip, {\n        content: (series, color) => {\n          if (!series) {\n            return null;\n          }\n\n          const value = Object.assign(Object.assign({}, series), {\n            data: series.data.map(d => Object.assign(Object.assign({}, d), {\n              value: `${formatValue(d.value)} ∙ ${formatValue(Math.floor((d.y1 - d.y0) * 100))}%`\n            }))\n          });\n          return React__default.createElement(TooltipTemplate, {\n            color: color,\n            value: value\n          });\n        }\n      })\n    })\n  });\n\n  class StackedAreaSeries extends React.Component {\n    render() {\n      const _a = this.props,\n            {\n        type,\n        symbols\n      } = _a,\n            rest = __rest(_a, [\"type\", \"symbols\"]);\n\n      return React__default.createElement(AreaSeries, Object.assign({}, rest, {\n        type: \"stacked\",\n        symbols: symbols && React__default.createElement(CloneElement, Object.assign({\n          element: symbols\n        }, symbols.props, {\n          point: React__default.createElement(CloneElement, Object.assign({\n            element: symbols.props.point\n          }, symbols.props.point.props, {\n            tooltip: null\n          }))\n        }))\n      }));\n    }\n\n  }\n\n  StackedAreaSeries.defaultProps = Object.assign(Object.assign({}, AreaSeries.defaultProps), {\n    type: 'stacked'\n  });\n  var css$q = \".AreaChart-module_areaChart__3MZH6 {\\n  overflow: visible; }\\n\";\n  var css$r = {\n    \"areaChart\": \"AreaChart-module_areaChart__3MZH6\"\n  };\n  styleInject(css$q);\n\n  class AreaChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.getData = memoize((data, type) => {\n        if (type === 'stacked' || type === 'stackedNormalized') {\n          return buildStackData(data, type === 'stackedNormalized');\n        } else if (type === 'grouped') {\n          return buildNestedChartData(data, true);\n        } else {\n          return buildShallowChartData(data);\n        }\n      });\n      const zoom = props.zoomPan ? props.zoomPan.props : {};\n      const zoomControlled = !zoom.hasOwnProperty('domain');\n      this.state = {\n        zoomDomain: zoom.domain,\n        isZoomed: !!zoom.domain,\n        zoomControlled\n      };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n      if (props.zoomPan) {\n        const zoom = props.zoomPan.props;\n\n        if (!state.zoomControlled && zoom.domain !== state.zoomDomain) {\n          return {\n            zoomDomain: zoom.domain,\n            isZoomed: !!zoom.domain\n          };\n        }\n      }\n\n      return null;\n    }\n\n    getScales(data, chartWidth, chartHeight, isMultiSeries) {\n      const {\n        zoomDomain\n      } = this.state;\n      const {\n        yAxis,\n        xAxis\n      } = this.props;\n      const xScale = getXScale({\n        width: chartWidth,\n        type: xAxis.props.type,\n        roundDomains: xAxis.props.roundDomains,\n        data,\n        domain: zoomDomain || xAxis.props.domain,\n        isMultiSeries\n      });\n      const yScale = getYScale({\n        roundDomains: yAxis.props.roundDomains,\n        type: yAxis.props.type,\n        height: chartHeight,\n        data,\n        domain: yAxis.props.domain,\n        isMultiSeries\n      });\n      return {\n        xScale,\n        yScale\n      };\n    }\n\n    onZoomPan(event) {\n      if (this.state.zoomControlled) {\n        this.setState({\n          zoomDomain: event.domain,\n          isZoomed: event.isZoomed,\n          preventAnimation: true\n        });\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setState({\n          preventAnimation: false\n        }), 500);\n      }\n    }\n\n    renderChart(containerProps) {\n      const {\n        chartHeight,\n        chartWidth,\n        id,\n        updateAxes\n      } = containerProps;\n      const {\n        series,\n        yAxis,\n        xAxis,\n        gridlines,\n        brush,\n        zoomPan,\n        secondaryAxis\n      } = this.props;\n      const {\n        zoomDomain,\n        preventAnimation,\n        isZoomed\n      } = this.state;\n      const seriesType = series.props.type;\n      const isMultiSeries = seriesType === 'stacked' || seriesType === 'stackedNormalized' || seriesType === 'grouped';\n      const data = this.getData(this.props.data, seriesType);\n      const {\n        xScale,\n        yScale\n      } = this.getScales(data, chartWidth, chartHeight, isMultiSeries);\n      const animated = preventAnimation === true ? false : series.props.animated;\n      return React__default.createElement(React.Fragment, null, containerProps.chartSized && gridlines && React__default.createElement(CloneElement, {\n        element: gridlines,\n        height: chartHeight,\n        width: chartWidth,\n        yScale: yScale,\n        xScale: xScale,\n        yAxis: yAxis.props,\n        xAxis: xAxis.props\n      }), React__default.createElement(CloneElement, {\n        element: xAxis,\n        height: chartHeight,\n        width: chartWidth,\n        scale: xScale,\n        onDimensionsChange: bind(updateAxes, this, 'horizontal')\n      }), React__default.createElement(CloneElement, {\n        element: yAxis,\n        height: chartHeight,\n        width: chartWidth,\n        scale: yScale,\n        onDimensionsChange: bind(updateAxes, this, 'vertical')\n      }), secondaryAxis && secondaryAxis.map((axis, i) => React__default.createElement(CloneElement, {\n        key: i,\n        element: axis,\n        height: chartHeight,\n        width: chartWidth,\n        onDimensionsChange: bind(updateAxes, this, 'horizontal')\n      })), containerProps.chartSized && React__default.createElement(CloneElement, {\n        element: brush,\n        height: chartHeight,\n        width: chartWidth,\n        scale: xScale\n      }, React__default.createElement(CloneElement, {\n        element: zoomPan,\n        onZoomPan: bind(this.onZoomPan, this),\n        height: chartHeight,\n        width: chartWidth,\n        axisType: xAxis.props.type,\n        roundDomains: xAxis.props.roundDomains,\n        data: data,\n        domain: zoomDomain\n      }, React__default.createElement(CloneElement, {\n        element: series,\n        id: `area-series-${id}`,\n        data: data,\n        height: chartHeight,\n        width: chartWidth,\n        yScale: yScale,\n        xScale: xScale,\n        isZoomed: isZoomed,\n        animated: animated\n      }))));\n    }\n\n    render() {\n      const {\n        xAxis,\n        yAxis,\n        id,\n        width,\n        height,\n        margins,\n        className,\n        series\n      } = this.props;\n      return React__default.createElement(ChartContainer, {\n        id: id,\n        width: width,\n        height: height,\n        margins: margins,\n        xAxisVisible: isAxisVisible(xAxis.props),\n        yAxisVisible: isAxisVisible(yAxis.props),\n        className: classNames(css$r.areaChart, className, series.type)\n      }, props => this.renderChart(props));\n    }\n\n  }\n\n  AreaChart.defaultProps = {\n    data: [],\n    xAxis: React__default.createElement(LinearXAxis, {\n      type: \"time\"\n    }),\n    yAxis: React__default.createElement(LinearYAxis, {\n      type: \"value\"\n    }),\n    series: React__default.createElement(AreaSeries, null),\n    gridlines: React__default.createElement(GridlineSeries, null),\n    brush: null,\n    zoomPan: null\n  };\n\n  class StackedAreaChart extends React.Component {\n    render() {\n      return React__default.createElement(AreaChart, Object.assign({}, this.props));\n    }\n\n  }\n\n  StackedAreaChart.defaultProps = {\n    series: React__default.createElement(StackedAreaSeries, null)\n  };\n\n  class StackedNormalizedAreaChart extends React.Component {\n    render() {\n      return React__default.createElement(AreaChart, Object.assign({}, this.props));\n    }\n\n  }\n\n  StackedNormalizedAreaChart.defaultProps = {\n    series: React__default.createElement(StackedNormalizedAreaSeries, null),\n    yAxis: React__default.createElement(LinearYAxis, {\n      type: \"value\",\n      tickSeries: React__default.createElement(LinearYAxisTickSeries, {\n        label: React__default.createElement(LinearYAxisTickLabel, {\n          rotation: false,\n          format: data => `${data * 100}%`\n        })\n      })\n    })\n  };\n  var css$s = \".Bar-module_rounded__1vgiX.Bar-module_vertical__1kQdZ {\\n  -webkit-clip-path: inset(0 0 0 0 round 2px 2px 0 0);\\n          clip-path: inset(0 0 0 0 round 2px 2px 0 0); }\\n\\n.Bar-module_rounded__1vgiX.Bar-module_horizontal__h7xo- {\\n  -webkit-clip-path: inset(0 0 0 0 round 0 2px 2px 0);\\n          clip-path: inset(0 0 0 0 round 0 2px 2px 0); }\\n\";\n  var css$t = {\n    \"rounded\": \"Bar-module_rounded__1vgiX\",\n    \"vertical\": \"Bar-module_vertical__1kQdZ\",\n    \"horizontal\": \"Bar-module_horizontal__h7xo-\"\n  };\n  styleInject(css$s);\n\n  class Bar extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {};\n      this.rect = React.createRef();\n    }\n\n    getExit({\n      x,\n      y,\n      width,\n      height\n    }) {\n      const {\n        yScale,\n        xScale,\n        type\n      } = this.props;\n      const isVertical = this.getIsVertical();\n      let newX = isVertical ? x : Math.min(...xScale.range());\n      let newY = isVertical ? Math.max(...yScale.range()) : y;\n      const newHeight = isVertical ? 0 : height;\n      const newWidth = isVertical ? width : 0;\n\n      if (type === 'stackedDiverging') {\n        if (isVertical) {\n          newY = newY / 2;\n        } else {\n          newX = newX / 2;\n        }\n      }\n\n      return {\n        x: newX,\n        y: newY,\n        height: newHeight,\n        width: newWidth\n      };\n    }\n\n    getKeyCoords(v, v0, v1, scale, sizeOverride, isCategorical, padding) {\n      let offset;\n      let size;\n\n      if (isCategorical) {\n        if (scale.bandwidth) {\n          offset = scale(v);\n          size = scale.bandwidth();\n\n          if (sizeOverride) {\n            if (offset) {\n              offset = offset + size / 2 - sizeOverride / 2;\n            } else {\n              // Stacked bar charts don't have offsets...\n              offset = size / 2 - sizeOverride / 2;\n            }\n\n            size = sizeOverride;\n          }\n        } else {\n          if (sizeOverride) {\n            throw new Error('Not a valid option for this scale type');\n          }\n\n          offset = scale(v0);\n          size = scale(v1 - v0);\n\n          if (padding) {\n            const calc = this.calculateLinearScalePadding(scale, offset, size);\n            offset = calc.offset;\n            size = calc.size;\n          }\n        }\n      } else {\n        if (sizeOverride) {\n          throw new Error('Not a valid option for this scale type');\n        }\n\n        const c0 = scale(v0);\n        const c1 = scale(v1);\n        const delta = c1 - c0;\n        offset = c0;\n        size = Math.max(delta - 1, 0);\n      }\n\n      return {\n        offset,\n        size\n      };\n    }\n\n    getValueCoords(v0, v1, scale) {\n      const c0 = scale(v0);\n      const c1 = scale(v1);\n      const size = Math.abs(c0 - c1);\n      const minSize = Math.max(this.props.minHeight || 0, size);\n      return {\n        offset: Math.min(c0, c1),\n        size: minSize\n      };\n    }\n\n    getIsVertical() {\n      return this.props.layout === 'vertical';\n    }\n\n    getCoords(data) {\n      const {\n        isCategorical,\n        width,\n        padding,\n        xScale1\n      } = this.props;\n      const isVertical = this.getIsVertical();\n      let yScale = this.props.yScale;\n      let xScale = this.props.xScale;\n\n      if (xScale1) {\n        if (isVertical) {\n          xScale = xScale1;\n        } else {\n          yScale = xScale1;\n        }\n      }\n\n      if (isVertical) {\n        const xCoords = this.getKeyCoords(data.x, data.x0, data.x1, xScale, width, isCategorical, padding);\n        const yCoords = this.getValueCoords(data.y0, data.y1, yScale);\n        return {\n          x: xCoords.offset,\n          width: xCoords.size,\n          y: yCoords.offset,\n          height: yCoords.size\n        };\n      } else {\n        const yCoords = this.getKeyCoords(data.y, data.y0, data.y1, yScale, width, isCategorical, padding);\n        const xCoords = this.getValueCoords(data.x0, data.x1, xScale);\n        return {\n          x: xCoords.offset,\n          width: xCoords.size,\n          y: yCoords.offset,\n          height: yCoords.size\n        };\n      }\n    }\n    /**\r\n     * This function calculates the padding on a linear scale used by the marimekko chart.\r\n     */\n\n\n    calculateLinearScalePadding(scale, offset, size) {\n      const {\n        barCount,\n        groupIndex,\n        padding\n      } = this.props;\n      const totalSize = scale.range()[1];\n      const sizeMinusPadding = totalSize - padding * (barCount - 1);\n      const multiplier = sizeMinusPadding / totalSize;\n      offset = offset * multiplier + groupIndex * padding;\n      size = size * multiplier;\n      return {\n        size,\n        offset\n      };\n    }\n\n    onMouseEnter(event) {\n      const {\n        onMouseEnter,\n        data,\n        tooltip\n      } = this.props; // Only tooltip bars rely on this...\n\n      if (tooltip) {\n        this.setState({\n          active: true\n        });\n      }\n\n      onMouseEnter({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    onMouseLeave(event) {\n      const {\n        onMouseLeave,\n        data,\n        tooltip\n      } = this.props; // Only tooltip bars rely on this...\n\n      if (tooltip) {\n        this.setState({\n          active: false\n        });\n      }\n\n      onMouseLeave({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    onMouseClick(event) {\n      const {\n        onClick,\n        data\n      } = this.props;\n      onClick({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    getFill(color) {\n      const {\n        mask,\n        id,\n        gradient\n      } = this.props;\n\n      if (mask) {\n        return `url(#mask-pattern-${id})`;\n      } else {\n        if (gradient) {\n          return `url(#gradient-${id})`;\n        }\n\n        return color;\n      }\n    }\n\n    getTooltipData() {\n      const {\n        data,\n        isCategorical\n      } = this.props;\n      const isVertical = this.getIsVertical();\n      const xAttr = isCategorical ? 'x' : 'x0';\n      let x = data[xAttr]; // Stacked diverging negative numbers\n      // in horizontal layouts need to pull x0\n\n      if (data.x0 < 0) {\n        x = data.x0;\n      }\n\n      const matches = isVertical ? data.key && data.key !== x : data.key && data.key !== data.y;\n\n      if (matches) {\n        x = `${data.key} ∙ ${x}`;\n      }\n\n      return {\n        y: data.y,\n        x\n      };\n    }\n\n    getTransition(index) {\n      const {\n        animated,\n        barCount,\n        layout\n      } = this.props;\n\n      if (animated) {\n        let delay = 0;\n\n        if (layout === 'vertical') {\n          delay = index / barCount * 0.5;\n        } else {\n          delay = (barCount - index) / barCount * 0.5;\n        }\n\n        return Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n          delay: delay\n        });\n      } else {\n        return {\n          type: false,\n          delay: 0\n        };\n      }\n    }\n\n    renderBar(currentColorShade, coords, index) {\n      const {\n        rounded,\n        cursor,\n        mask,\n        id,\n        data,\n        rx,\n        ry,\n        onMouseMove\n      } = this.props;\n      const maskPath = mask ? `url(#mask-${id})` : '';\n      const fill = this.getFill(currentColorShade);\n      const initialExit = this.getExit(coords);\n      const isVertical = this.getIsVertical();\n      const extras = constructFunctionProps(this.props, data);\n      const transition = this.getTransition(index); // UGH: https://github.com/framer/motion/issues/384\n\n      const initial = Object.assign(Object.assign({}, initialExit), {\n        attrX: initialExit.x,\n        attrY: initialExit.y,\n        fill\n      });\n      delete initial.x;\n      delete initial.y;\n      const animate = Object.assign(Object.assign({}, coords), {\n        attrX: coords.x,\n        attrY: coords.y,\n        fill\n      });\n      delete animate.x;\n      delete animate.y;\n      return React__default.createElement(\"g\", {\n        ref: this.rect\n      }, React__default.createElement(framerMotion.motion.rect, {\n        className: classNames({\n          [css$t.rounded]: rounded,\n          [css$t.vertical]: isVertical,\n          [css$t.horizontal]: !isVertical\n        }, extras.className),\n        style: Object.assign(Object.assign({}, extras.style), {\n          cursor\n        }),\n        mask: maskPath,\n        rx: rx,\n        ry: ry,\n        initial: initial,\n        animate: animate,\n        exit: initial,\n        transition: transition,\n        onMouseEnter: bind(this.onMouseEnter, this),\n        onMouseLeave: bind(this.onMouseLeave, this),\n        onClick: bind(this.onMouseClick, this),\n        onMouseMove: onMouseMove\n      }));\n    }\n\n    renderGuideBar() {\n      const {\n        data,\n        yScale,\n        active,\n        barIndex,\n        type,\n        guide,\n        xScale\n      } = this.props;\n\n      if (!guide) {\n        return null;\n      } // If we are stacked, only render the first bar\n\n\n      if (type === 'stacked' && barIndex !== 0) {\n        return null;\n      } // No reason to show them since they are always 100% tall\n\n\n      if (type === 'stackedNormalized' || type === 'marimekko') {\n        console.error('Guide bars are not supported for these chart types');\n        return null;\n      }\n\n      const vertical = this.getIsVertical();\n      const valueScale = vertical ? yScale : xScale;\n      const [start, end] = valueScale.domain();\n      const attr = vertical ? 'y' : 'x'; // For stacked diverging we need to flip the points for positive / negative bars\n\n      const attrStart = type === 'stackedDiverging' ? '0' : '1';\n      const endPoint = type === 'stackedDiverging' ? start : end;\n      const startPoint = type === 'stackedDiverging' && data[attr] > 0 ? end : endPoint;\n      const coords = this.getCoords(Object.assign(Object.assign({}, data), {\n        [attr]: endPoint,\n        [`${attr}${attrStart}`]: startPoint\n      }));\n      return React__default.createElement(CloneElement, Object.assign({\n        element: guide\n      }, coords, {\n        active: active\n      }));\n    }\n\n    render() {\n      const {\n        activeBrightness,\n        id,\n        gradient,\n        data,\n        barIndex,\n        color,\n        yScale,\n        barCount,\n        xScale,\n        groupIndex,\n        rangeLines,\n        animated,\n        type,\n        tooltip,\n        layout,\n        mask,\n        label\n      } = this.props;\n      const active = tooltip ? this.state.active : this.props.active;\n      const stroke = color(data, barIndex);\n      const coords = this.getCoords(data);\n      const currentColorShade = active ? chroma(stroke).brighten(activeBrightness).hex() : stroke;\n      const rangeLineColor = rangeLines && rangeLines.props.color || stroke;\n      const rangeLineColorShade = active ? chroma(rangeLineColor).brighten(activeBrightness) : rangeLineColor;\n      const index = groupIndex !== undefined ? groupIndex : barIndex;\n      const isVertical = this.getIsVertical();\n      const scale = isVertical ? yScale : xScale;\n      const tooltipData = this.getTooltipData();\n      const barLabel = isVertical ? tooltipData.y : tooltipData.x;\n      const placement = layout === 'vertical' ? 'top' : 'right';\n      return React__default.createElement(React.Fragment, null, this.renderGuideBar(), this.renderBar(currentColorShade, coords, index), rangeLines && React__default.createElement(CloneElement, Object.assign({\n        element: rangeLines\n      }, coords, {\n        index: index,\n        data: data,\n        scale: scale,\n        color: rangeLineColorShade,\n        barCount: barCount,\n        animated: animated,\n        layout: layout,\n        type: type\n      })), mask && React__default.createElement(React.Fragment, null, React__default.createElement(Mask, {\n        id: `mask-${id}`,\n        fill: `url(#gradient-${id})`\n      }), React__default.createElement(CloneElement, {\n        element: mask,\n        id: `mask-pattern-${id}`,\n        fill: stroke\n      })), gradient && React__default.createElement(CloneElement, {\n        element: gradient,\n        id: `gradient-${id}`,\n        direction: layout,\n        color: currentColorShade\n      }), label && React__default.createElement(CloneElement, Object.assign({\n        element: label\n      }, coords, {\n        text: formatValue(barLabel),\n        index: index,\n        data: data,\n        scale: scale,\n        fill: label.props.fill || currentColorShade,\n        barCount: barCount,\n        animated: animated,\n        layout: layout,\n        type: type\n      })), tooltip && React__default.createElement(CloneElement, {\n        element: tooltip,\n        visible: !!active,\n        reference: this.rect,\n        color: color,\n        value: tooltipData,\n        placement: tooltip.props.placement || placement,\n        data: data\n      }));\n    }\n\n  }\n\n  Bar.defaultProps = {\n    activeBrightness: 0.5,\n    rounded: true,\n    rx: 0,\n    ry: 0,\n    cursor: 'auto',\n    rangeLines: null,\n    label: null,\n    tooltip: null,\n    layout: 'vertical',\n    guide: null,\n    gradient: React__default.createElement(Gradient, null),\n    onClick: () => undefined,\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined,\n    onMouseMove: () => undefined\n  };\n\n  class BarSeries extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {};\n      this.ref = React.createRef();\n    }\n\n    getIsMulti() {\n      const {\n        type\n      } = this.props;\n      return type === 'grouped' || type === 'stacked' || type === 'marimekko' || type === 'stackedNormalized' || type === 'stackedDiverging';\n    }\n    /**\r\n     * Get the translation for the bar group.\r\n     */\n\n\n    getTransform(data) {\n      const {\n        xScale,\n        yScale,\n        type,\n        layout\n      } = this.props;\n      let xPos = 0;\n      let yPos = 0;\n\n      if (type !== 'marimekko') {\n        if (layout === 'vertical') {\n          const val = xScale(data.key);\n          xPos = val;\n        } else {\n          const val = yScale(data.key);\n          yPos = val;\n        }\n      }\n\n      return `translate(${xPos}, ${yPos})`;\n    }\n\n    getColor(point, index) {\n      const {\n        colorScheme,\n        data,\n        layout\n      } = this.props;\n      const isMultiSeries = this.getIsMulti();\n      let key = 'key';\n\n      if (isMultiSeries) {\n        if (layout === 'vertical') {\n          key = 'x';\n        } else {\n          key = 'y';\n        }\n      } // histograms...\n\n\n      if (point[key] === undefined) {\n        key = 'x0';\n      }\n\n      return getColor({\n        colorScheme,\n        point,\n        index,\n        data,\n        isMultiSeries,\n        attribute: key\n      });\n    }\n\n    onMouseMove(event) {\n      var _a; // Manuallly call mouse move so we don't have to kill bar pointer events\n\n\n      (_a = this.ref.current) === null || _a === void 0 ? void 0 : _a.onMouseMove(event);\n    }\n\n    renderBar(data, barIndex, barCount, groupIndex) {\n      const {\n        xScale1,\n        bar,\n        padding,\n        animated,\n        isCategorical,\n        layout,\n        type,\n        id\n      } = this.props;\n      const {\n        activeValues\n      } = this.state;\n      const active = activeValues && activeValues.x === data.key;\n      const isVertical = layout === 'vertical';\n      let yScale = this.props.yScale;\n      let xScale = this.props.xScale;\n\n      if (xScale1) {\n        if (isVertical) {\n          xScale = xScale1;\n        } else {\n          yScale = xScale1;\n        }\n      } // Histograms dont have keys\n\n\n      let key = barIndex.toString();\n\n      if (data.key) {\n        key = `${data.key.toString()}-${groupIndex}`;\n      }\n\n      let barElements = Array.isArray(bar) ? bar[barIndex] : bar;\n\n      if (!bar) {\n        barElements = React__default.createElement(Bar, null);\n      }\n\n      return React__default.createElement(React.Fragment, {\n        key: key\n      }, React__default.createElement(CloneElement, {\n        element: barElements,\n        id: `${id}-bar-${groupIndex}-${barIndex}`,\n        animated: animated,\n        active: active,\n        xScale: xScale,\n        xScale1: xScale1,\n        yScale: yScale,\n        padding: padding,\n        barCount: barCount,\n        groupIndex: groupIndex,\n        barIndex: barIndex,\n        data: data,\n        isCategorical: isCategorical,\n        color: this.getColor.bind(this),\n        layout: layout,\n        type: type,\n        onMouseMove: this.onMouseMove.bind(this)\n      }));\n    }\n    /**\r\n     * Get the bar group.\r\n     */\n\n\n    renderBarGroup(data, barCount, groupIndex) {\n      return React__default.createElement(React.Fragment, null, data.map((barData, barIndex) => this.renderBar(barData, barIndex, barCount, groupIndex)));\n    }\n\n    onValueEnter(event) {\n      this.setState({\n        activeValues: event.value\n      });\n    }\n\n    onValueLeave() {\n      this.setState({\n        activeValues: undefined\n      });\n    }\n\n    render() {\n      const {\n        data,\n        tooltip,\n        xScale,\n        yScale,\n        height,\n        width,\n        layout\n      } = this.props;\n      const isMulti = this.getIsMulti();\n      return React__default.createElement(CloneElement, {\n        element: tooltip,\n        childRef: this.ref,\n        xScale: xScale,\n        yScale: yScale,\n        data: data,\n        height: height,\n        width: width,\n        inverse: false,\n        isHorizontal: layout === 'horizontal',\n        color: this.getColor.bind(this),\n        onValueEnter: this.onValueEnter.bind(this),\n        onValueLeave: this.onValueLeave.bind(this)\n      }, isMulti && data.map((groupData, index) => React__default.createElement(\"g\", {\n        transform: this.getTransform(groupData),\n        key: `bar-group-${index}`\n      }, this.renderBarGroup(groupData.data, data.length, index))), !isMulti && this.renderBarGroup(data, data.length));\n    }\n\n  }\n\n  BarSeries.defaultProps = {\n    type: 'standard',\n    padding: 0.1,\n    groupPadding: 16,\n    animated: true,\n    tooltip: React__default.createElement(TooltipArea, {\n      tooltip: React__default.createElement(ChartTooltip, {\n        followCursor: true,\n        modifiers: {\n          offset: '5px, 5px'\n        }\n      })\n    }),\n    colorScheme: 'cybertron',\n    bar: React__default.createElement(Bar, null),\n    layout: 'vertical'\n  };\n\n  class RangeLines extends React.Component {\n    getIsVertical() {\n      return this.props.layout === 'vertical';\n    }\n\n    getEnter(rangeLineHeight) {\n      const {\n        x,\n        y,\n        height,\n        position,\n        width,\n        data\n      } = this.props;\n      const isVertical = this.getIsVertical();\n      let newY = y;\n      let newX = x; // If its diverging and the value is negative, we\n      // need to reverse the type...\n\n      const isTop = position === 'top';\n      const direction = isVertical ? data.y < 0 && isTop ? 'bottom' : position : data.x0 < 0 && isTop ? 'bottom' : position;\n\n      if (isVertical) {\n        if (direction === 'top') {\n          newY = y;\n        } else {\n          newY = y + height - rangeLineHeight;\n        }\n      } else {\n        if (direction === 'top') {\n          newX = x + width - rangeLineHeight;\n        } else {\n          newX = x;\n        }\n      }\n\n      return {\n        x: newX,\n        y: newY,\n        opacity: 1\n      };\n    }\n\n    getExit(rangeLineHeight) {\n      const {\n        x,\n        scale,\n        height,\n        width,\n        y,\n        position,\n        type\n      } = this.props;\n      const isVertical = this.getIsVertical();\n      let newY = y;\n      let newX = x;\n\n      if (isVertical) {\n        const maxY = Math.max(...scale.range());\n\n        if (position === 'top') {\n          newY = maxY;\n        } else {\n          newY = maxY + height - rangeLineHeight;\n        }\n      } else {\n        const minX = Math.min(...scale.range());\n\n        if (position === 'top') {\n          newX = minX;\n        } else {\n          newX = minX + width - rangeLineHeight;\n        }\n      }\n\n      if (type === 'stackedDiverging') {\n        if (isVertical) {\n          newY = newY / 2;\n        } else {\n          newX = newX / 2;\n        }\n      }\n\n      return {\n        y: newY,\n        x: newX,\n        opacity: 0\n      };\n    }\n\n    getLineHeight() {\n      const {\n        height,\n        width,\n        strokeWidth\n      } = this.props;\n      const isVertical = this.getIsVertical();\n      return Math.min(strokeWidth, isVertical ? height : width);\n    }\n\n    getHeightWidth(rangeLineHeight) {\n      const {\n        height,\n        width\n      } = this.props;\n      const isVertical = this.getIsVertical();\n      return {\n        width: isVertical ? width : rangeLineHeight,\n        height: isVertical ? rangeLineHeight : height\n      };\n    }\n\n    getDelay() {\n      const {\n        animated,\n        index,\n        barCount,\n        layout\n      } = this.props;\n      let delay = 0;\n\n      if (animated) {\n        if (layout === 'vertical') {\n          return index / barCount * 0.5;\n        } else {\n          return (barCount - index) / barCount * 0.5;\n        }\n      }\n\n      return delay;\n    }\n\n    render() {\n      const {\n        color\n      } = this.props;\n      const rangeLineHeight = this.getLineHeight();\n      const enterProps = this.getEnter(rangeLineHeight);\n      const exitProps = this.getExit(rangeLineHeight);\n      const {\n        height,\n        width\n      } = this.getHeightWidth(rangeLineHeight);\n      const delay = this.getDelay(); // UGH: https://github.com/framer/motion/issues/384\n\n      const initial = Object.assign(Object.assign({}, exitProps), {\n        attrX: exitProps.x,\n        attrY: exitProps.y\n      });\n      delete initial.x;\n      delete initial.y;\n      const animate = Object.assign(Object.assign({}, enterProps), {\n        attrX: enterProps.x,\n        attrY: enterProps.y\n      });\n      delete animate.x;\n      delete animate.y;\n      return React__default.createElement(framerMotion.motion.rect, {\n        pointerEvents: \"none\",\n        fill: color,\n        width: width,\n        height: height,\n        initial: initial,\n        animate: animate,\n        exit: initial,\n        transition: Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n          delay\n        })\n      });\n    }\n\n  }\n\n  RangeLines.defaultProps = {\n    position: 'top',\n    strokeWidth: 1,\n    layout: 'vertical'\n  };\n\n  class StackedBarSeries extends React.Component {\n    render() {\n      const _a = this.props,\n            {\n        type\n      } = _a,\n            rest = __rest(_a, [\"type\"]);\n\n      return React__default.createElement(BarSeries, Object.assign({\n        type: type\n      }, rest));\n    }\n\n  }\n\n  StackedBarSeries.defaultProps = Object.assign(Object.assign({}, BarSeries.defaultProps), {\n    type: 'stacked',\n    bar: React__default.createElement(Bar, {\n      rounded: false,\n      gradient: React__default.createElement(Gradient, {\n        stops: [React__default.createElement(GradientStop, {\n          offset: \"5%\",\n          stopOpacity: 0.1,\n          key: \"start\"\n        }), React__default.createElement(GradientStop, {\n          offset: \"90%\",\n          stopOpacity: 0.7,\n          key: \"stop\"\n        })]\n      }),\n      rangeLines: React__default.createElement(RangeLines, {\n        position: \"top\",\n        strokeWidth: 3\n      })\n    })\n  });\n\n  class StackedNormalizedBarSeries extends React.Component {\n    render() {\n      const _a = this.props,\n            rest = __rest(_a, [\"type\"]);\n\n      return React__default.createElement(BarSeries, Object.assign({\n        type: \"stackedNormalized\"\n      }, rest));\n    }\n\n  }\n\n  StackedNormalizedBarSeries.defaultProps = Object.assign(Object.assign({}, BarSeries.defaultProps), {\n    type: 'stackedNormalized',\n    tooltip: React__default.createElement(TooltipArea, {\n      tooltip: React__default.createElement(ChartTooltip, {\n        followCursor: true,\n        modifiers: {\n          offset: '5px, 5px'\n        },\n        content: (point, color) => {\n          point.data = point.data.map(d => {\n            // Handle horz case\n            const start = isNaN(d.y0) ? d.x0 : d.y0;\n            const end = isNaN(d.y1) ? d.x1 : d.y1;\n            return Object.assign(Object.assign({}, d), {\n              value: `${formatValue(Math.floor((end - start) * 100))}%`\n            });\n          });\n          return React__default.createElement(TooltipTemplate, {\n            value: point,\n            color: color\n          });\n        }\n      })\n    }),\n    bar: React__default.createElement(Bar, {\n      rounded: false,\n      gradient: React__default.createElement(Gradient, {\n        stops: [React__default.createElement(GradientStop, {\n          offset: \"5%\",\n          stopOpacity: 0.1,\n          key: \"start\"\n        }), React__default.createElement(GradientStop, {\n          offset: \"90%\",\n          stopOpacity: 0.7,\n          key: \"stop\"\n        })]\n      }),\n      rangeLines: React__default.createElement(RangeLines, {\n        position: \"top\",\n        strokeWidth: 3\n      })\n    })\n  });\n\n  class MarimekkoBarSeries extends React.Component {\n    render() {\n      const _a = this.props,\n            rest = __rest(_a, [\"type\"]);\n\n      return React__default.createElement(BarSeries, Object.assign({\n        type: \"marimekko\"\n      }, rest));\n    }\n\n  }\n\n  MarimekkoBarSeries.defaultProps = Object.assign(Object.assign({}, BarSeries.defaultProps), {\n    type: 'marimekko',\n    padding: 10,\n    tooltip: React__default.createElement(TooltipArea, {\n      tooltip: React__default.createElement(ChartTooltip, {\n        followCursor: true,\n        modifiers: {\n          offset: '5px, 5px'\n        },\n        content: (point, color) => {\n          const data = Object.assign(Object.assign({}, point), {\n            data: point.data.map(d => Object.assign(Object.assign({}, d), {\n              value: `${formatValue(d.value)} ∙ ${formatValue(Math.floor((d.y1 - d.y0) * 100))}%`\n            }))\n          });\n          return React__default.createElement(TooltipTemplate, {\n            value: data,\n            color: color\n          });\n        }\n      })\n    }),\n    bar: React__default.createElement(Bar, {\n      rounded: false,\n      padding: 10,\n      gradient: React__default.createElement(Gradient, {\n        stops: [React__default.createElement(GradientStop, {\n          offset: \"5%\",\n          stopOpacity: 0.1,\n          key: \"start\"\n        }), React__default.createElement(GradientStop, {\n          offset: \"90%\",\n          stopOpacity: 0.7,\n          key: \"stop\"\n        })]\n      }),\n      rangeLines: React__default.createElement(RangeLines, {\n        position: \"top\",\n        strokeWidth: 3\n      })\n    })\n  });\n\n  class BarLabel extends React.PureComponent {\n    getIsVertical() {\n      return this.props.layout === 'vertical';\n    }\n\n    getEnter() {\n      const {\n        x,\n        y,\n        height,\n        position,\n        width,\n        data,\n        padding\n      } = this.props;\n      const isVertical = this.getIsVertical();\n      let newY = y;\n      let newX = x; // If its diverging and the value is negative, we\n      // need to reverse the type...\n\n      const isTop = position === 'top';\n      const direction = isVertical ? data.y < 0 && isTop ? 'bottom' : position : data.x0 < 0 && isTop ? 'bottom' : position;\n\n      if (isVertical) {\n        if (direction === 'top') {\n          newY = y - padding;\n        } else if (direction === 'center') {\n          newY = y + height / 2;\n        } else if (direction === 'bottom') {\n          newY = y + height - padding;\n        }\n\n        newX = newX + width / 2;\n      } else {\n        if (direction === 'top') {\n          newX = x + width + padding;\n        } else if (direction === 'center') {\n          newX = x + width / 2;\n        } else if (direction === 'bottom') {\n          newX = x + padding;\n        }\n\n        newY = newY + height / 2;\n      }\n\n      return {\n        translateX: newX,\n        translateY: newY,\n        opacity: 1\n      };\n    }\n\n    getExit() {\n      const {\n        x,\n        scale,\n        height,\n        width,\n        y,\n        position,\n        type,\n        padding\n      } = this.props;\n      const isVertical = this.getIsVertical();\n      let newY = y;\n      let newX = x;\n\n      if (isVertical) {\n        const maxY = Math.max(...scale.range());\n\n        if (position === 'top') {\n          newY = maxY;\n        } else {\n          newY = maxY + height + padding;\n        }\n\n        newX = newX + width / 2;\n      } else {\n        const minX = Math.min(...scale.range());\n\n        if (position === 'top') {\n          newX = minX;\n        } else {\n          newX = minX + width + padding;\n        }\n\n        newY = newY + height / 2;\n      }\n\n      if (type === 'stackedDiverging') {\n        if (isVertical) {\n          newY = newY / 2;\n        } else {\n          newX = newX / 2;\n        }\n      }\n\n      return {\n        translateY: newY,\n        translateX: newX,\n        opacity: 0\n      };\n    }\n\n    getDelay() {\n      const {\n        animated,\n        index,\n        barCount,\n        layout\n      } = this.props;\n      let delay = 0;\n\n      if (animated) {\n        if (layout === 'vertical') {\n          return index / barCount * 0.5;\n        } else {\n          return (barCount - index) / barCount * 0.5;\n        }\n      }\n\n      return delay;\n    }\n\n    render() {\n      const {\n        fontSize,\n        fontFamily,\n        fill,\n        className,\n        text\n      } = this.props;\n      const enterProps = this.getEnter();\n      const exitProps = this.getExit();\n      const delay = this.getDelay();\n      const textAnchor = this.getIsVertical() ? 'middle' : 'start';\n      return React__default.createElement(framerMotion.motion.g, {\n        initial: exitProps,\n        animate: enterProps,\n        exit: exitProps,\n        transition: Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n          delay\n        }),\n        fontSize: fontSize,\n        fontFamily: fontFamily\n      }, React__default.createElement(\"text\", {\n        fill: fill,\n        className: className,\n        textAnchor: textAnchor\n      }, text));\n    }\n\n  }\n\n  BarLabel.defaultProps = {\n    position: 'top',\n    layout: 'vertical',\n    fontSize: 13,\n    padding: 5,\n    fontFamily: 'sans-serif',\n    fill: '#000'\n  };\n\n  class HistogramBarSeries extends React.Component {\n    render() {\n      const _a = this.props,\n            rest = __rest(_a, [\"type\"]);\n\n      return React__default.createElement(BarSeries, Object.assign({}, rest));\n    }\n\n  }\n\n  HistogramBarSeries.defaultProps = Object.assign(Object.assign({}, BarSeries.defaultProps), {\n    colorScheme: schemes.cybertron[0],\n    tooltip: React__default.createElement(TooltipArea, {\n      tooltip: React__default.createElement(ChartTooltip, {\n        followCursor: true,\n        modifiers: {\n          offset: '5px, 5px'\n        },\n        content: (point, color) => {\n          const data = Object.assign(Object.assign({}, point), {\n            x: `${formatValue(point.x0)} - ${formatValue(point.x1)}`,\n            value: point.y\n          });\n          return React__default.createElement(TooltipTemplate, {\n            value: data,\n            color: color\n          });\n        }\n      })\n    })\n  });\n\n  const GuideBar = _a => {\n    var {\n      active,\n      fill = '#eee',\n      opacity = 0.15\n    } = _a,\n        rest = __rest(_a, [\"active\", \"fill\", \"opacity\"]);\n\n    const {\n      x,\n      y\n    } = rest,\n          other = __rest(rest, [\"x\", \"y\"]);\n\n    return React__default.createElement(framerMotion.motion.rect, Object.assign({}, other, {\n      fill: fill,\n      pointerEvents: \"none\",\n      initial: \"hidden\",\n      animate: active ? 'visible' : 'hidden',\n      variants: {\n        hidden: {\n          opacity: 0,\n          attrX: x,\n          attrY: y\n        },\n        visible: {\n          opacity,\n          attrX: x,\n          attrY: y\n        }\n      }\n    }));\n  };\n\n  var css$u = \".BarChart-module_barChart__1TypA {\\n  overflow: visible; }\\n  .BarChart-module_barChart__1TypA.BarChart-module_stackedNormalized__2uegt .bar, .BarChart-module_barChart__1TypA.BarChart-module_stacked__3ZLYq .bar, .BarChart-module_barChart__1TypA.BarChart-module_marimekko__-hOhA .bar {\\n    stroke: var(--color-background);\\n    stroke-width: 0.2; }\\n\";\n  var css$v = {\n    \"barChart\": \"BarChart-module_barChart__1TypA\",\n    \"stackedNormalized\": \"BarChart-module_stackedNormalized__2uegt\",\n    \"stacked\": \"BarChart-module_stacked__3ZLYq\",\n    \"marimekko\": \"BarChart-module_marimekko__-hOhA\"\n  };\n  styleInject(css$u);\n\n  class BarChart extends React.Component {\n    getScalesAndData(chartHeight, chartWidth) {\n      const {\n        yAxis,\n        xAxis,\n        series\n      } = this.props;\n      const {\n        type,\n        layout\n      } = series.props;\n      const isVertical = this.getIsVertical();\n      const isMarimekko = type === 'marimekko';\n      const isGrouped = type === 'grouped';\n      const isStacked = type === 'stacked' || type === 'stackedNormalized' || type === 'stackedDiverging';\n      const isMultiSeries = isGrouped || isStacked;\n      let data;\n\n      if (isStacked) {\n        let distroType = 'default';\n\n        if (type === 'stackedNormalized') {\n          distroType = 'expand';\n        } else if (type === 'stackedDiverging') {\n          distroType = 'diverging';\n        }\n\n        data = buildBarStackData(this.props.data, distroType, layout);\n      } else if (type === 'waterfall') {\n        data = buildWaterfall(this.props.data, layout, this.props.series.props.binSize);\n      } else if (isMarimekko) {\n        data = buildMarimekkoData(this.props.data);\n      } else if (isGrouped) {\n        data = buildNestedChartData(this.props.data, false, layout);\n      } else {\n        data = buildShallowChartData(this.props.data, layout, this.props.series.props.binSize);\n      }\n\n      let yScale;\n      let xScale;\n      let xScale1;\n\n      if (isVertical) {\n        if (isGrouped) {\n          const {\n            keyScale,\n            groupScale\n          } = this.getMultiGroupScales(data, chartHeight, chartWidth);\n          xScale = groupScale;\n          xScale1 = keyScale;\n        } else if (isMarimekko) {\n          const {\n            keyScale,\n            groupScale\n          } = this.getMarimekkoGroupScales(data, xAxis, chartWidth);\n          xScale = groupScale;\n          xScale1 = keyScale;\n        } else {\n          xScale = this.getKeyScale(data, xAxis, isMultiSeries, chartWidth);\n        }\n\n        yScale = this.getValueScale(data, yAxis, isMultiSeries, chartHeight);\n      } else {\n        if (isGrouped) {\n          const {\n            keyScale,\n            groupScale\n          } = this.getMultiGroupScales(data, chartHeight, chartWidth);\n          yScale = groupScale;\n          xScale1 = keyScale;\n          xScale = this.getKeyScale(data, xAxis, isMultiSeries, chartWidth);\n        } else if (isMarimekko) {\n          throw new Error('Marimekko is currently not supported for horizontal layouts');\n        } else {\n          xScale = this.getKeyScale(data, xAxis, isMultiSeries, chartWidth);\n          yScale = this.getValueScale(data, yAxis, isMultiSeries, chartHeight);\n        }\n      }\n\n      return {\n        xScale,\n        xScale1,\n        yScale,\n        data\n      };\n    }\n\n    getKeyAxis() {\n      const {\n        yAxis,\n        xAxis\n      } = this.props;\n      const isVertical = this.getIsVertical();\n      return isVertical ? xAxis : yAxis;\n    }\n\n    getIsDiverging() {\n      return this.props.series.props.type === 'stackedDiverging';\n    }\n\n    getIsVertical() {\n      return this.props.series.props.layout === 'vertical';\n    }\n\n    getMarimekkoGroupScales(data, axis, width) {\n      const {\n        series\n      } = this.props;\n      const keyScale = getMarimekkoScale(width, axis.props.roundDomains);\n      const groupScale = getMarimekkoGroupScale({\n        width,\n        padding: series.props.padding,\n        data,\n        valueScale: keyScale\n      });\n      return {\n        keyScale,\n        groupScale\n      };\n    }\n\n    getMultiGroupScales(data, height, width) {\n      const {\n        series\n      } = this.props;\n      const isVertical = this.getIsVertical();\n      const {\n        groupPadding,\n        layout\n      } = series.props;\n      const groupScale = getGroupScale({\n        dimension: isVertical ? width : height,\n        direction: layout,\n        padding: groupPadding,\n        data\n      });\n      const keyScale = getInnerScale({\n        groupScale: groupScale,\n        padding: series.props.padding,\n        data,\n        prop: isVertical ? 'x' : 'y'\n      });\n      return {\n        groupScale,\n        keyScale\n      };\n    }\n\n    getKeyScale(data, axis, isMultiSeries, width) {\n      const {\n        series\n      } = this.props;\n      return getXScale({\n        width,\n        type: axis.props.type,\n        roundDomains: axis.props.roundDomains,\n        data,\n        padding: series.props.padding,\n        domain: axis.props.domain,\n        isMultiSeries,\n        isDiverging: this.getIsDiverging()\n      });\n    }\n\n    getValueScale(data, axis, isMultiSeries, height) {\n      const {\n        series\n      } = this.props;\n      return getYScale({\n        roundDomains: axis.props.roundDomains,\n        padding: series.props.padding,\n        type: axis.props.type,\n        height,\n        data,\n        domain: axis.props.domain,\n        isMultiSeries,\n        isDiverging: this.getIsDiverging()\n      });\n    }\n\n    renderChart(containerProps) {\n      const {\n        chartHeight,\n        chartWidth,\n        id,\n        updateAxes\n      } = containerProps;\n      const {\n        series,\n        xAxis,\n        yAxis,\n        brush,\n        gridlines,\n        secondaryAxis\n      } = this.props;\n      const {\n        xScale,\n        xScale1,\n        yScale,\n        data\n      } = this.getScalesAndData(chartHeight, chartWidth);\n      const isVertical = this.getIsVertical();\n      const keyAxis = this.getKeyAxis();\n      const isCategorical = keyAxis.props.type === 'category';\n      return React__default.createElement(React.Fragment, null, containerProps.chartSized && gridlines && React__default.createElement(CloneElement, {\n        element: gridlines,\n        height: chartHeight,\n        width: chartWidth,\n        yScale: yScale,\n        xScale: xScale,\n        yAxis: yAxis.props,\n        xAxis: xAxis.props\n      }), React__default.createElement(CloneElement, {\n        element: xAxis,\n        height: chartHeight,\n        width: chartWidth,\n        scale: xScale,\n        onDimensionsChange: bind(updateAxes, this, isVertical ? 'horizontal' : 'vertical')\n      }), React__default.createElement(CloneElement, {\n        element: yAxis,\n        height: chartHeight,\n        width: chartWidth,\n        scale: yScale,\n        onDimensionsChange: bind(updateAxes, this, isVertical ? 'vertical' : 'horizontal')\n      }), secondaryAxis && secondaryAxis.map((axis, i) => React__default.createElement(CloneElement, {\n        key: i,\n        element: axis,\n        height: chartHeight,\n        width: chartWidth,\n        onDimensionsChange: bind(updateAxes, this, 'horizontal')\n      })), containerProps.chartSized && React__default.createElement(CloneElement, {\n        element: brush,\n        height: chartHeight,\n        width: chartWidth,\n        scale: xScale\n      }, React__default.createElement(CloneElement, {\n        element: series,\n        id: `bar-series-${id}`,\n        data: data,\n        height: chartHeight,\n        width: chartWidth,\n        isCategorical: isCategorical,\n        xScale: xScale,\n        xScale1: xScale1,\n        yScale: yScale\n      })));\n    }\n\n    render() {\n      const {\n        id,\n        width,\n        height,\n        margins,\n        className,\n        series,\n        xAxis,\n        yAxis\n      } = this.props;\n      return React__default.createElement(ChartContainer, {\n        id: id,\n        width: width,\n        height: height,\n        margins: margins,\n        xAxisVisible: isAxisVisible(xAxis.props),\n        yAxisVisible: isAxisVisible(yAxis.props),\n        className: classNames(css$v.barChart, className, css$v[series.props.type])\n      }, props => this.renderChart(props));\n    }\n\n  }\n\n  BarChart.defaultProps = {\n    data: [],\n    xAxis: React__default.createElement(LinearXAxis, {\n      type: \"category\",\n      tickSeries: React__default.createElement(LinearXAxisTickSeries, {\n        tickSize: 20\n      })\n    }),\n    yAxis: React__default.createElement(LinearYAxis, {\n      type: \"value\"\n    }),\n    series: React__default.createElement(BarSeries, null),\n    gridlines: React__default.createElement(GridlineSeries, null),\n    brush: null\n  };\n\n  const MarimekkoChart = _a => {\n    var {\n      series = React__default.createElement(MarimekkoBarSeries, null),\n      xAxis = React__default.createElement(LinearXAxis, {\n        type: \"category\",\n        tickSeries: React__default.createElement(LinearXAxisTickSeries, {\n          tickSize: 15\n        })\n      }),\n      yAxis = React__default.createElement(LinearYAxis, {\n        type: \"value\",\n        tickSeries: React__default.createElement(LinearYAxisTickSeries, {\n          label: React__default.createElement(LinearYAxisTickLabel, {\n            rotation: false,\n            format: data => `${data * 100}%`\n          })\n        })\n      })\n    } = _a,\n        rest = __rest(_a, [\"series\", \"xAxis\", \"yAxis\"]);\n\n    return React__default.createElement(BarChart, Object.assign({}, rest, {\n      series: series,\n      xAxis: xAxis,\n      yAxis: yAxis\n    }));\n  };\n\n  const StackedBarChart = _a => {\n    var {\n      series = React__default.createElement(StackedBarSeries, null)\n    } = _a,\n        rest = __rest(_a, [\"series\"]);\n\n    return React__default.createElement(BarChart, Object.assign({}, rest, {\n      series: series\n    }));\n  };\n\n  const StackedNormalizedBarChart = _a => {\n    var {\n      series = React__default.createElement(StackedNormalizedBarSeries, null),\n      yAxis = React__default.createElement(LinearYAxis, {\n        type: \"value\",\n        tickSeries: React__default.createElement(LinearYAxisTickSeries, {\n          label: React__default.createElement(LinearYAxisTickLabel, {\n            rotation: false,\n            format: data => `${data * 100}%`\n          })\n        })\n      })\n    } = _a,\n        rest = __rest(_a, [\"series\", \"yAxis\"]);\n\n    return React__default.createElement(BarChart, Object.assign({}, rest, {\n      series: series,\n      yAxis: yAxis\n    }));\n  };\n\n  const HistogramBarChart = _a => {\n    var {\n      series = React__default.createElement(HistogramBarSeries, null)\n    } = _a,\n        rest = __rest(_a, [\"series\"]);\n\n    return React__default.createElement(BarChart, Object.assign({}, rest, {\n      series: series\n    }));\n  };\n\n  var css$w = \".HiveNode-module_node__3erj2 {\\n  transition: opacity 100ms ease-in-out;\\n  cursor: pointer; }\\n\\n.HiveNode-module_inactive__3qXzC {\\n  opacity: 0.2; }\\n\";\n  var css$x = {\n    \"node\": \"HiveNode-module_node__3erj2\",\n    \"inactive\": \"HiveNode-module_inactive__3qXzC\"\n  };\n  styleInject(css$w);\n\n  class HiveNode extends React.Component {\n    render() {\n      const {\n        angle,\n        radius,\n        node,\n        color,\n        onClick,\n        onMouseOver,\n        onMouseOut,\n        active,\n        disabled\n      } = this.props; // If the size exists on the node, use it to specify the node size.\n      // Otherwise, calculate a relative size using the node count.\n\n      let size = node.size;\n\n      if (size === undefined) {\n        size = node.count || 0;\n      }\n\n      return React__default.createElement(\"circle\", {\n        className: classNames(css$x.node, {\n          [css$x.inactive]: !active\n        }),\n        transform: `rotate(${getDegrees(angle(node.x))})`,\n        cx: radius(node.y),\n        r: size,\n        style: {\n          cursor: disabled ? 'initial' : 'cursor'\n        },\n        fill: color(node.x),\n        onClick: onClick,\n        onMouseOver: onMouseOver,\n        onMouseOut: onMouseOut\n      });\n    }\n\n  }\n\n  var css$y = \".HiveAxis-module_axis__30gBf {\\n  stroke: #575f67;\\n  stroke-width: 1.5px; }\\n\";\n  var css$z = {\n    \"axis\": \"HiveAxis-module_axis__30gBf\"\n  };\n  styleInject(css$y);\n\n  class HiveAxis extends React.Component {\n    render() {\n      const {\n        radius,\n        index,\n        angle,\n        color\n      } = this.props;\n      const [axisStart, axisEnd] = radius.range();\n      const axisLength = axisEnd - axisStart;\n      return React__default.createElement(React.Fragment, null, React__default.createElement(\"line\", {\n        className: css$z.axis,\n        style: {\n          stroke: color(index)\n        },\n        transform: `rotate(${getDegrees(angle(index))})`,\n        x1: axisStart,\n        x2: axisEnd\n      }), React__default.createElement(\"line\", {\n        className: css$z.axis,\n        style: {\n          stroke: color(index)\n        },\n        transform: `rotate(${getDegrees(angle(index)) + 90})`,\n        x1: -axisLength / 20,\n        x2: axisLength / 20,\n        y1: -axisEnd,\n        y2: -axisEnd\n      }), React__default.createElement(\"line\", {\n        className: css$z.axis,\n        style: {\n          stroke: color(index)\n        },\n        transform: `rotate(${getDegrees(angle(index)) + 90})`,\n        x1: -axisStart / 3,\n        x2: 0,\n        y1: axisStart * -0.8,\n        y2: axisStart * -1\n      }), React__default.createElement(\"line\", {\n        className: css$z.axis,\n        style: {\n          stroke: color(index)\n        },\n        transform: `rotate(${getDegrees(angle(index)) + 90})`,\n        x1: 0,\n        x2: axisStart / 3,\n        y1: -axisStart,\n        y2: axisStart * -0.8\n      }));\n    }\n\n  }\n  /**\r\n   * Hive layout\r\n   * Original: https://github.com/d3/d3-plugins/tree/master/hive\r\n   */\n\n\n  function hiveLayout() {\n    let source = d => d.source;\n\n    let target = d => d.target;\n\n    let angle = d => d.angle;\n\n    let startRadius = d => d.radius;\n\n    let endRadius = startRadius;\n    const arcOffset = -Math.PI / 2;\n\n    const link = (d, i) => {\n      let s = node(source, this, d, i);\n      let t = node(target, this, d, i);\n      let x;\n\n      if (t.a < s.a) {\n        x = t;\n        t = s;\n        s = x;\n      }\n\n      if (t.a - s.a > Math.PI) {\n        s.a += 2 * Math.PI;\n      }\n\n      const a1 = s.a + (t.a - s.a) / 3;\n      const a2 = t.a - (t.a - s.a) / 3;\n      return s.r0 - s.r1 || t.r0 - t.r1 ? 'M' + Math.cos(s.a) * s.r0 + ',' + Math.sin(s.a) * s.r0 + 'L' + Math.cos(s.a) * s.r1 + ',' + Math.sin(s.a) * s.r1 + 'C' + Math.cos(a1) * s.r1 + ',' + Math.sin(a1) * s.r1 + ' ' + Math.cos(a2) * t.r1 + ',' + Math.sin(a2) * t.r1 + ' ' + Math.cos(t.a) * t.r1 + ',' + Math.sin(t.a) * t.r1 + 'L' + Math.cos(t.a) * t.r0 + ',' + Math.sin(t.a) * t.r0 + 'C' + Math.cos(a2) * t.r0 + ',' + Math.sin(a2) * t.r0 + ' ' + Math.cos(a1) * s.r0 + ',' + Math.sin(a1) * s.r0 + ' ' + Math.cos(s.a) * s.r0 + ',' + Math.sin(s.a) * s.r0 : 'M' + Math.cos(s.a) * s.r0 + ',' + Math.sin(s.a) * s.r0 + 'C' + Math.cos(a1) * s.r1 + ',' + Math.sin(a1) * s.r1 + ' ' + Math.cos(a2) * t.r1 + ',' + Math.sin(a2) * t.r1 + ' ' + Math.cos(t.a) * t.r1 + ',' + Math.sin(t.a) * t.r1;\n    };\n\n    const node = (method, thiz, d, i) => {\n      const n = method.call(thiz, d, i);\n      const a = +(typeof angle === 'function' ? angle.call(thiz, n, i) : angle) + arcOffset;\n      const r0 = +(typeof startRadius === 'function' ? startRadius.call(thiz, n, i) : startRadius);\n      const r1 = startRadius === endRadius ? r0 : +(typeof endRadius === 'function' ? endRadius.call(thiz, n, i) : endRadius);\n      return {\n        r0,\n        r1,\n        a\n      };\n    };\n\n    link.source = s => {\n      if (!s) {\n        return source;\n      }\n\n      source = s;\n      return link;\n    };\n\n    link.target = t => {\n      if (!t) {\n        return target;\n      }\n\n      target = t;\n      return link;\n    };\n\n    link.angle = a => {\n      if (!a) {\n        return angle;\n      }\n\n      angle = a;\n      return link;\n    };\n\n    link.radius = r => {\n      if (!r) {\n        return startRadius;\n      }\n\n      startRadius = endRadius = r;\n      return link;\n    };\n\n    link.startRadius = r => {\n      if (!r) {\n        return startRadius;\n      }\n\n      startRadius = r;\n      return link;\n    };\n\n    link.endRadius = r => {\n      if (!r) {\n        return endRadius;\n      }\n\n      endRadius = r;\n      return link;\n    };\n\n    return link;\n  }\n\n  var css$A = \".HiveLink-module_link__3c55e {\\n  fill: none;\\n  stroke-width: 1.5px;\\n  stroke-opacity: 0.5;\\n  transition: opacity 100ms ease-in-out; }\\n\\n.HiveLink-module_inactive__3ZmVV {\\n  opacity: 0.7; }\\n\";\n  var css$B = {\n    \"link\": \"HiveLink-module_link__3c55e\",\n    \"inactive\": \"HiveLink-module_inactive__3ZmVV\"\n  };\n  styleInject(css$A);\n\n  class HiveLink extends React.Component {\n    prepareData() {\n      const {\n        angle,\n        radius\n      } = this.props;\n      const hive = hiveLayout();\n      return {\n        angle: hive.angle(d => angle(d.x)),\n        radius: hive.radius(d => radius(d.y))\n      };\n    }\n\n    render() {\n      const {\n        link,\n        color,\n        active,\n        onMouseOver,\n        onMouseOut\n      } = this.props;\n      const {\n        angle,\n        radius\n      } = this.prepareData();\n      const stroke = typeof color === 'string' ? color : color(link.source.x);\n      return React__default.createElement(\"path\", {\n        className: classNames(css$B.link, {\n          [css$B.inactive]: !active\n        }),\n        d: `${angle(link)} ${radius(link)}`,\n        stroke: stroke,\n        onMouseOver: onMouseOver,\n        onMouseOut: onMouseOut\n      });\n    }\n\n  }\n\n  var css$C = \".HiveLabel-module_label__1tbC6 {\\n  fill: rgba(255, 255, 255, 0.5);\\n  font-size: 12px;\\n  text-transform: uppercase; }\\n\";\n  var css$D = {\n    \"label\": \"HiveLabel-module_label__1tbC6\"\n  };\n  styleInject(css$C);\n\n  const degrees = radians => {\n    const res = radians / Math.PI * 180;\n    return res > 90 ? res + 180 : res;\n  };\n\n  const translate = (d, outerRadius, padding) => d > 90 ? outerRadius + 8 + padding : -(outerRadius + padding);\n\n  class HiveLabel extends React.Component {\n    render() {\n      const {\n        index,\n        text,\n        angle,\n        outerRadius,\n        label\n      } = this.props;\n      const transform = degrees(angle(index));\n      return React__default.createElement(\"text\", {\n        dy: translate(transform, outerRadius, label.padding),\n        className: css$D.label,\n        strokeWidth: \"0.01\",\n        textAnchor: \"middle\",\n        transform: `rotate(${transform})`\n      }, text);\n    }\n\n  }\n\n  var css$E = \".HiveTooltip-module_label__1gfVp {\\n  font-size: 16px;\\n  margin-bottom: 3px; }\\n\\n.HiveTooltip-module_value__36Qwn {\\n  font-size: 13px;\\n  color: rgba(255, 255, 255, 0.7); }\\n\";\n  var css$F = {\n    \"label\": \"HiveTooltip-module_label__1gfVp\",\n    \"value\": \"HiveTooltip-module_value__36Qwn\"\n  };\n  styleInject(css$E);\n\n  class HiveTooltip extends React.Component {\n    render() {\n      const {\n        axis,\n        nodes,\n        node: {\n          x,\n          value\n        }\n      } = this.props;\n      const {\n        label\n      } = axis[x];\n      const count = nodes.filter(n => n.value === value).length;\n      return React__default.createElement(\"div\", null, React__default.createElement(\"div\", {\n        className: css$F.label\n      }, label, \" - \", formatValue(value)), React__default.createElement(\"div\", {\n        className: css$F.value\n      }, formatValue(count), \" Total\"));\n    }\n\n  }\n\n  class HivePlot extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {};\n    }\n\n    onNodeMouseOver(node, event) {\n      const {\n        links,\n        nodes,\n        onNodeMouseOver,\n        disabled\n      } = this.props;\n\n      if (!disabled) {\n        const activeNodeIndex = nodes.indexOf(node);\n        const activeNodes = {};\n\n        for (const link of links) {\n          const {\n            source,\n            target\n          } = link;\n\n          if (source.value === node.value || target.value === node.value) {\n            const next = target.value === node.value ? source : target;\n            const idx = nodes.indexOf(next);\n            activeNodes[`node-${idx}`] = true;\n          }\n        }\n\n        this.setState({\n          tooltipReference: event.target,\n          nodeTooltipData: node,\n          active: Object.assign(Object.assign({\n            [`node-${activeNodeIndex}`]: true\n          }, activeNodes), links.reduce((accumulator, link, i) => {\n            if (link.source.value === node.value || link.target.value === node.value) {\n              accumulator[`link-${i}`] = true;\n            }\n\n            return accumulator;\n          }, {}))\n        });\n      }\n\n      onNodeMouseOver({\n        nativeEvent: event,\n        node,\n        links: this.getLinksForNode(node)\n      });\n    }\n\n    onLinkMouseOver(link, event) {\n      const {\n        onLinkMouseOver,\n        disabled\n      } = this.props;\n\n      if (!disabled) {\n        this.setState({\n          tooltipReference: event.target,\n          linkTooltipData: link\n        });\n        this.activateLink(link);\n      }\n\n      onLinkMouseOver({\n        nativeEvent: event,\n        link\n      });\n    }\n\n    activateLink(link) {\n      const {\n        nodes,\n        links\n      } = this.props;\n      const activeLinkIndex = links.indexOf(link);\n      const activeLinksMap = {\n        [`link-${activeLinkIndex}`]: true\n      };\n      const activeLinks = [link, ...this.activateAdjacentLinks(links, link.target, activeLinksMap)];\n      this.setState({\n        active: Object.assign(Object.assign({}, activeLinksMap), nodes.reduce((accumulator, node, i) => {\n          for (const activeLink of activeLinks) {\n            const {\n              source,\n              target\n            } = activeLink;\n\n            if (node === source || node === target) {\n              accumulator[`node-${i}`] = true;\n            }\n          }\n\n          return accumulator;\n        }, {}))\n      });\n    }\n\n    activateAdjacentLinks(links, target, accumulator) {\n      const activeLinks = [];\n      links.forEach((childLink, index) => {\n        if (target === childLink.source) {\n          if (!accumulator[`link-${index}`]) {\n            accumulator[`link-${index}`] = true;\n            activeLinks.push(childLink, ...this.activateAdjacentLinks(links, childLink.target, accumulator));\n          }\n        }\n      });\n      return activeLinks;\n    }\n\n    onNodeMouseOut(node, event) {\n      const {\n        onNodeMouseOut\n      } = this.props;\n      this.resetActive();\n      onNodeMouseOut({\n        nativeEvent: event,\n        node,\n        links: this.getLinksForNode(node)\n      });\n    }\n\n    onLinkMouseOut(link, event) {\n      const {\n        onLinkMouseOut\n      } = this.props;\n      this.resetActive();\n      onLinkMouseOut({\n        nativeEvent: event,\n        link\n      });\n    }\n\n    onNodeClick(node, event) {\n      const {\n        disabled\n      } = this.props;\n\n      if (!disabled) {\n        const {\n          onNodeClick\n        } = this.props;\n        onNodeClick({\n          nativeEvent: event,\n          node,\n          links: this.getLinksForNode(node)\n        });\n      }\n    }\n\n    getLinksForNode(node) {\n      const {\n        links\n      } = this.props;\n      return links.filter(link => link.source.value === node.value || link.target.value === node.value);\n    }\n\n    resetActive() {\n      this.setState({\n        active: undefined,\n        linkTooltipData: undefined,\n        nodeTooltipData: undefined,\n        tooltipReference: undefined\n      });\n    }\n\n    prepareData({\n      dimension,\n      innerRadius,\n      colorScheme,\n      axis,\n      label\n    }) {\n      let outerRadius = dimension / 2;\n\n      if (label.show) {\n        outerRadius = outerRadius - (10 + label.padding);\n      }\n\n      return {\n        angle: d3Scale.scalePoint().domain(d3Array.range(axis.length + 1)).range([0, 2 * Math.PI]),\n        radius: d3Scale.scaleLinear().range([innerRadius, outerRadius]),\n        axisColor: d3Scale.scaleOrdinal(colorScheme.axis).domain(d3Array.range(20)),\n        domainColor: d3Scale.scaleOrdinal(colorScheme.domain).domain(d3Array.range(20)),\n        outerRadius\n      };\n    }\n\n    renderAxis({\n      angle,\n      radius,\n      axisColor,\n      outerRadius\n    }) {\n      const {\n        axis,\n        label\n      } = this.props;\n      return React__default.createElement(React.Fragment, null, axis.map((a, i) => React__default.createElement(\"g\", {\n        key: `axis-${a.attribute}`\n      }, React__default.createElement(HiveAxis, {\n        angle: angle,\n        index: i,\n        color: axisColor,\n        radius: radius\n      }), label.show && React__default.createElement(HiveLabel, {\n        index: i,\n        text: a.label,\n        label: label,\n        outerRadius: outerRadius,\n        angle: angle\n      }))));\n    }\n\n    isActive(nodeOrLink, index, type) {\n      const {\n        activeIds\n      } = this.props;\n      const {\n        active\n      } = this.state; // If no there is nothing active, then everything is active.\n\n      if (!active && !activeIds.length) {\n        return true;\n      } // If this node is active because it is being hovered\n\n\n      if (active && active[`${type}-${index}`]) {\n        return true;\n      } // If the ID matches one of the active IDs passed in the props\n\n\n      if (!!activeIds.length && !!nodeOrLink.id && activeIds.includes(nodeOrLink.id)) {\n        return true;\n      }\n\n      return false;\n    }\n\n    renderLinks({\n      angle,\n      radius,\n      domainColor\n    }) {\n      const {\n        links\n      } = this.props;\n      return React__default.createElement(React.Fragment, null, links.map((link, i) => {\n        return React__default.createElement(HiveLink, {\n          key: `${link.value}-${i}`,\n          color: link.color || domainColor,\n          active: this.isActive(link, i, 'link'),\n          angle: angle,\n          radius: radius,\n          link: link,\n          onMouseOver: bind(this.onLinkMouseOver, this, link),\n          onMouseOut: bind(this.onLinkMouseOut, this, link)\n        });\n      }));\n    }\n\n    renderNodes({\n      angle,\n      radius,\n      domainColor\n    }) {\n      const {\n        nodes,\n        disabled\n      } = this.props;\n      return React__default.createElement(React.Fragment, null, nodes.map((node, i) => React__default.createElement(HiveNode, {\n        node: node,\n        key: `${node.value}-${i}`,\n        active: this.isActive(node, i, 'node'),\n        color: domainColor,\n        radius: radius,\n        angle: angle,\n        disabled: disabled,\n        onMouseOver: bind(this.onNodeMouseOver, this, node),\n        onMouseOut: bind(this.onNodeMouseOut, this, node),\n        onClick: bind(this.onNodeClick, this, node)\n      })));\n    }\n\n    renderTooltip() {\n      const {\n        tooltip,\n        disabled,\n        axis,\n        nodes\n      } = this.props;\n      const {\n        active,\n        tooltipReference,\n        linkTooltipData: link,\n        nodeTooltipData: node\n      } = this.state;\n      const {\n        formatter,\n        placement,\n        show\n      } = tooltip;\n      return React__default.createElement(React.Fragment, null, !disabled && show && React__default.createElement(realayers.Tooltip, {\n        visible: !!active,\n        reference: tooltipReference,\n        placement: placement,\n        content: () => formatter(axis, nodes, link, node) || (node ? React__default.createElement(HiveTooltip, {\n          node: node,\n          nodes: nodes,\n          axis: axis\n        }) : null)\n      }));\n    }\n\n    renderChart({\n      height,\n      width\n    }) {\n      const {\n        innerRadius,\n        axis,\n        colorScheme,\n        label,\n        className\n      } = this.props;\n      const data = this.prepareData({\n        dimension: Math.min(height, width),\n        innerRadius,\n        colorScheme,\n        axis,\n        label\n      });\n      return React__default.createElement(React.Fragment, null, React__default.createElement(\"svg\", {\n        width: width,\n        height: height,\n        className: classNames(className)\n      }, React__default.createElement(\"g\", {\n        transform: `translate(${width / 2}, ${height / 2 + innerRadius})`\n      }, this.renderAxis(data), this.renderLinks(data), this.renderNodes(data))), this.renderTooltip());\n    }\n\n    render() {\n      return React__default.createElement(ChartContainer, {\n        height: this.props.height,\n        width: this.props.width\n      }, this.renderChart.bind(this));\n    }\n\n  }\n\n  HivePlot.defaultProps = {\n    innerRadius: 20,\n    disabled: false,\n    axis: [],\n    nodes: [],\n    links: [],\n    label: {\n      show: true,\n      padding: 10\n    },\n    activeIds: [],\n    onNodeClick: () => undefined,\n    onNodeMouseOver: () => undefined,\n    onNodeMouseOut: () => undefined,\n    onLinkMouseOver: () => undefined,\n    onLinkMouseOut: () => undefined,\n    tooltip: {\n      show: true,\n      placement: 'top',\n      formatter: attr => attr.value\n    },\n    colorScheme: {\n      axis: ['#b1b2b6'],\n      domain: ['#b1b2b6']\n    }\n  };\n\n  class LineSeries extends React.Component {\n    render() {\n      return React__default.createElement(AreaSeries, Object.assign({}, this.props));\n    }\n\n  }\n\n  LineSeries.defaultProps = Object.assign(Object.assign({}, AreaSeries.defaultProps), {\n    area: null,\n    line: React__default.createElement(Line, {\n      strokeWidth: 3\n    })\n  });\n\n  class LineChart extends React.Component {\n    render() {\n      return React__default.createElement(AreaChart, Object.assign({}, this.props));\n    }\n\n  }\n\n  LineChart.defaultProps = Object.assign(Object.assign({}, AreaChart.defaultProps), {\n    series: React__default.createElement(LineSeries, null)\n  });\n\n  const Map$1 = ({\n    id,\n    width,\n    height,\n    margins,\n    className,\n    markers,\n    data,\n    fill = 'rgba(255, 255, 255, 0.3)'\n  }) => {\n    const getProjection = React.useCallback(({\n      chartWidth,\n      chartHeight\n    }) => d3Geo.geoMercator().fitSize([chartWidth, chartHeight], data).center([0, 35]), [data]);\n    const renderMarker = React.useCallback((marker, index, projection) => {\n      const position = projection(marker.props.coordinates);\n\n      if (!position) {\n        console.warn(`Position for ${marker.props.coordinates.toString()} not found.`);\n        return null;\n      }\n\n      return React__default.createElement(CloneElement, {\n        element: marker,\n        cx: position[0],\n        cy: position[1],\n        index: index\n      });\n    }, []);\n    const renderCountry = React.useCallback((point, index, path) => {\n      // Exclude ATA\n      if (point.id === '010') {\n        return null;\n      }\n\n      return React__default.createElement(\"path\", {\n        key: `path-${index}`,\n        d: path(point),\n        fill: fill\n      });\n    }, [fill]);\n    const renderChart = React.useCallback(containerProps => {\n      if (!data) {\n        return null;\n      }\n\n      const projection = getProjection(containerProps);\n      const path = d3Geo.geoPath().projection(projection);\n      return React__default.createElement(framerMotion.motion.g, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        }\n      }, data.features.map((point, index) => renderCountry(point, index, path)), markers && markers.map((marker, index) => React__default.createElement(React.Fragment, {\n        key: `marker-${index}`\n      }, renderMarker(marker, index, projection))));\n    }, [data, markers]);\n    return React__default.createElement(ChartContainer, {\n      id: id,\n      width: width,\n      height: height,\n      margins: margins,\n      xAxisVisible: false,\n      yAxisVisible: false,\n      className: className\n    }, props => renderChart(props));\n  };\n\n  var css$G = \".MapMarker-module_marker__1OAhA {\\n  fill: var(--color-primary);\\n  cursor: pointer; }\\n\";\n  var css$H = {\n    \"marker\": \"MapMarker-module_marker__1OAhA\"\n  };\n  styleInject(css$G); // Set padding modifier for the tooltips\n\n  const modifiers = {\n    offset: {\n      offset: '0, 3px'\n    }\n  };\n\n  const MapMarker = ({\n    size = 3,\n    index,\n    tooltip,\n    cx,\n    cy,\n    onClick = () => undefined\n  }) => {\n    const ref = React.useRef(null);\n    const [active, setActive] = React.useState(false);\n    return React__default.createElement(React.Fragment, null, React__default.createElement(framerMotion.motion.circle, {\n      initial: {\n        opacity: 0,\n        scale: 0.02\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      transition: {\n        delay: index * 0.3\n      },\n      ref: ref,\n      className: css$H.marker,\n      cx: cx,\n      cy: cy,\n      r: size,\n      onMouseEnter: () => setActive(true),\n      onMouseLeave: () => setActive(false),\n      onClick: onClick\n    }), tooltip && React__default.createElement(realayers.Tooltip, {\n      visible: active,\n      reference: ref,\n      modifiers: modifiers,\n      content: tooltip\n    }));\n  };\n\n  const PieArc = ({\n    color,\n    data,\n    innerArc,\n    cursor = 'initial',\n    animated = true,\n    disabled = false,\n    onClick = () => undefined,\n    onMouseEnter = () => undefined,\n    onMouseLeave = () => undefined,\n    tooltip = React__default.createElement(ChartTooltip, null)\n  }) => {\n    const arcRef = React.useRef(null);\n    const prevEnter = React.useRef(null);\n    const [active, setActive] = React.useState(false);\n    const fill = React.useMemo(() => active ? chroma(color).brighten(0.5) : color, [color, active]);\n    const exit = React.useMemo(() => {\n      const startAngle = data.startAngle;\n      const endAngle = animated ? startAngle : data.endAngle;\n      return Object.assign(Object.assign({}, data), {\n        startAngle,\n        endAngle\n      });\n    }, [data, animated]);\n    const transition = React.useMemo(() => animated ? Object.assign({}, DEFAULT_TRANSITION) : {\n      delay: 0\n    }, [animated]); // Cache the previous for transition use later\n\n    const previousEnter = prevEnter.current ? Object.assign({}, prevEnter.current) : undefined;\n    prevEnter.current = Object.assign({}, data);\n    const d = framerMotion.useMotionValue('');\n    const prevPath = framerMotion.useMotionValue(exit);\n    const spring = framerMotion.useSpring(prevPath, Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n      from: 0,\n      to: 1\n    }));\n    React.useEffect(() => {\n      const from = previousEnter || prevPath.get();\n      const interpolator = d3Interpolate.interpolate(from, data);\n      const unsub = spring.onChange(v => d.set(innerArc(interpolator(v))));\n      prevPath.set(data);\n      return unsub;\n    }, [innerArc, data]);\n    return React__default.createElement(\"g\", {\n      ref: arcRef\n    }, React__default.createElement(framerMotion.motion.path, {\n      transition: transition,\n      d: d,\n      style: {\n        cursor\n      },\n      fill: fill,\n      onMouseEnter: event => {\n        if (!disabled) {\n          setActive(true);\n          onMouseEnter({\n            value: data.data,\n            nativeEvent: event\n          });\n        }\n      },\n      onMouseLeave: event => {\n        if (!disabled) {\n          setActive(false);\n          onMouseLeave({\n            value: data.data,\n            nativeEvent: event\n          });\n        }\n      },\n      onClick: event => {\n        if (!disabled) {\n          onClick({\n            value: data.data,\n            nativeEvent: event\n          });\n        }\n      }\n    }), tooltip && !tooltip.props.disabled && React__default.createElement(CloneElement, {\n      element: tooltip,\n      visible: !!active,\n      reference: arcRef,\n      value: {\n        y: data.data.data,\n        x: data.data.key\n      }\n    }));\n  };\n\n  const getTextAnchor = ({\n    startAngle,\n    endAngle\n  }) => startAngle + (endAngle - startAngle) / 2 < Math.PI ? 'start' : 'end';\n\n  class PieArcLabel extends React.PureComponent {\n    render() {\n      const {\n        centroid,\n        data,\n        lineStroke,\n        padding,\n        fontSize,\n        fontFill,\n        format,\n        fontFamily,\n        position\n      } = this.props;\n      const text = format ? format(data.data) : formatValue(data.data.key);\n      const textAnchor = getTextAnchor(data);\n      const [posX, posY] = position;\n      const innerLinePos = centroid(data);\n      let scale = posY / innerLinePos[1];\n\n      if (posY === 0 || innerLinePos[1] === 0) {\n        scale = 1;\n      }\n\n      const outerPos = [scale * innerLinePos[0], scale * innerLinePos[1]];\n      return React__default.createElement(framerMotion.motion.g, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        transition: {\n          duration: 0.1\n        }\n      }, React__default.createElement(\"title\", null, text), React__default.createElement(\"text\", {\n        dy: padding,\n        fill: fontFill,\n        fontSize: fontSize,\n        fontFamily: fontFamily,\n        textAnchor: textAnchor,\n        style: {\n          shapeRendering: 'crispEdges',\n          transform: `translate3d(${posX}px,${posY}px, 0)`\n        }\n      }, text), React__default.createElement(\"polyline\", {\n        fill: \"none\",\n        stroke: lineStroke,\n        points: `${innerLinePos},${outerPos},${posX} ${posY}`\n      }));\n    }\n\n  }\n\n  PieArcLabel.defaultProps = {\n    format: undefined,\n    lineStroke: 'rgba(127,127,127,0.5)',\n    fontFill: '#8F979F',\n    fontSize: 11,\n    fontFamily: 'sans-serif',\n    padding: '.35em'\n  };\n  const factor = 1.2;\n\n  const midAngle = d => d.startAngle + (d.endAngle - d.startAngle) / 2;\n\n  const labelVisible = arc => arc.endAngle - arc.startAngle > Math.PI / 30;\n\n  class PieArcSeries extends React.Component {\n    calculateRadius() {\n      const {\n        doughnut,\n        arcWidth,\n        label,\n        width,\n        height\n      } = this.props;\n      const outerRadius = Math.min(width, height) / (label ? 3 : 2);\n      const innerRadius = doughnut ? outerRadius * (1 - arcWidth) : 0;\n      return {\n        outerRadius,\n        innerRadius\n      };\n    }\n\n    shouldDisplayLabel(arcData) {\n      const {\n        displayAllLabels\n      } = this.props;\n      return displayAllLabels || labelVisible(arcData);\n    }\n\n    calculateLabelPositions(outerArc, outerRadius) {\n      const {\n        label,\n        data\n      } = this.props;\n      const positions = data.map(d => {\n        const pos = outerArc.centroid(d);\n        pos[0] = factor * outerRadius * (midAngle(d) < Math.PI ? 1 : -1);\n        return pos;\n      });\n\n      if (label) {\n        const minDistance = 15;\n\n        for (let i = 0; i < data.length - 1; i++) {\n          const a = data[i];\n\n          if (!this.shouldDisplayLabel(a)) {\n            continue;\n          }\n\n          const [aPosX, aPosY] = positions[i];\n\n          for (let j = i + 1; j < data.length; j++) {\n            const b = data[j];\n\n            if (!this.shouldDisplayLabel(b)) {\n              continue;\n            } // if they're on the same side\n\n\n            const [bPosX, bPosY] = positions[j];\n\n            if (bPosX * aPosX > 0) {\n              // if they're overlapping\n              const o = minDistance - Math.abs(bPosY - aPosY);\n\n              if (o > 0) {\n                // push the second up or down\n                positions[j][1] += Math.sign(bPosX) * o;\n              }\n            }\n          }\n        }\n      }\n\n      return positions;\n    }\n\n    innerArc(innerRadius, outerRadius) {\n      return point => {\n        const newOuter = this.calculateOuterRadius(outerRadius, point);\n        return d3Shape.arc().innerRadius(innerRadius).outerRadius(newOuter)(point);\n      };\n    }\n\n    calculateOuterRadius(outerRadius, point) {\n      const {\n        explode,\n        data\n      } = this.props;\n\n      if (!explode) {\n        return outerRadius;\n      }\n\n      const maxVal = d3Array.max(data, d => d.value);\n      let newOuter = outerRadius;\n\n      if (explode && data !== undefined) {\n        newOuter = outerRadius * point.value / maxVal;\n      }\n\n      return newOuter;\n    }\n\n    centroid(innerRadius, outerRadius) {\n      return data => {\n        const newOuter = this.calculateOuterRadius(outerRadius, data);\n        return d3Shape.arc().innerRadius(innerRadius).outerRadius(newOuter).centroid(data);\n      };\n    }\n\n    outerArc(outerRadius) {\n      return d3Shape.arc().innerRadius(outerRadius * factor).outerRadius(outerRadius * factor);\n    }\n\n    render() {\n      const {\n        animated,\n        label,\n        arc,\n        data\n      } = this.props;\n      const {\n        outerRadius,\n        innerRadius\n      } = this.calculateRadius();\n      const innerArc = this.innerArc(innerRadius, outerRadius);\n      const outerArc = this.outerArc(outerRadius);\n      const positions = this.calculateLabelPositions(outerArc, outerRadius);\n      const centroid = this.centroid(innerRadius, outerRadius);\n      return React__default.createElement(React.Fragment, null, data.map((arcData, index) => React__default.createElement(React.Fragment, {\n        key: arcData.data.key.toString()\n      }, label && this.shouldDisplayLabel(arcData) && React__default.createElement(CloneElement, {\n        element: label,\n        data: arcData,\n        centroid: centroid,\n        position: positions[index]\n      }), React__default.createElement(CloneElement, {\n        element: arc,\n        data: arcData,\n        animated: animated,\n        innerArc: innerArc,\n        color: getColor({\n          data: this.props.data,\n          colorScheme: this.props.colorScheme,\n          point: arcData.data,\n          index\n        })\n      }))));\n    }\n\n  }\n\n  PieArcSeries.defaultProps = {\n    animated: true,\n    colorScheme: 'cybertron',\n    innerRadius: 0,\n    explode: false,\n    displayAllLabels: false,\n    arcWidth: 0.25,\n    label: React__default.createElement(PieArcLabel, null),\n    arc: React__default.createElement(PieArc, null)\n  };\n\n  class PieChart extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.getData = memoize((data, explode) => {\n        const pieLayout = d3Shape.pie().value(d => d.data); // Explode sort doesn't work right...\n\n        if (!explode) {\n          pieLayout.sort(null);\n        }\n\n        return pieLayout(data);\n      });\n    }\n\n    renderChart(containerProps) {\n      const {\n        chartWidth,\n        chartHeight\n      } = containerProps;\n      const {\n        series,\n        displayAllLabels\n      } = this.props;\n      const data = this.getData(this.props.data, this.props.series.props.explode);\n      return React__default.createElement(CloneElement, {\n        element: series,\n        data: data,\n        height: chartHeight,\n        width: chartWidth,\n        displayAllLabels: displayAllLabels\n      });\n    }\n\n    render() {\n      const {\n        id,\n        width,\n        height,\n        margins,\n        className\n      } = this.props;\n      return React__default.createElement(ChartContainer, {\n        id: id,\n        width: width,\n        height: height,\n        margins: margins,\n        xAxisVisible: false,\n        yAxisVisible: false,\n        center: true,\n        className: classNames(className)\n      }, props => this.renderChart(props));\n    }\n\n  }\n\n  PieChart.defaultProps = {\n    disabled: false,\n    displayAllLabels: false,\n    data: [],\n    margins: 10,\n    series: React__default.createElement(PieArcSeries, {\n      animated: true,\n      doughnut: false,\n      innerRadius: 0,\n      arcWidth: 0.25,\n      displayAllLabels: false\n    })\n  };\n  const JUSTIFICATION = {\n    justify: d3Sankey.sankeyJustify,\n    center: d3Sankey.sankeyCenter,\n    left: d3Sankey.sankeyLeft,\n    right: d3Sankey.sankeyRight\n  };\n\n  class Sankey extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        activeNodes: [],\n        activeLinks: []\n      };\n    }\n\n    getNodeColor(node, index) {\n      const {\n        colorScheme,\n        nodes\n      } = this.props;\n\n      if (colorScheme) {\n        return getColor({\n          data: nodes,\n          colorScheme,\n          point: nodes[index],\n          index\n        });\n      } else {\n        return node.props.color;\n      }\n    }\n\n    onNodeActive(node) {\n      const activeNodes = [node];\n      const activeLinks = [];\n\n      if (node.sourceLinks) {\n        activeLinks.push(...node.sourceLinks);\n        node.sourceLinks.forEach(sourceLink => {\n          const sourceLinkTarget = sourceLink.target;\n\n          if (sourceLinkTarget.index !== node.index) {\n            activeNodes.push(sourceLinkTarget);\n          }\n        });\n      }\n\n      if (node.targetLinks) {\n        activeLinks.push(...node.targetLinks);\n        node.targetLinks.forEach(targetLink => {\n          const targetLinkSource = targetLink.source;\n\n          if (targetLinkSource.index !== node.index) {\n            activeNodes.push(targetLinkSource);\n          }\n        });\n      }\n\n      this.setState({\n        activeNodes,\n        activeLinks\n      });\n    }\n\n    onLinkActive(link) {\n      const activeNodes = [link.source, link.target];\n      const activeLinks = [link];\n      this.setState({\n        activeNodes,\n        activeLinks\n      });\n    }\n\n    onInactive() {\n      this.setState({\n        activeNodes: [],\n        activeLinks: []\n      });\n    }\n\n    renderNode(computedNode, index, chartWidth, node) {\n      const {\n        animated\n      } = this.props;\n      const {\n        activeNodes\n      } = this.state;\n      const active = activeNodes.some(node => node.index === computedNode.index);\n      const disabled = activeNodes.length > 0 && !active;\n      return React__default.createElement(CloneElement, Object.assign({\n        element: node,\n        key: `node-${index}`,\n        active: active,\n        animated: animated,\n        disabled: disabled,\n        chartWidth: chartWidth,\n        onMouseEnter: bind(this.onNodeActive, this, computedNode),\n        onMouseLeave: bind(this.onInactive, this, computedNode)\n      }, computedNode));\n    }\n\n    renderNodes(nodes, chartWidth) {\n      const nodeMap = new Map();\n      this.props.nodes.forEach(node => node && nodeMap.set(node.props.title, node));\n      nodes.sort((a, b) => {\n        const aX0 = a && a.x0 ? a.x0 : 0;\n        const aY0 = a && a.y0 ? a.y0 : 0;\n        const bX0 = b && b.x0 ? b.x0 : 0;\n        const bY0 = b && b.y0 ? b.y0 : 0;\n        return aX0 - bX0 || aY0 - bY0;\n      });\n      return React__default.createElement(React.Fragment, null, nodes.map((node, index) => this.renderNode(node, index, chartWidth, nodeMap.get(node.title))));\n    }\n\n    renderLink(computedLink, index, chartId) {\n      const {\n        animated,\n        links\n      } = this.props;\n      const {\n        activeLinks\n      } = this.state;\n      const active = activeLinks.some(link => link.index === computedLink.index);\n      const disabled = activeLinks.length > 0 && !active;\n      return React__default.createElement(CloneElement, Object.assign({\n        element: links[index],\n        active: active,\n        animated: animated,\n        key: `link-${index}`,\n        chartId: chartId,\n        disabled: disabled\n      }, computedLink, {\n        onMouseEnter: bind(this.onLinkActive, this, computedLink),\n        onMouseLeave: bind(this.onInactive, this, computedLink)\n      }));\n    }\n\n    renderChart(containerProps) {\n      const {\n        id,\n        chartWidth,\n        chartHeight\n      } = containerProps;\n      const {\n        justification,\n        nodeWidth,\n        nodePadding\n      } = this.props;\n      const nodesCopy = this.props.nodes.map((node, index) => ({\n        id: node.props.id,\n        title: node.props.title,\n        color: this.getNodeColor(node, index)\n      }));\n      const linksCopy = this.props.links.map(link => ({\n        source: link.props.source,\n        target: link.props.target,\n        value: link.props.value\n      }));\n      const sankeyChart = d3Sankey.sankey().extent([[1, 1], [chartWidth, chartHeight]]).nodeWidth(nodeWidth).nodePadding(nodePadding).nodeAlign(JUSTIFICATION[justification]).nodeId(node => node.id || node.index);\n      const {\n        nodes,\n        links\n      } = sankeyChart({\n        nodes: nodesCopy,\n        links: linksCopy\n      });\n      return containerProps.chartSized && React__default.createElement(React.Fragment, {\n        key: \"group\"\n      }, links.map((link, index) => this.renderLink(link, index, `sankey-${id}`)), this.renderNodes(nodes, chartWidth));\n    }\n\n    render() {\n      const {\n        id,\n        width,\n        height,\n        margins,\n        className\n      } = this.props;\n      return React__default.createElement(ChartContainer, {\n        id: id,\n        width: width,\n        height: height,\n        margins: margins,\n        className: className\n      }, props => this.renderChart(props));\n    }\n\n  }\n\n  Sankey.defaultProps = {\n    animated: true,\n    justification: 'justify',\n    nodeWidth: 15,\n    nodePadding: 10\n  };\n  var css$I = \".SankeyLabel-module_label__3--L3 {\\n  font-size: 12px;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  pointer-events: none; }\\n\";\n  var css$J = {\n    \"label\": \"SankeyLabel-module_label__3--L3\"\n  };\n  styleInject(css$I);\n\n  class SankeyLabel extends React.Component {\n    render() {\n      const {\n        active,\n        chartWidth,\n        className,\n        fill,\n        node,\n        opacity,\n        padding,\n        visible\n      } = this.props;\n      const nodePositions = {\n        x0: node && node.x0 ? node.x0 : 0,\n        y0: node && node.y0 ? node.y0 : 0,\n        x1: node && node.x1 ? node.x1 : 0,\n        y1: node && node.y1 ? node.y1 : 0\n      };\n      const width = chartWidth || 0;\n      const showRightSide = nodePositions.x0 < width / 2;\n      const textAnchor = showRightSide ? 'start' : 'end';\n      return visible && node && React__default.createElement(\"text\", {\n        className: classNames(css$J.label, className),\n        x: showRightSide ? nodePositions.x1 + 6 : nodePositions.x0 - 6,\n        y: (nodePositions.y1 + nodePositions.y0) / 2,\n        dy: \"0.35em\",\n        textAnchor: textAnchor,\n        fill: fill,\n        opacity: opacity(active),\n        style: {\n          padding\n        }\n      }, node.title);\n    }\n\n  }\n\n  SankeyLabel.defaultProps = {\n    active: false,\n    fill: '#fff',\n    location: 'outside',\n    opacity: active => active ? 1 : 0.5,\n    visible: true\n  };\n  const DEFAULT_COLOR = 'rgba(255, 255, 255, 0.2)';\n  var css$K = \".SankeyLink-module_link__1C-v0 {\\n  fill: none;\\n  transition: stroke-opacity 100ms ease-in-out, stroke 100ms ease-in-out;\\n  mix-blend-mode: screen; }\\n\\n.SankeyLink-module_tooltip__2dubX {\\n  text-align: center;\\n  pointer-events: none; }\\n  .SankeyLink-module_tooltip__2dubX .SankeyLink-module_tooltipLabel__2SWlT {\\n    font-size: 16px;\\n    margin-bottom: 3px;\\n    color: white;\\n    text-align: center; }\\n  .SankeyLink-module_tooltip__2dubX .SankeyLink-module_tooltipValue__2a0NJ {\\n    font-size: 13px;\\n    color: rgba(255, 255, 255, 0.7);\\n    text-align: center; }\\n\";\n  var css$L = {\n    \"link\": \"SankeyLink-module_link__1C-v0\",\n    \"tooltip\": \"SankeyLink-module_tooltip__2dubX\",\n    \"tooltipLabel\": \"SankeyLink-module_tooltipLabel__2SWlT\",\n    \"tooltipValue\": \"SankeyLink-module_tooltipValue__2a0NJ\"\n  };\n  styleInject(css$K);\n\n  class SankeyLink extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.link = React.createRef();\n      this.state = {};\n    }\n\n    getEnter() {\n      const path = d3Sankey.sankeyLinkHorizontal();\n      const d = path(this.getLink());\n      const strokeWidth = Math.max(1, this.props.width);\n      return {\n        d,\n        strokeWidth\n      };\n    }\n\n    getExit() {\n      const path = d3Sankey.sankeyLinkHorizontal();\n      const d = path(Object.assign(Object.assign({}, this.getLink()), {\n        width: 0\n      }));\n      return {\n        d,\n        strokeWidth: 0\n      };\n    }\n\n    getLink() {\n      const {\n        index,\n        value,\n        y0,\n        y1,\n        source,\n        target,\n        width\n      } = this.props;\n      return {\n        index,\n        y0,\n        y1,\n        value,\n        width,\n        source,\n        target\n      };\n    }\n\n    getStroke() {\n      const {\n        color,\n        index,\n        gradient,\n        chartId\n      } = this.props;\n      return gradient ? `url(#${chartId}-gradient-${index})` : color;\n    }\n\n    onMouseEnter(event) {\n      this.setState({\n        hovered: true\n      });\n      this.props.onMouseEnter(event);\n    }\n\n    onMouseLeave(event) {\n      this.setState({\n        hovered: false\n      });\n      this.props.onMouseLeave(event);\n    }\n\n    renderLink() {\n      const {\n        active,\n        className,\n        disabled,\n        index,\n        opacity,\n        style,\n        onClick\n      } = this.props;\n      const enterProps = this.getEnter();\n      const exitProps = this.getExit();\n      return React__default.createElement(\"g\", {\n        ref: this.link\n      }, React__default.createElement(framerMotion.motion.path, {\n        key: `sankey-link-${enterProps.d}-${index}`,\n        className: classNames(css$L.link, className),\n        style: style,\n        initial: exitProps,\n        animate: enterProps,\n        exit: exitProps,\n        transition: {\n          duration: 0.5\n        },\n        stroke: this.getStroke(),\n        strokeOpacity: opacity(active, disabled),\n        onClick: onClick,\n        onMouseEnter: bind(this.onMouseEnter, this),\n        onMouseLeave: bind(this.onMouseLeave, this)\n      }));\n    }\n\n    renderTooltipContent() {\n      const {\n        source,\n        target,\n        value\n      } = this.props;\n      return React__default.createElement(\"div\", {\n        className: css$L.tooltip\n      }, React__default.createElement(\"div\", {\n        className: css$L.tooltipLabel\n      }, `${source.title} → ${target.title}`), React__default.createElement(\"div\", {\n        className: css$L.tooltipValue\n      }, formatValue(value)));\n    }\n\n    render() {\n      const {\n        gradient,\n        index,\n        source,\n        target,\n        tooltip,\n        chartId\n      } = this.props;\n      const linkSource = source;\n      const linkTarget = target;\n      return React__default.createElement(React.Fragment, null, gradient && React__default.createElement(\"linearGradient\", {\n        id: `${chartId}-gradient-${index}`,\n        gradientUnits: \"userSpaceOnUse\",\n        x1: linkSource.x1,\n        x2: linkTarget.x0\n      }, React__default.createElement(\"stop\", {\n        offset: \"0%\",\n        stopColor: linkSource.color\n      }), React__default.createElement(\"stop\", {\n        offset: \"100%\",\n        stopColor: linkTarget.color\n      })), this.renderLink(), !tooltip.props.disabled && React__default.createElement(CloneElement, {\n        content: this.renderTooltipContent.bind(this),\n        element: tooltip,\n        visible: this.state.hovered,\n        reference: this.link\n      }));\n    }\n\n  }\n\n  SankeyLink.defaultProps = {\n    active: false,\n    animated: true,\n    color: DEFAULT_COLOR,\n    disabled: false,\n    gradient: true,\n    opacity: (active, disabled) => active ? 0.5 : disabled ? 0.1 : 0.35,\n    tooltip: React__default.createElement(realayers.Tooltip, {\n      followCursor: true,\n      modifiers: {\n        offset: {\n          offset: '0, 5px'\n        }\n      }\n    }),\n    width: 0,\n    onClick: () => undefined,\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined\n  };\n  var css$M = \".SankeyNode-module_node__2SPsh {\\n  transition: opacity 100ms ease-in-out, fill-opacity 100ms ease-in-out; }\\n\\n.SankeyNode-module_tooltip__1VhLz {\\n  text-align: center;\\n  padding: 0 8px;\\n  pointer-events: none; }\\n  .SankeyNode-module_tooltip__1VhLz .SankeyNode-module_tooltipLabel__1mNmp {\\n    font-size: 16px;\\n    margin-bottom: 3px;\\n    color: white;\\n    text-align: center; }\\n  .SankeyNode-module_tooltip__1VhLz .SankeyNode-module_tooltipValue__1Hirb {\\n    font-size: 13px;\\n    color: rgba(255, 255, 255, 0.7);\\n    text-align: center; }\\n\";\n  var css$N = {\n    \"node\": \"SankeyNode-module_node__2SPsh\",\n    \"tooltip\": \"SankeyNode-module_tooltip__1VhLz\",\n    \"tooltipLabel\": \"SankeyNode-module_tooltipLabel__1mNmp\",\n    \"tooltipValue\": \"SankeyNode-module_tooltipValue__1Hirb\"\n  };\n  styleInject(css$M);\n\n  class SankeyNode extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {};\n      this.rect = React.createRef();\n    }\n\n    getNode() {\n      const {\n        id,\n        title,\n        color,\n        sourceLinks,\n        targetLinks,\n        value,\n        index,\n        x0,\n        x1,\n        y0,\n        y1\n      } = this.props;\n      return {\n        id,\n        title,\n        color,\n        sourceLinks,\n        targetLinks,\n        value,\n        index,\n        x0,\n        x1,\n        y0,\n        y1\n      };\n    }\n\n    onMouseEnter(event) {\n      this.setState({\n        hovered: true\n      });\n      this.props.onMouseEnter(event);\n    }\n\n    onMouseLeave(event) {\n      this.setState({\n        hovered: false\n      });\n      this.props.onMouseLeave(event);\n    }\n\n    renderNode() {\n      const {\n        active,\n        className,\n        color,\n        disabled,\n        index,\n        opacity,\n        style,\n        width,\n        x0,\n        x1,\n        y0,\n        y1,\n        onClick\n      } = this.props;\n      const nodeWidth = width || (x1 && x0 && x1 - x0 > 0 ? x1 - x0 : 0);\n      const nodeHeight = y1 && y0 && y1 - y0 > 0 ? y1 - y0 : 0;\n      return React__default.createElement(framerMotion.motion.g, {\n        ref: this.rect,\n        x: x0,\n        y: y0\n      }, React__default.createElement(framerMotion.motion.rect, {\n        key: `sankey-node-${x0}-${x1}-${y0}-${y1}-${index}`,\n        className: classNames(css$N.node, className),\n        fillOpacity: opacity(active, disabled),\n        style: style,\n        width: nodeWidth,\n        height: nodeHeight,\n        fill: color,\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        transition: {\n          duration: 0.1\n        },\n        onClick: onClick,\n        onMouseEnter: bind(this.onMouseEnter, this),\n        onMouseLeave: bind(this.onMouseLeave, this)\n      }));\n    }\n\n    renderTooltipContent() {\n      const {\n        title,\n        value\n      } = this.props;\n      return React__default.createElement(\"div\", {\n        className: css$N.tooltip\n      }, React__default.createElement(\"div\", {\n        className: css$N.tooltipLabel\n      }, title), React__default.createElement(\"div\", {\n        className: css$N.tooltipValue\n      }, formatValue(value)));\n    }\n\n    render() {\n      const {\n        active,\n        chartWidth,\n        label,\n        tooltip,\n        showLabel\n      } = this.props;\n      return React__default.createElement(React.Fragment, null, this.renderNode(), showLabel && React__default.createElement(CloneElement, {\n        active: active,\n        element: label,\n        chartWidth: chartWidth,\n        node: this.getNode()\n      }), !tooltip.props.disabled && React__default.createElement(CloneElement, {\n        content: this.renderTooltipContent.bind(this),\n        element: tooltip,\n        visible: this.state.hovered,\n        reference: this.rect\n      }));\n    }\n\n  }\n\n  SankeyNode.defaultProps = {\n    active: false,\n    animated: true,\n    color: DEFAULT_COLOR,\n    disabled: false,\n    label: React__default.createElement(SankeyLabel, null),\n    opacity: (active, disabled) => active ? 1 : disabled ? 0.2 : 0.9,\n    showLabel: true,\n    tooltip: React__default.createElement(realayers.Tooltip, {\n      followCursor: true,\n      modifiers: {\n        offset: {\n          offset: '0, 5px'\n        }\n      }\n    }),\n    onClick: () => undefined,\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined\n  };\n\n  class SparklineChart extends React.Component {\n    render() {\n      return React__default.createElement(LineChart, Object.assign({}, this.props));\n    }\n\n  }\n\n  SparklineChart.defaultProps = {\n    gridlines: null,\n    series: React__default.createElement(AreaSeries, {\n      symbols: React__default.createElement(PointSeries, {\n        show: \"hover\"\n      }),\n      interpolation: \"smooth\",\n      markLine: null,\n      area: null,\n      line: React__default.createElement(Line, {\n        strokeWidth: 2\n      })\n    }),\n    yAxis: React__default.createElement(LinearYAxis, {\n      scaled: true,\n      type: \"value\",\n      axisLine: null,\n      tickSeries: React__default.createElement(LinearYAxisTickSeries, {\n        line: null,\n        label: null\n      })\n    }),\n    xAxis: React__default.createElement(LinearXAxis, {\n      type: \"time\",\n      scaled: true,\n      axisLine: null,\n      tickSeries: React__default.createElement(LinearXAxisTickSeries, {\n        line: null,\n        label: null\n      })\n    })\n  };\n\n  class AreaSparklineChart extends React.Component {\n    render() {\n      return React__default.createElement(AreaChart, Object.assign({}, this.props));\n    }\n\n  }\n\n  AreaSparklineChart.defaultProps = {\n    gridlines: null,\n    series: React__default.createElement(AreaSeries, {\n      symbols: React__default.createElement(PointSeries, {\n        show: \"hover\"\n      }),\n      interpolation: \"smooth\",\n      markLine: null,\n      area: React__default.createElement(Area, {\n        mask: React__default.createElement(Stripes, null),\n        gradient: React__default.createElement(Gradient, {\n          stops: [React__default.createElement(GradientStop, {\n            offset: \"10%\",\n            stopOpacity: 0,\n            key: \"start\"\n          }), React__default.createElement(GradientStop, {\n            offset: \"80%\",\n            stopOpacity: 1,\n            key: \"stop\"\n          })]\n        })\n      }),\n      line: React__default.createElement(Line, {\n        strokeWidth: 3\n      })\n    }),\n    yAxis: React__default.createElement(LinearYAxis, {\n      type: \"value\",\n      scaled: true,\n      axisLine: null,\n      tickSeries: React__default.createElement(LinearYAxisTickSeries, {\n        line: null,\n        label: null\n      })\n    }),\n    xAxis: React__default.createElement(LinearXAxis, {\n      type: \"time\",\n      scaled: true,\n      axisLine: null,\n      tickSeries: React__default.createElement(LinearXAxisTickSeries, {\n        line: null,\n        label: null\n      })\n    })\n  };\n\n  class BarSparklineChart extends React.Component {\n    render() {\n      return React__default.createElement(BarChart, Object.assign({}, this.props));\n    }\n\n  }\n\n  BarSparklineChart.defaultProps = {\n    gridlines: null,\n    series: React__default.createElement(BarSeries, {\n      colorScheme: schemes.cybertron[0]\n    }),\n    yAxis: React__default.createElement(LinearYAxis, {\n      type: \"value\",\n      axisLine: null,\n      tickSeries: React__default.createElement(LinearYAxisTickSeries, {\n        line: null,\n        label: null\n      })\n    }),\n    xAxis: React__default.createElement(LinearXAxis, {\n      type: \"category\",\n      axisLine: null,\n      tickSeries: React__default.createElement(LinearXAxisTickSeries, {\n        line: null,\n        label: null\n      })\n    })\n  };\n\n  const SonarChart = props => React__default.createElement(StackedBarChart, Object.assign({}, props, {\n    margins: 0,\n    gridlines: null,\n    series: React__default.createElement(StackedBarSeries, {\n      type: \"stackedDiverging\",\n      colorScheme: \"rgb(17, 207, 247)\",\n      tooltip: React__default.createElement(TooltipArea, {\n        tooltip: React__default.createElement(ChartTooltip, {\n          followCursor: true,\n          modifiers: {\n            offset: '5px, 5px'\n          },\n          content: (data, color) => React__default.createElement(TooltipTemplate, {\n            color: color,\n            value: {\n              x: formatValue(data.x),\n              y: `${formatValue(Math.abs(data.data[0].y))}`\n            }\n          })\n        })\n      }),\n      bar: [React__default.createElement(Bar, {\n        rounded: false,\n        width: 1,\n        rangeLines: null,\n        minHeight: 1,\n        gradient: React__default.createElement(Gradient, {\n          stops: [React__default.createElement(GradientStop, {\n            offset: \"5%\",\n            stopOpacity: 0.7,\n            key: \"start\"\n          }), React__default.createElement(GradientStop, {\n            offset: \"90%\",\n            stopOpacity: 1,\n            key: \"stop\"\n          })]\n        })\n      }), React__default.createElement(Bar, {\n        rounded: false,\n        width: 1,\n        rangeLines: null,\n        minHeight: 1,\n        gradient: React__default.createElement(Gradient, {\n          stops: [React__default.createElement(GradientStop, {\n            offset: \"5%\",\n            stopOpacity: 1,\n            key: \"stop\"\n          }), React__default.createElement(GradientStop, {\n            offset: \"90%\",\n            stopOpacity: 0.7,\n            key: \"start\"\n          })]\n        })\n      })]\n    }),\n    yAxis: React__default.createElement(LinearYAxis, {\n      type: \"value\",\n      axisLine: null,\n      tickSeries: React__default.createElement(LinearYAxisTickSeries, {\n        line: null,\n        label: null\n      })\n    }),\n    xAxis: React__default.createElement(LinearXAxis, {\n      type: \"category\",\n      axisLine: null,\n      tickSeries: React__default.createElement(LinearXAxisTickSeries, {\n        line: null,\n        label: null\n      })\n    })\n  }));\n\n  const RadialArea = ({\n    id,\n    data,\n    className,\n    yScale,\n    color,\n    animated,\n    outerRadius,\n    xScale,\n    innerRadius,\n    interpolation,\n    gradient = React__default.createElement(RadialGradient, null)\n  }) => {\n    const transition = React.useMemo(() => animated ? Object.assign({}, DEFAULT_TRANSITION) : {\n      type: false,\n      delay: 0\n    }, [animated]);\n    const getFill = React.useCallback(c => {\n      if (!gradient) {\n        return c;\n      }\n\n      return `url(#${id}-gradient)`;\n    }, [id, gradient]);\n    const getPath = React.useCallback(d => {\n      const curve = interpolation === 'smooth' ? d3Shape.curveCardinalClosed : d3Shape.curveLinearClosed;\n      const radialFn = d3Shape.radialArea().angle(dd => xScale(dd.x)).innerRadius(_ => innerRadius).outerRadius(d => yScale(d.y)).curve(curve);\n      return radialFn(d);\n    }, [xScale, yScale, interpolation, innerRadius]);\n    const enter = React.useMemo(() => ({\n      d: getPath(data),\n      opacity: 1\n    }), [data, getPath]);\n    const exit = React.useMemo(() => {\n      const [yStart] = yScale.domain();\n      return {\n        d: getPath(data.map(d => Object.assign(Object.assign({}, d), {\n          y: yStart\n        }))),\n        opacity: 0\n      };\n    }, [data, getPath, yScale]);\n    const fill = color(data, 0);\n    return React__default.createElement(React.Fragment, null, React__default.createElement(MotionPath, {\n      custom: {\n        enter,\n        exit\n      },\n      transition: transition,\n      pointerEvents: \"none\",\n      className: className,\n      fill: getFill(color)\n    }), gradient && React__default.createElement(CloneElement, {\n      element: gradient,\n      id: `${id}-gradient`,\n      radius: outerRadius,\n      color: fill\n    }));\n  };\n\n  const RadialLine = ({\n    xScale,\n    yScale,\n    className,\n    color,\n    data,\n    interpolation,\n    strokeWidth = 2,\n    animated = true\n  }) => {\n    const getPath = React.useCallback(preData => {\n      const curve = interpolation === 'smooth' ? d3Shape.curveCardinalClosed : d3Shape.curveLinearClosed;\n      const radialFn = d3Shape.radialLine().angle(d => xScale(d.x)).radius(d => yScale(d.y)).curve(curve);\n      return radialFn(preData);\n    }, [xScale, yScale, interpolation]);\n    const transition = React.useMemo(() => animated ? Object.assign({}, DEFAULT_TRANSITION) : {\n      type: false,\n      delay: 0\n    }, [animated]);\n    const fill = color(data, 0);\n    const enter = React.useMemo(() => ({\n      d: getPath(data),\n      opacity: 1\n    }), [data, getPath]);\n    const exit = React.useMemo(() => {\n      const [yStart] = yScale.domain();\n      return {\n        d: getPath(data.map(d => Object.assign(Object.assign({}, d), {\n          y: yStart\n        }))),\n        opacity: 0\n      };\n    }, [data, yScale, getPath]);\n    return React__default.createElement(MotionPath, {\n      custom: {\n        enter,\n        exit\n      },\n      transition: transition,\n      className: className,\n      pointerEvents: \"none\",\n      stroke: fill,\n      fill: \"none\",\n      strokeWidth: strokeWidth\n    });\n  };\n\n  var css$O = \".RadialScatterPoint-module_inactive__3cq4W {\\n  opacity: 0.4;\\n  transition: opacity 200ms ease-in-out; }\\n\";\n  var css$P = {\n    \"inactive\": \"RadialScatterPoint-module_inactive__3cq4W\"\n  };\n  styleInject(css$O);\n\n  class RadialScatterPoint extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.ref = React.createRef();\n      this.state = {\n        hovered: false\n      };\n    }\n\n    onMouseEnter(event) {\n      this.setState({\n        hovered: true\n      });\n      const {\n        onMouseEnter,\n        data\n      } = this.props;\n      onMouseEnter({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    onMouseLeave(event) {\n      this.setState({\n        hovered: false\n      });\n      const {\n        onMouseLeave,\n        data\n      } = this.props;\n      onMouseLeave({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    onClick(event) {\n      const {\n        onClick,\n        data\n      } = this.props;\n      onClick({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    getTranslate(data) {\n      const {\n        xScale,\n        yScale\n      } = this.props;\n      const fn = d3Shape.radialLine().radius(d => yScale(d.y)).angle(d => xScale(d.x)); // Parse the generated path to get point coordinates\n      // Ref: https://bit.ly/2CnZcPl\n\n      const path = fn([data]);\n\n      if (path) {\n        const [translateX, translateY] = path.slice(1).slice(0, -1).split(',');\n        return {\n          translateX: parseFloat(translateX),\n          translateY: parseFloat(translateY)\n        };\n      }\n    }\n\n    getTransition() {\n      const {\n        animated,\n        index\n      } = this.props;\n\n      if (animated) {\n        return Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n          delay: index * 0.005\n        });\n      } else {\n        return {\n          type: false,\n          delay: 0\n        };\n      }\n    }\n\n    render() {\n      const {\n        size,\n        data,\n        color,\n        index,\n        symbol,\n        active,\n        tooltip,\n        yScale,\n        className\n      } = this.props;\n      const {\n        hovered\n      } = this.state;\n      const fill = typeof color === 'function' ? color(data, index) : color;\n      const transform = this.getTranslate(data);\n      const sizeVal = typeof size === 'function' ? size(data) : size;\n      const transition = this.getTransition();\n      const [yStart] = yScale.domain();\n      const exitTransform = this.getTranslate(Object.assign(Object.assign({}, data), {\n        y: yStart\n      }));\n      return React__default.createElement(React.Fragment, null, React__default.createElement(framerMotion.motion.g, {\n        initial: Object.assign(Object.assign({}, exitTransform), {\n          opacity: 0\n        }),\n        animate: Object.assign(Object.assign({}, transform), {\n          opacity: 1\n        }),\n        exit: Object.assign(Object.assign({}, exitTransform), {\n          opacity: 0\n        }),\n        transition: transition,\n        ref: this.ref,\n        onMouseEnter: bind(this.onMouseEnter, this),\n        onMouseLeave: bind(this.onMouseLeave, this),\n        onClick: bind(this.onClick, this),\n        className: classNames(className, {\n          [css$P.inactive]: !active\n        })\n      }, symbol && symbol(data), !symbol && React__default.createElement(\"circle\", {\n        r: sizeVal,\n        fill: fill\n      })), tooltip && React__default.createElement(CloneElement, {\n        element: tooltip,\n        visible: hovered,\n        reference: this.ref,\n        value: data\n      }));\n    }\n\n  }\n\n  RadialScatterPoint.defaultProps = {\n    size: 3,\n    color: schemes.cybertron[0],\n    tooltip: React__default.createElement(ChartTooltip, null),\n    active: true,\n    onClick: () => undefined,\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined\n  };\n\n  class RadialScatterSeries extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        activeIds: []\n      };\n    }\n\n    onMouseEnter({\n      value\n    }) {\n      // Only perform this on unmanaged activations\n      if (!this.props.activeIds) {\n        this.setState({\n          activeIds: [value.id]\n        });\n      }\n    }\n\n    onMouseLeave() {\n      // Only perform this on unmanaged activations\n      if (!this.props.activeIds) {\n        this.setState({\n          activeIds: []\n        });\n      }\n    }\n\n    renderPoint(data, index) {\n      const {\n        point,\n        xScale,\n        yScale,\n        animated\n      } = this.props;\n      let dataId;\n\n      if (data.id) {\n        dataId = data.id;\n      } else {\n        console.warn(`No 'id' property provided for scatter point; provide one via 'id'.`);\n      }\n\n      const key = dataId || index;\n      const activeIds = this.props.activeIds || this.state.activeIds;\n      const active = !(activeIds && activeIds.length) || activeIds.includes(dataId);\n      const visible = point.props.visible;\n\n      if (visible && !visible(data, index)) {\n        return React__default.createElement(React.Fragment, {\n          key: key\n        });\n      }\n\n      return React__default.createElement(CloneElement, {\n        element: point,\n        key: key,\n        data: data,\n        index: index,\n        active: active,\n        xScale: xScale,\n        yScale: yScale,\n        animated: animated,\n        onMouseEnter: bind(this.onMouseEnter, this),\n        onMouseLeave: bind(this.onMouseLeave, this)\n      });\n    }\n\n    render() {\n      const {\n        data\n      } = this.props;\n      return React__default.createElement(React.Fragment, null, data.map((d, i) => this.renderPoint(d, i)));\n    }\n\n  }\n\n  RadialScatterSeries.defaultProps = {\n    point: React__default.createElement(RadialScatterPoint, null),\n    animated: true\n  };\n\n  class RadialScatterPlot extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.getScales = memoize((preData, outerRadius, innerRadius) => {\n        const data = buildShallowChartData(preData);\n        const yDomain = getYDomain({\n          data,\n          scaled: false\n        });\n        const xDomain = getXDomain({\n          data\n        });\n        const xScale = d3Scale.scaleTime().range([0, 2 * Math.PI]).domain(xDomain);\n        const yScale = getRadialYScale(innerRadius, outerRadius, yDomain);\n        return {\n          yScale,\n          xScale,\n          data\n        };\n      });\n    }\n\n    renderChart(containerProps) {\n      const {\n        chartWidth,\n        chartHeight,\n        id\n      } = containerProps;\n      const {\n        innerRadius,\n        series,\n        axis\n      } = this.props;\n      const outerRadius = Math.min(chartWidth, chartHeight) / 2;\n      const {\n        yScale,\n        xScale,\n        data\n      } = this.getScales(this.props.data, outerRadius, innerRadius);\n      return React__default.createElement(React.Fragment, null, axis && React__default.createElement(CloneElement, {\n        element: axis,\n        xScale: xScale,\n        height: chartHeight,\n        width: chartWidth,\n        innerRadius: innerRadius\n      }), React__default.createElement(CloneElement, {\n        element: series,\n        id: id,\n        data: data,\n        xScale: xScale,\n        yScale: yScale\n      }));\n    }\n\n    render() {\n      const {\n        id,\n        width,\n        height,\n        margins,\n        className\n      } = this.props;\n      return React__default.createElement(ChartContainer, {\n        id: id,\n        width: width,\n        height: height,\n        margins: margins,\n        xAxisVisible: false,\n        yAxisVisible: false,\n        center: true,\n        className: className\n      }, this.renderChart.bind(this));\n    }\n\n  }\n\n  RadialScatterPlot.defaultProps = {\n    innerRadius: 80,\n    margins: 75,\n    axis: React__default.createElement(RadialAxis, null),\n    series: React__default.createElement(RadialScatterSeries, null)\n  };\n\n  const RadialPointSeries = ({\n    data,\n    xScale,\n    yScale,\n    animated,\n    color,\n    activeValues,\n    show = 'hover',\n    point = React__default.createElement(RadialScatterPoint, null)\n  }) => {\n    const isVisible = React.useCallback((point, index) => {\n      const isActive = activeValues && point && isEqual(activeValues.x, point.x);\n\n      if (show === 'hover') {\n        return isActive;\n      } else if (show === 'first') {\n        if (activeValues) {\n          return isActive;\n        } else {\n          return index === 0;\n        }\n      } else if (show === 'last') {\n        if (activeValues) {\n          return isActive;\n        } else {\n          return index === data.length - 1;\n        }\n      }\n\n      return show;\n    }, [data, activeValues, point, show]);\n    return React__default.createElement(RadialScatterSeries, {\n      animated: animated,\n      data: data,\n      xScale: xScale,\n      yScale: yScale,\n      point: React__default.createElement(CloneElement, {\n        element: point,\n        color: color,\n        tooltip: null,\n        visible: isVisible\n      })\n    });\n  };\n\n  class RadialAreaSeries extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {};\n    }\n\n    getColor(point, index) {\n      const {\n        colorScheme,\n        data\n      } = this.props;\n      return getColor({\n        colorScheme,\n        data,\n        index,\n        point\n      });\n    }\n\n    onValueEnter(event) {\n      this.setState({\n        activeValues: event.value\n      });\n    }\n\n    onValueLeave() {\n      this.setState({\n        activeValues: undefined\n      });\n    }\n\n    renderArea() {\n      const {\n        area,\n        id,\n        xScale,\n        yScale,\n        data,\n        interpolation,\n        animated,\n        innerRadius,\n        outerRadius\n      } = this.props;\n      return React__default.createElement(CloneElement, {\n        element: area,\n        id: `${id}-radial-area`,\n        xScale: xScale,\n        yScale: yScale,\n        animated: animated,\n        color: this.getColor.bind(this),\n        data: data,\n        interpolation: interpolation,\n        outerRadius: outerRadius,\n        innerRadius: innerRadius\n      });\n    }\n\n    renderLine() {\n      const {\n        line,\n        xScale,\n        yScale,\n        data,\n        animated,\n        interpolation\n      } = this.props;\n      return React__default.createElement(CloneElement, {\n        element: line,\n        xScale: xScale,\n        yScale: yScale,\n        animated: animated,\n        interpolation: interpolation,\n        color: this.getColor.bind(this),\n        data: data\n      });\n    }\n\n    renderSymbols() {\n      const {\n        xScale,\n        yScale,\n        animated,\n        area,\n        symbols,\n        data\n      } = this.props;\n      const {\n        activeValues\n      } = this.state; // Animations are only valid for Area\n\n      const activeSymbols = symbols && symbols.props.activeValues || activeValues;\n      const isAnimated = area !== undefined && animated && !activeSymbols;\n      return React__default.createElement(CloneElement, {\n        element: symbols,\n        activeValues: activeValues,\n        xScale: xScale,\n        yScale: yScale,\n        data: data,\n        animated: isAnimated,\n        color: this.getColor.bind(this)\n      });\n    }\n\n    render() {\n      const {\n        area,\n        line,\n        symbols,\n        tooltip,\n        xScale,\n        yScale,\n        data,\n        id,\n        width,\n        height,\n        innerRadius,\n        outerRadius\n      } = this.props;\n      return React__default.createElement(CloneElement, {\n        element: tooltip,\n        xScale: xScale,\n        yScale: yScale,\n        data: data,\n        height: height,\n        width: width,\n        isRadial: true,\n        innerRadius: innerRadius,\n        outerRadius: outerRadius,\n        color: this.getColor.bind(this),\n        onValueEnter: bind(this.onValueEnter, this),\n        onValueLeave: bind(this.onValueLeave, this)\n      }, React__default.createElement(\"g\", {\n        clipPath: `url(#${id}-path)`\n      }, area && this.renderArea(), line && this.renderLine(), symbols && this.renderSymbols()));\n    }\n\n  }\n\n  RadialAreaSeries.defaultProps = {\n    colorScheme: schemes.cybertron[0],\n    interpolation: 'smooth',\n    animated: true,\n    area: React__default.createElement(RadialArea, null),\n    line: React__default.createElement(RadialLine, null),\n    symbols: React__default.createElement(RadialPointSeries, null),\n    tooltip: React__default.createElement(TooltipArea, null)\n  };\n\n  const RadialAreaChart = ({\n    id,\n    width,\n    height,\n    className,\n    data,\n    innerRadius = 0.1,\n    series = React__default.createElement(RadialAreaSeries, null),\n    axis = React__default.createElement(RadialAxis, null),\n    margins = 75\n  }) => {\n    const getScales = React.useCallback((preData, outerRadius, innerRadius) => {\n      const d = buildShallowChartData(preData);\n      const yDomain = getYDomain({\n        data: d,\n        scaled: false\n      });\n      let xScale;\n\n      if ((axis === null || axis === void 0 ? void 0 : axis.props.type) === 'category') {\n        const xDomain = uniqueBy(d, dd => dd.x);\n        xScale = d3Scale.scaleBand().range([0, 2 * Math.PI]).domain(xDomain);\n      } else {\n        const xDomain = getXDomain({\n          data: d\n        });\n        xScale = d3Scale.scaleTime().range([0, 2 * Math.PI]).domain(xDomain);\n      }\n\n      const yScale = getRadialYScale(innerRadius, outerRadius, yDomain);\n      return {\n        yScale,\n        xScale,\n        result: d\n      };\n    }, []);\n    const renderChart = React.useCallback(containerProps => {\n      const {\n        chartWidth,\n        chartHeight,\n        id\n      } = containerProps;\n      const outerRadius = Math.min(chartWidth, chartHeight) / 2;\n      const {\n        yScale,\n        xScale,\n        result\n      } = getScales(data, outerRadius, innerRadius);\n      return React__default.createElement(React.Fragment, null, axis && React__default.createElement(CloneElement, {\n        element: axis,\n        xScale: xScale,\n        height: chartHeight,\n        width: chartWidth,\n        innerRadius: innerRadius\n      }), React__default.createElement(CloneElement, {\n        element: series,\n        id: id,\n        data: result,\n        xScale: xScale,\n        yScale: yScale,\n        height: chartHeight,\n        width: chartWidth,\n        outerRadius: outerRadius,\n        innerRadius: innerRadius\n      }));\n    }, [data, series, id, innerRadius, axis]);\n    return React__default.createElement(ChartContainer, {\n      id: id,\n      width: width,\n      height: height,\n      margins: margins,\n      xAxisVisible: false,\n      yAxisVisible: false,\n      center: true,\n      className: className\n    }, renderChart);\n  };\n\n  var pi = Math.PI,\n      tau = 2 * pi,\n      epsilon = 1e-6,\n      tauEpsilon = tau - epsilon;\n\n  function Path() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n\n    this._ = \"\";\n  }\n\n  function path() {\n    return new Path();\n  }\n\n  Path.prototype = path.prototype = {\n    constructor: Path,\n    moveTo: function (x, y) {\n      this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n    },\n    closePath: function () {\n      if (this._x1 !== null) {\n        this._x1 = this._x0, this._y1 = this._y0;\n        this._ += \"Z\";\n      }\n    },\n    lineTo: function (x, y) {\n      this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    quadraticCurveTo: function (x1, y1, x, y) {\n      this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    bezierCurveTo: function (x1, y1, x2, y2, x, y) {\n      this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    arcTo: function (x1, y1, x2, y2, r) {\n      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n      var x0 = this._x1,\n          y0 = this._y1,\n          x21 = x2 - x1,\n          y21 = y2 - y1,\n          x01 = x0 - x1,\n          y01 = y0 - y1,\n          l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n      if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n      if (this._x1 === null) {\n        this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n      } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n      else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n        // Equivalently, is (x1,y1) coincident with (x2,y2)?\n        // Or, is the radius zero? Line to (x1,y1).\n        else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n            this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n          } // Otherwise, draw an arc!\n          else {\n              var x20 = x2 - x0,\n                  y20 = y2 - y0,\n                  l21_2 = x21 * x21 + y21 * y21,\n                  l20_2 = x20 * x20 + y20 * y20,\n                  l21 = Math.sqrt(l21_2),\n                  l01 = Math.sqrt(l01_2),\n                  l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n                  t01 = l / l01,\n                  t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n              if (Math.abs(t01 - 1) > epsilon) {\n                this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n              }\n\n              this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n            }\n    },\n    arc: function (x, y, r, a0, a1, ccw) {\n      x = +x, y = +y, r = +r, ccw = !!ccw;\n      var dx = r * Math.cos(a0),\n          dy = r * Math.sin(a0),\n          x0 = x + dx,\n          y0 = y + dy,\n          cw = 1 ^ ccw,\n          da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n      if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n      if (this._x1 === null) {\n        this._ += \"M\" + x0 + \",\" + y0;\n      } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n      else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n          this._ += \"L\" + x0 + \",\" + y0;\n        } // Is this arc empty? We’re done.\n\n\n      if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n      if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n      if (da > tauEpsilon) {\n        this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n      } // Is this arc non-empty? Draw an arc!\n      else if (da > epsilon) {\n          this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n        }\n    },\n    rect: function (x, y, w, h) {\n      this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n    },\n    toString: function () {\n      return this._;\n    }\n  };\n\n  const MotionBar = _a => {\n    var {\n      custom,\n      transition,\n      arc\n    } = _a,\n        rest = __rest(_a, [\"custom\", \"transition\", \"arc\"]);\n\n    const d = framerMotion.useMotionValue('');\n    const prevPath = framerMotion.useMotionValue(custom.exit);\n    const spring = framerMotion.useSpring(prevPath, Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n      from: 0,\n      to: 1\n    }));\n    React.useEffect(() => {\n      const from = custom.previousEnter ? custom.previousEnter.y : prevPath.get().y;\n      const interpolator = d3Interpolate.interpolate(from, custom.enter.y);\n      const unsub = spring.onChange(v => d.set(arc(Object.assign(Object.assign({}, custom.enter), {\n        y: interpolator(v)\n      }))));\n      prevPath.set(custom.enter);\n      return unsub;\n    });\n\n    const _b = custom.enter,\n          {\n      d: enterD\n    } = _b,\n          enterRest = __rest(_b, [\"d\"]);\n\n    const _c = custom.exit,\n          exitRest = __rest(_c, [\"d\"]);\n\n    return React__default.createElement(framerMotion.motion.path, Object.assign({}, rest, {\n      initial: exitRest,\n      exit: exitRest,\n      animate: enterRest,\n      transition: transition,\n      d: transition.type !== false ? d : enterD\n    }));\n  };\n\n  const RadialGuideBar = ({\n    active,\n    path,\n    fill = '#eee',\n    opacity = 0.2\n  }) => React__default.createElement(framerMotion.motion.path, {\n    d: path,\n    fill: fill,\n    pointerEvents: \"none\",\n    initial: \"hidden\",\n    animate: active ? 'visible' : 'hidden',\n    variants: {\n      hidden: {\n        opacity: 0\n      },\n      visible: {\n        opacity\n      }\n    }\n  });\n\n  class RadialBar extends React.Component {\n    getFill(color) {\n      const {\n        id,\n        gradient\n      } = this.props;\n\n      if (!gradient) {\n        return color;\n      }\n\n      return `url(#${id}-gradient)`;\n    }\n\n    onMouseEnter(event) {\n      const {\n        onMouseEnter,\n        data\n      } = this.props;\n      onMouseEnter({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    onMouseLeave(event) {\n      const {\n        onMouseLeave,\n        data\n      } = this.props;\n      onMouseLeave({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    onMouseClick(event) {\n      const {\n        onClick,\n        data\n      } = this.props;\n      onClick({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    getArc(data) {\n      const {\n        innerRadius,\n        xScale,\n        yScale,\n        curved\n      } = this.props;\n      const outerRadius = yScale(data.y);\n\n      if (curved) {\n        const startAngle = xScale(data.x);\n        const endAngle = startAngle + xScale.bandwidth();\n        const arcFn = d3Shape.arc().innerRadius(innerRadius).outerRadius(outerRadius).startAngle(startAngle).endAngle(endAngle).padAngle(0.01).padRadius(innerRadius);\n        return arcFn(data);\n      } else {\n        const startAngle = xScale(data.x) - Math.PI * 0.5;\n        const endAngle = startAngle + xScale.bandwidth();\n        const innerAngleDistance = endAngle - startAngle;\n        const arcLength = innerRadius * innerAngleDistance;\n        const outerAngleDistance = arcLength / outerRadius;\n        const halfAngleDistanceDelta = (innerAngleDistance - outerAngleDistance) / 2;\n        const pathFn = path();\n        pathFn.arc(0, 0, innerRadius, startAngle, endAngle);\n        pathFn.arc(0, 0, outerRadius, endAngle - halfAngleDistanceDelta, startAngle + halfAngleDistanceDelta, true);\n        return pathFn.toString();\n      }\n    }\n\n    getTransition() {\n      const {\n        animated,\n        barCount,\n        index\n      } = this.props;\n\n      if (animated) {\n        return Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n          delay: index / barCount * 0.5\n        });\n      } else {\n        return {\n          type: false,\n          delay: 0\n        };\n      }\n    }\n\n    renderBar(color) {\n      const {\n        className,\n        data,\n        yScale,\n        active,\n        guide\n      } = this.props;\n      const fill = this.getFill(color);\n      const transition = this.getTransition(); // Track previous props\n\n      const previousEnter = this.previousEnter ? Object.assign({}, this.previousEnter) : undefined;\n      this.previousEnter = Object.assign({}, data);\n      const [yStart, yEnd] = yScale.domain();\n      const exit = Object.assign(Object.assign({}, data), {\n        y: yStart\n      });\n      const guidePath = this.getArc(Object.assign(Object.assign({}, data), {\n        y: yEnd\n      }));\n      return React__default.createElement(React.Fragment, null, guide && React__default.createElement(CloneElement, {\n        element: guide,\n        active: active,\n        path: guidePath\n      }), React__default.createElement(MotionBar, {\n        arc: this.getArc.bind(this),\n        custom: {\n          enter: data,\n          exit,\n          previousEnter\n        },\n        transition: transition,\n        fill: fill,\n        className: className,\n        onMouseEnter: bind(this.onMouseEnter, this),\n        onMouseLeave: bind(this.onMouseLeave, this),\n        onClick: bind(this.onMouseClick, this)\n      }));\n    }\n\n    render() {\n      const {\n        data,\n        index,\n        color,\n        gradient,\n        id,\n        active\n      } = this.props;\n      const fill = color(data, index);\n      const currentColorShade = active ? chroma(fill).brighten(0.5) : fill;\n      return React__default.createElement(React.Fragment, null, this.renderBar(currentColorShade), gradient && React__default.createElement(Gradient, {\n        id: `${id}-gradient`,\n        color: currentColorShade\n      }));\n    }\n\n  }\n\n  RadialBar.defaultProps = {\n    gradient: true,\n    curved: false,\n    guide: React__default.createElement(RadialGuideBar, null),\n    onClick: () => undefined,\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined\n  };\n\n  class RadialBarSeries extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {};\n    }\n\n    onValueEnter(event) {\n      this.setState({\n        activeValues: event.value\n      });\n    }\n\n    onValueLeave() {\n      this.setState({\n        activeValues: undefined\n      });\n    }\n\n    renderBar(point, index) {\n      const {\n        innerRadius,\n        xScale,\n        yScale,\n        bar,\n        id,\n        data,\n        animated,\n        colorScheme\n      } = this.props;\n      const {\n        activeValues\n      } = this.state;\n      const active = activeValues && data && isEqual(activeValues.x, point.x);\n      return React__default.createElement(React.Fragment, {\n        key: index\n      }, React__default.createElement(CloneElement, {\n        element: bar,\n        id: `radialbar-${id}-${index}`,\n        index: index,\n        data: point,\n        xScale: xScale,\n        active: active,\n        yScale: yScale,\n        innerRadius: innerRadius,\n        color: point => getColor({\n          data,\n          point,\n          index: 0,\n          colorScheme\n        }),\n        barCount: data.length,\n        animated: animated\n      }));\n    }\n\n    render() {\n      const {\n        data,\n        id,\n        innerRadius,\n        outerRadius,\n        xScale,\n        yScale,\n        height,\n        width,\n        tooltip,\n        colorScheme\n      } = this.props;\n      return React__default.createElement(CloneElement, {\n        element: tooltip,\n        xScale: xScale,\n        yScale: yScale,\n        data: data,\n        height: height,\n        width: width,\n        isRadial: true,\n        innerRadius: innerRadius,\n        outerRadius: outerRadius,\n        onValueEnter: this.onValueEnter.bind(this),\n        onValueLeave: this.onValueLeave.bind(this),\n        color: (point, index) => getColor({\n          data,\n          point,\n          index,\n          colorScheme\n        })\n      }, React__default.createElement(\"g\", {\n        clipPath: `url(#${id}-path)`\n      }, data.map(this.renderBar.bind(this))));\n    }\n\n  }\n\n  RadialBarSeries.defaultProps = {\n    colorScheme: schemes.cybertron[0],\n    tooltip: React__default.createElement(TooltipArea, {\n      tooltip: React__default.createElement(ChartTooltip, {\n        followCursor: true\n      })\n    }),\n    bar: React__default.createElement(RadialBar, null),\n    animated: true\n  };\n\n  class RadialBarChart extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.getScales = memoize((preData, innerRadius, outerRadius) => {\n        const data = buildShallowChartData(preData);\n        const xDomain = uniqueBy(data, d => d.x);\n        const yDomain = getYDomain({\n          data,\n          scaled: false\n        });\n        const xScale = d3Scale.scaleBand().range([0, 2 * Math.PI]).domain(xDomain);\n        const yScale = getRadialYScale(innerRadius, outerRadius, yDomain);\n        return {\n          xScale,\n          yScale,\n          data\n        };\n      });\n    }\n\n    renderChart(containerProps) {\n      const {\n        chartWidth,\n        chartHeight,\n        id\n      } = containerProps;\n      const {\n        innerRadius,\n        series,\n        axis\n      } = this.props;\n      const outerRadius = Math.min(chartWidth, chartHeight) / 2;\n      const {\n        yScale,\n        xScale,\n        data\n      } = this.getScales(this.props.data, innerRadius, outerRadius);\n      return React__default.createElement(React.Fragment, null, axis && React__default.createElement(CloneElement, {\n        element: axis,\n        xScale: xScale,\n        height: chartHeight,\n        width: chartWidth,\n        innerRadius: innerRadius\n      }), React__default.createElement(CloneElement, {\n        element: series,\n        id: id,\n        data: data,\n        height: chartHeight,\n        width: chartWidth,\n        xScale: xScale,\n        yScale: yScale,\n        innerRadius: innerRadius,\n        outerRadius: outerRadius\n      }));\n    }\n\n    render() {\n      const {\n        id,\n        width,\n        height,\n        margins,\n        className\n      } = this.props;\n      return React__default.createElement(ChartContainer, {\n        id: id,\n        width: width,\n        height: height,\n        margins: margins,\n        xAxisVisible: false,\n        yAxisVisible: false,\n        center: true,\n        className: className\n      }, props => this.renderChart(props));\n    }\n\n  }\n\n  RadialBarChart.defaultProps = {\n    innerRadius: 0.1,\n    margins: 75,\n    axis: React__default.createElement(RadialAxis, null),\n    series: React__default.createElement(RadialBarSeries, null)\n  };\n\n  class RadialGaugeArc extends React.Component {\n    getPaths() {\n      const {\n        outerRadius,\n        startAngle,\n        endAngle,\n        width,\n        data\n      } = this.props; // Calculate the inner rad based on the width\n      // and the outer rad which is height/width / 2\n\n      const innerRadius = outerRadius - width; // Center arcs so inner/outer align nicely\n\n      const delta = (outerRadius - innerRadius) / 2;\n      const newInnerRad = innerRadius + delta;\n      const newOuterRad = outerRadius + delta; // Create the arc fn to pass to the pie arc\n\n      const innerArc = d3Shape.arc().innerRadius(newInnerRad).outerRadius(newOuterRad);\n      return {\n        data: {\n          startAngle,\n          endAngle,\n          // Data must be passed\n          data: data || {}\n        },\n        innerArc\n      };\n    }\n\n    render() {\n      const {\n        color,\n        animated,\n        disabled,\n        tooltip,\n        onClick,\n        onMouseEnter,\n        onMouseLeave\n      } = this.props;\n      const data = this.getPaths();\n      return React__default.createElement(PieArc, Object.assign({}, data, {\n        animated: animated,\n        color: color,\n        disabled: disabled,\n        tooltip: tooltip,\n        onClick: onClick,\n        onMouseEnter: onMouseEnter,\n        onMouseLeave: onMouseLeave\n      }));\n    }\n\n  }\n\n  RadialGaugeArc.defaultProps = {\n    width: 5,\n    color: '#353d44',\n    animated: true,\n    disabled: false,\n    onClick: () => undefined,\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined,\n    tooltip: React__default.createElement(ChartTooltip, null)\n  };\n  var css$Q = \".RadialGaugeLabel-module_valueLabel__1s1YY {\\n  font-size: 14px;\\n  font-weight: 400;\\n  fill: var(--color-on-surface);\\n  opacity: .6; }\\n\";\n  var css$R = {\n    \"valueLabel\": \"RadialGaugeLabel-module_valueLabel__1s1YY\"\n  };\n  styleInject(css$Q);\n\n  class RadialGaugeLabel extends React.PureComponent {\n    render() {\n      const {\n        data,\n        className,\n        offset,\n        onClick\n      } = this.props;\n      const label = formatValue(data.key);\n      return React__default.createElement(\"text\", {\n        dy: \"1.23em\",\n        x: \"0\",\n        y: offset,\n        textAnchor: \"middle\",\n        onClick: nativeEvent => onClick({\n          data,\n          nativeEvent\n        }),\n        className: classNames(className, css$R.valueLabel)\n      }, label);\n    }\n\n  }\n\n  RadialGaugeLabel.defaultProps = {\n    onClick: () => undefined\n  };\n  var css$S = \".RadialGaugeValueLabel-module_valueLabel__1tkTL {\\n  font-size: 18px;\\n  font-weight: 400;\\n  fill: var(--color-on-surface); }\\n\";\n  var css$T = {\n    \"valueLabel\": \"RadialGaugeValueLabel-module_valueLabel__1tkTL\"\n  };\n  styleInject(css$S);\n\n  class RadialGaugeValueLabel extends React.PureComponent {\n    render() {\n      const {\n        data,\n        className\n      } = this.props; // TODO: Get seperator based on locale\n\n      return React__default.createElement(CountUp, {\n        start: 0,\n        end: data.data,\n        delay: 0,\n        duration: 1,\n        separator: \",\"\n      }, ({\n        countUpRef\n      }) => React__default.createElement(\"text\", {\n        dy: \"-0.5em\",\n        x: \"0\",\n        y: \"15\",\n        textAnchor: \"middle\",\n        className: classNames(className, css$T.valueLabel),\n        ref: countUpRef\n      }));\n    }\n\n  }\n\n  RadialGaugeValueLabel.defaultProps = {};\n\n  class RadialGaugeSeries extends React.Component {\n    getWidths() {\n      const {\n        data,\n        width,\n        height,\n        minGaugeWidth\n      } = this.props;\n      let rows = 1;\n      let columns = data.length;\n\n      if (width / data.length < minGaugeWidth) {\n        while (width / columns < minGaugeWidth) {\n          rows += 1;\n          columns = Math.ceil(data.length / rows);\n        }\n      }\n\n      const xScale = d3Scale.scaleBand();\n      xScale.domain(d3Array.range(columns));\n      xScale.rangeRound([0, width], 0.1);\n      const yScale = d3Scale.scaleBand();\n      yScale.domain(d3Array.range(rows));\n      yScale.rangeRound([0, height], 0.1);\n      return {\n        columns,\n        xScale,\n        yScale,\n        width: xScale.bandwidth(),\n        height: yScale.bandwidth()\n      };\n    }\n\n    renderGauge(point, index, columns, height, width, xScale, yScale) {\n      const {\n        scale,\n        innerArc,\n        outerArc,\n        startAngle,\n        data,\n        endAngle,\n        label,\n        valueLabel,\n        padding,\n        colorScheme\n      } = this.props;\n      const dataEndAngle = scale(point.data);\n      const baselineLabelHeight = 20;\n      const outerRadius = d3Array.min([width - padding, height - baselineLabelHeight - padding]) / 2 - 10;\n      const labelOffset = height / 2 - baselineLabelHeight;\n      const x = xScale(index % columns);\n      const y = yScale(Math.floor(index / columns));\n      const xOffset = x + (width - padding) / 2;\n      const yOffset = y + (height - baselineLabelHeight) / 2;\n      return React__default.createElement(\"g\", {\n        transform: `translate(${xOffset}, ${yOffset})`,\n        key: point.key.toLocaleString()\n      }, outerArc && React__default.createElement(CloneElement, {\n        element: outerArc,\n        outerRadius: outerRadius,\n        startAngle: startAngle,\n        endAngle: endAngle\n      }), React__default.createElement(CloneElement, {\n        element: innerArc,\n        outerRadius: outerRadius,\n        startAngle: startAngle,\n        endAngle: dataEndAngle,\n        data: point,\n        color: getColor({\n          data,\n          colorScheme,\n          point,\n          index\n        })\n      }), valueLabel && React__default.createElement(CloneElement, {\n        element: valueLabel,\n        data: point\n      }), label && React__default.createElement(CloneElement, {\n        element: label,\n        data: point,\n        offset: labelOffset\n      }));\n    }\n\n    render() {\n      const {\n        data\n      } = this.props;\n      const {\n        columns,\n        width,\n        height,\n        xScale,\n        yScale\n      } = this.getWidths();\n      return React__default.createElement(React.Fragment, null, data.map((d, i) => this.renderGauge(d, i, columns, height, width, xScale, yScale)));\n    }\n\n  }\n\n  RadialGaugeSeries.defaultProps = {\n    outerArc: React__default.createElement(RadialGaugeArc, {\n      disabled: true\n    }),\n    innerArc: React__default.createElement(RadialGaugeArc, {\n      width: 10,\n      animated: true\n    }),\n    label: React__default.createElement(RadialGaugeLabel, null),\n    valueLabel: React__default.createElement(RadialGaugeValueLabel, null),\n    colorScheme: ['#00ECB1'],\n    padding: 10,\n    minGaugeWidth: 50\n  };\n\n  class RadialGauge extends React.Component {\n    renderChart(containerProps) {\n      const {\n        chartWidth,\n        chartHeight\n      } = containerProps;\n      const {\n        startAngle,\n        endAngle,\n        minValue,\n        maxValue,\n        data,\n        series\n      } = this.props;\n      const scale = d3Scale.scaleLinear().domain([minValue, maxValue]).range([startAngle, endAngle]);\n      return React__default.createElement(CloneElement, {\n        element: series,\n        scale: scale,\n        data: data,\n        startAngle: startAngle,\n        endAngle: endAngle,\n        width: chartWidth,\n        height: chartHeight\n      });\n    }\n\n    render() {\n      const {\n        id,\n        width,\n        height,\n        margins,\n        className\n      } = this.props;\n      return React__default.createElement(ChartContainer, {\n        id: id,\n        width: width,\n        height: height,\n        margins: margins,\n        xAxisVisible: false,\n        yAxisVisible: false,\n        className: className\n      }, this.renderChart.bind(this));\n    }\n\n  }\n\n  RadialGauge.defaultProps = {\n    minValue: 0,\n    maxValue: 100,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    series: React__default.createElement(RadialGaugeSeries, null)\n  };\n  var css$U = \".HeatmapCell-module_cell__1SlIg {\\n  transition: stroke 150ms ease-in-out; }\\n\";\n  var css$V = {\n    \"cell\": \"HeatmapCell-module_cell__1SlIg\"\n  };\n  styleInject(css$U); // Set padding modifier for the tooltips\n\n  const modifiers$1 = {\n    offset: {\n      offset: '0, 3px'\n    }\n  };\n\n  class HeatmapCell extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {};\n      this.rect = React.createRef();\n    }\n\n    onMouseEnter(event) {\n      this.setState({\n        active: true\n      });\n      const {\n        onMouseEnter,\n        data\n      } = this.props;\n      onMouseEnter({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    onMouseLeave(event) {\n      this.setState({\n        active: false\n      });\n      const {\n        onMouseLeave,\n        data\n      } = this.props;\n      onMouseLeave({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    onMouseClick(event) {\n      const {\n        onClick,\n        data\n      } = this.props;\n      onClick({\n        value: data,\n        nativeEvent: event\n      });\n    }\n\n    getTooltipData() {\n      const {\n        data\n      } = this.props;\n      return {\n        y: data.value,\n        x: `${data.key} ∙ ${data.x}`,\n        data\n      };\n    }\n\n    getTransition() {\n      const {\n        animated,\n        cellIndex,\n        cellCount\n      } = this.props;\n\n      if (animated) {\n        return Object.assign(Object.assign({}, DEFAULT_TRANSITION), {\n          delay: cellIndex / cellCount * 0.005\n        });\n      } else {\n        return {\n          type: false,\n          delay: 0\n        };\n      }\n    }\n\n    render() {\n      const _a = this.props,\n            {\n        tooltip,\n        onMouseEnter,\n        onMouseLeave,\n        onClick,\n        cellIndex,\n        data,\n        cursor,\n        fill,\n        x,\n        y\n      } = _a,\n            rest = __rest(_a, [\"tooltip\", \"onMouseEnter\", \"onMouseLeave\", \"onClick\", \"cellIndex\", \"data\", \"cursor\", \"fill\", \"x\", \"y\"]);\n\n      const {\n        active\n      } = this.state;\n      const extras = constructFunctionProps(this.props, data);\n      const isTransparent = fill === 'transparent';\n      const stroke = active && !isTransparent ? chroma(fill).brighten(1) : fill;\n      const transition = this.getTransition();\n      return React__default.createElement(React.Fragment, null, React__default.createElement(framerMotion.motion.g, {\n        ref: this.rect,\n        x: x,\n        y: y\n      }, React__default.createElement(framerMotion.motion.rect, Object.assign({}, rest, {\n        fill: fill,\n        stroke: stroke,\n        style: Object.assign(Object.assign({}, extras.style), {\n          cursor\n        }),\n        className: classNames(css$V.cell, extras.className),\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        transition: transition,\n        onMouseEnter: bind(this.onMouseEnter, this),\n        onMouseLeave: bind(this.onMouseLeave, this),\n        onClick: bind(this.onMouseClick, this)\n      }))), tooltip && !tooltip.props.disabled && !isTransparent && React__default.createElement(CloneElement, {\n        element: tooltip,\n        visible: !!active,\n        modifiers: tooltip.props.modifiers || modifiers$1,\n        reference: this.rect,\n        value: this.getTooltipData()\n      }));\n    }\n\n  }\n\n  HeatmapCell.defaultProps = {\n    rx: 2,\n    ry: 2,\n    cursor: 'auto',\n    tooltip: React__default.createElement(ChartTooltip, null),\n    onClick: () => undefined,\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined\n  };\n\n  class HeatmapSeries extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.getValueScale = memoize((data, colorScheme, emptyColor) => {\n        const valueDomain = d3Array.extent(uniqueBy(data, d => d.data, d => d.value));\n        return point => {\n          // For 0 values, lets show a placeholder fill\n          if (point === undefined || point === null) {\n            return emptyColor;\n          }\n\n          return getColor({\n            scale: d3Scale.scaleQuantile,\n            domain: valueDomain,\n            key: point,\n            colorScheme\n          });\n        };\n      });\n    }\n\n    renderCell({\n      row,\n      cell,\n      rowIndex,\n      cellIndex,\n      valueScale,\n      width,\n      height,\n      cellCount\n    }) {\n      const {\n        xScale,\n        yScale,\n        id,\n        animated,\n        cell: cellElement\n      } = this.props;\n      const x = xScale(row.key);\n      const y = yScale(cell.x);\n      const fill = valueScale(cell.value);\n      return React__default.createElement(CloneElement, {\n        key: `${id}-${rowIndex}-${cellIndex}`,\n        element: cellElement,\n        animated: animated,\n        cellIndex: rowIndex + cellIndex,\n        cellCount: cellCount,\n        x: x,\n        y: y,\n        fill: fill,\n        width: width,\n        height: height,\n        data: cell\n      });\n    }\n\n    render() {\n      const {\n        xScale,\n        yScale,\n        data,\n        colorScheme,\n        emptyColor\n      } = this.props;\n      const valueScale = this.getValueScale(data, colorScheme, emptyColor);\n      const height = yScale.bandwidth();\n      const width = xScale.bandwidth();\n      const cellCount = d3Array.sum([...yScale.domain(), ...xScale.domain()]);\n      return React__default.createElement(React.Fragment, null, data.map((row, rowIndex) => row.data.map((cell, cellIndex) => this.renderCell({\n        height,\n        width,\n        valueScale,\n        cellCount,\n        row,\n        cell,\n        rowIndex,\n        cellIndex\n      }))));\n    }\n\n  }\n\n  HeatmapSeries.defaultProps = {\n    padding: 0.1,\n    animated: true,\n    emptyColor: 'rgba(200,200,200,0.08)',\n    colorScheme: ['rgba(28, 107, 86, 0.5)', '#2da283'],\n    cell: React__default.createElement(HeatmapCell, null)\n  };\n\n  class Heatmap extends React.Component {\n    getScalesData(chartHeight, chartWidth) {\n      const {\n        xAxis,\n        yAxis,\n        series,\n        data: prevData\n      } = this.props;\n      const data = buildNestedChartData(prevData);\n      const xDomain = xAxis.props.domain || uniqueBy(data, d => d.key);\n      const xScale = d3Scale.scaleBand().range([0, chartWidth]).domain(xDomain).paddingInner(series.props.padding);\n      const yDomain = yAxis.props.domain || uniqueBy(data, d => d.data, d => d.x);\n      const yScale = d3Scale.scaleBand().domain(yDomain).range([chartHeight, 0]).paddingInner(series.props.padding);\n      return {\n        yScale,\n        xScale,\n        data\n      };\n    }\n\n    renderChart(containerProps) {\n      const {\n        chartWidth,\n        chartHeight,\n        updateAxes,\n        id\n      } = containerProps;\n      const {\n        yAxis,\n        xAxis,\n        series,\n        secondaryAxis\n      } = this.props;\n      const {\n        xScale,\n        yScale,\n        data\n      } = this.getScalesData(chartHeight, chartWidth);\n      return React__default.createElement(React.Fragment, null, React__default.createElement(CloneElement, {\n        element: xAxis,\n        height: chartHeight,\n        width: chartWidth,\n        scale: xScale,\n        onDimensionsChange: bind(updateAxes, this, 'horizontal')\n      }), React__default.createElement(CloneElement, {\n        element: yAxis,\n        height: chartHeight,\n        width: chartWidth,\n        scale: yScale,\n        onDimensionsChange: bind(updateAxes, this, 'vertical')\n      }), secondaryAxis && secondaryAxis.map((axis, i) => React__default.createElement(CloneElement, {\n        key: i,\n        element: axis,\n        height: chartHeight,\n        width: chartWidth,\n        onDimensionsChange: bind(updateAxes, this, 'horizontal')\n      })), React__default.createElement(CloneElement, {\n        element: series,\n        id: `heat-series-${id}`,\n        data: data,\n        xScale: xScale,\n        yScale: yScale\n      }));\n    }\n\n    render() {\n      const {\n        id,\n        width,\n        height,\n        margins,\n        className,\n        xAxis,\n        yAxis\n      } = this.props;\n      return React__default.createElement(ChartContainer, {\n        id: id,\n        width: width,\n        height: height,\n        margins: margins,\n        xAxisVisible: isAxisVisible(xAxis.props),\n        yAxisVisible: isAxisVisible(yAxis.props),\n        className: classNames(className)\n      }, props => this.renderChart(props));\n    }\n\n  }\n\n  Heatmap.defaultProps = {\n    data: [],\n    margins: 10,\n    series: React__default.createElement(HeatmapSeries, null),\n    yAxis: React__default.createElement(LinearYAxis, {\n      type: \"category\",\n      axisLine: null,\n      tickSeries: React__default.createElement(LinearYAxisTickSeries, {\n        line: null,\n        label: React__default.createElement(LinearYAxisTickLabel, {\n          padding: 5\n        })\n      })\n    }),\n    xAxis: React__default.createElement(LinearXAxis, {\n      type: \"category\",\n      axisLine: null,\n      tickSeries: React__default.createElement(LinearXAxisTickSeries, {\n        line: null,\n        label: React__default.createElement(LinearXAxisTickLabel, {\n          padding: 5\n        })\n      })\n    })\n  };\n\n  const getFirstOfMonth = date => new Date(date.getFullYear(), date.getMonth(), 1);\n\n  const addWeeksToDate = (date, weeks) => {\n    let d = new Date(date.getTime());\n    d.setDate(d.getDate() + weeks * 7);\n    return d;\n  };\n\n  const getStartOfDay = date => {\n    const d = new Date(date.getTime());\n    d.setHours(0, 0, 0, 0);\n    return d;\n  };\n\n  const getNewDayFromDay = (date, num) => {\n    const d = new Date(date.getTime());\n    d.setDate(d.getDate() + num);\n    return d;\n  };\n\n  const weekDays = (() => {\n    const base = new Date(Date.UTC(2017, 0, 2));\n    return d3Array.range(7).map(() => {\n      const name = base.toLocaleDateString('default', {\n        weekday: 'short'\n      });\n      base.setDate(base.getDate() + 1);\n      return name;\n    });\n  })();\n\n  const buildDataScales = (rawData, view) => {\n    // Get the most recent date to get the range from\n    // From the end date, lets find the start year/month of that\n    // From that start year/month, lets find the end year/month for our bounds\n    const startDate = d3Array.min(rawData, d => d.key);\n    const start = getFirstOfMonth(startDate);\n    const endDomain = view === 'year' ? 53 : 5;\n    const end = addWeeksToDate(start, endDomain); // Base on the view type, swap out some ranges\n\n    const xDomainRange = view === 'year' ? 53 : 5; // Build our x/y domains for days of week + number of weeks in year\n\n    const yDomain = d3Array.range(7).reverse();\n    const xDomain = d3Array.range(xDomainRange); // Filter out dates that are not in the start/end ranges\n    // and turn them into something our chart can read\n\n    const dates = rawData.filter(d => d.key.getTime() > start.getTime() || d.key.getTime() < end.getTime()).map(d => ({\n      key: getStartOfDay(d.key),\n      data: d.data\n    })); // Find the first day of the duration and subtract the delta\n\n    const firstDayOfStart = start.getDay();\n    const curDate = getNewDayFromDay(start, -firstDayOfStart);\n    const rows = []; // Build out the dataset for the n duration\n\n    for (let week = 0; week < xDomainRange; week++) {\n      const row = {\n        key: week,\n        data: []\n      };\n\n      for (let day = 0; day <= 6; day++) {\n        const dayValue = dates.find(d => d.key.getTime() === curDate.getTime());\n        row.data.push({\n          key: day,\n          data: dayValue ? dayValue.data : undefined,\n          metadata: {\n            date: new Date(curDate.getTime()),\n            start: start,\n            end: end\n          }\n        });\n        curDate.setDate(curDate.getDate() + 1);\n      }\n\n      rows.push(row);\n    }\n\n    return {\n      data: rows,\n      yDomain,\n      xDomain,\n      start\n    };\n  };\n\n  class CalendarHeatmap extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.getDataDomains = memoize((rawData, view) => buildDataScales(rawData, view));\n    }\n\n    render() {\n      const _a = this.props,\n            {\n        data: rawData,\n        view\n      } = _a,\n            rest = __rest(_a, [\"data\", \"view\"]);\n\n      const {\n        data,\n        yDomain,\n        xDomain,\n        start\n      } = this.getDataDomains(rawData, view); // For month, only pass 1 tick value\n\n      const xTickValues = view === 'year' ? undefined : [1]; // Get the yAxis label formatting based on view type\n\n      const yAxisLabelFormat = view === 'year' ? d => weekDays[d] : () => null; // Format the xAxis label for the start + n week\n\n      const xAxisLabelFormat = d => addWeeksToDate(start, d).toLocaleString('default', {\n        month: 'long'\n      });\n\n      return React__default.createElement(Heatmap, Object.assign({}, rest, {\n        data: data,\n        yAxis: React__default.createElement(LinearYAxis, {\n          type: \"category\",\n          axisLine: null,\n          domain: yDomain,\n          tickSeries: React__default.createElement(LinearYAxisTickSeries, {\n            tickSize: 20,\n            line: null,\n            label: React__default.createElement(LinearYAxisTickLabel, {\n              padding: 5,\n              format: yAxisLabelFormat\n            })\n          })\n        }),\n        xAxis: React__default.createElement(LinearXAxis, {\n          type: \"category\",\n          axisLine: null,\n          domain: xDomain,\n          tickSeries: React__default.createElement(LinearXAxisTickSeries, {\n            line: null,\n            tickValues: xTickValues,\n            label: React__default.createElement(LinearXAxisTickLabel, {\n              padding: 5,\n              align: \"end\",\n              format: xAxisLabelFormat\n            })\n          })\n        })\n      }));\n    }\n\n  }\n\n  CalendarHeatmap.defaultProps = {\n    view: 'year',\n    series: React__default.createElement(HeatmapSeries, {\n      padding: 0.3,\n      emptyColor: 'transparent',\n      cell: React__default.createElement(HeatmapCell, {\n        tooltip: React__default.createElement(ChartTooltip, {\n          content: d => `${formatValue(d.data.metadata.date)} ∙ ${formatValue(d.data.value)}`\n        })\n      })\n    })\n  };\n\n  const LinearGaugeBar = props => React__default.createElement(Bar, Object.assign({}, props, {\n    rounded: false,\n    tooltip: React__default.createElement(ChartTooltip, {\n      placement: \"top\",\n      content: data => React__default.createElement(TooltipTemplate, {\n        value: {\n          y: data.value,\n          x: data.y\n        }\n      })\n    })\n  }));\n\n  const LinearGaugeOuterBar = _a => {\n    var {\n      height,\n      width,\n      fill\n    } = _a,\n        rest = __rest(_a, [\"height\", \"width\", \"fill\"]);\n\n    return React__default.createElement(\"rect\", Object.assign({}, rest, {\n      fill: fill || '#484848',\n      width: Math.max(width, 0),\n      height: Math.max(height, 0)\n    }));\n  };\n\n  const defaultProps = {\n    outerBar: React__default.createElement(LinearGaugeOuterBar, null),\n    bar: React__default.createElement(LinearGaugeBar, null)\n  };\n\n  const LinearGaugeSeries = _a => {\n    var {\n      height,\n      width,\n      bar,\n      outerBar,\n      isMultiSeries\n    } = _a,\n        rest = __rest(_a, [\"height\", \"width\", \"bar\", \"outerBar\", \"isMultiSeries\"]);\n\n    return React__default.createElement(React.Fragment, null, !isMultiSeries && React__default.createElement(CloneElement, {\n      element: outerBar || defaultProps.outerBar,\n      height: height,\n      width: width\n    }), React__default.createElement(BarSeries, Object.assign({}, rest, {\n      layout: \"horizontal\",\n      tooltip: null,\n      bar: React__default.createElement(CloneElement, {\n        element: bar || defaultProps.bar\n      })\n    })));\n  };\n\n  class LinearGauge extends React.Component {\n    getData(data) {\n      if (Array.isArray(data)) {\n        return buildBarStackData([{\n          key: 'default',\n          data\n        }], 'expand', 'horizontal');\n      } else {\n        return buildShallowChartData([data], 'horizontal');\n      }\n    }\n\n    getScales(isMultiSeries, data, width, height, minValue, maxValue) {\n      const domain = !isMultiSeries ? [minValue, maxValue] : undefined;\n      const keyScale = getXScale({\n        width,\n        type: 'value',\n        data,\n        domain,\n        isMultiSeries\n      });\n      const valueScale = getYScale({\n        type: 'category',\n        height,\n        data,\n        isMultiSeries\n      });\n      return {\n        keyScale,\n        valueScale\n      };\n    }\n\n    renderChart({\n      chartHeight,\n      chartWidth,\n      id,\n      chartSized\n    }) {\n      const {\n        series,\n        data,\n        minValue,\n        maxValue\n      } = this.props;\n      const isMultiSeries = Array.isArray(data);\n      const type = isMultiSeries ? 'stackedNormalized' : 'standard';\n      const transformedData = this.getData(data);\n      const {\n        keyScale,\n        valueScale\n      } = this.getScales(isMultiSeries, transformedData, chartWidth, chartHeight, minValue, maxValue);\n      return React__default.createElement(React.Fragment, null, chartSized && React__default.createElement(CloneElement, {\n        element: series,\n        id: `linear-gauge-series-${id}`,\n        data: transformedData,\n        isCategorical: true,\n        xScale: keyScale,\n        yScale: valueScale,\n        type: type,\n        height: chartHeight,\n        width: chartWidth,\n        isMultiSeries: isMultiSeries\n      }));\n    }\n\n    render() {\n      const {\n        id,\n        width,\n        height,\n        margins,\n        className\n      } = this.props;\n      return React__default.createElement(ChartContainer, {\n        id: id,\n        width: width,\n        height: height,\n        margins: margins,\n        className: className\n      }, props => this.renderChart(props));\n    }\n\n  }\n\n  LinearGauge.defaultProps = {\n    minValue: 0,\n    maxValue: 100,\n    series: React__default.createElement(LinearGaugeSeries, null)\n  };\n  exports.Area = Area;\n  exports.AreaChart = AreaChart;\n  exports.AreaSeries = AreaSeries;\n  exports.AreaSparklineChart = AreaSparklineChart;\n  exports.Bar = Bar;\n  exports.BarChart = BarChart;\n  exports.BarLabel = BarLabel;\n  exports.BarSeries = BarSeries;\n  exports.BarSparklineChart = BarSparklineChart;\n  exports.Brush = Brush;\n  exports.BrushSlice = BrushSlice;\n  exports.CalendarHeatmap = CalendarHeatmap;\n  exports.ChartBrush = ChartBrush;\n  exports.ChartContainer = ChartContainer;\n  exports.ChartTooltip = ChartTooltip;\n  exports.ChartZoomPan = ChartZoomPan;\n  exports.CloneElement = CloneElement;\n  exports.DEFAULT_TRANSITION = DEFAULT_TRANSITION;\n  exports.DiscreteLegend = DiscreteLegend;\n  exports.DiscreteLegendEntry = DiscreteLegendEntry;\n  exports.DiscreteLegendSymbol = DiscreteLegendSymbol;\n  exports.Gradient = Gradient;\n  exports.GradientStop = GradientStop;\n  exports.GridStripe = GridStripe;\n  exports.Gridline = Gridline;\n  exports.GridlineSeries = GridlineSeries;\n  exports.GuideBar = GuideBar;\n  exports.Heatmap = Heatmap;\n  exports.HeatmapCell = HeatmapCell;\n  exports.HeatmapSeries = HeatmapSeries;\n  exports.HistogramBarChart = HistogramBarChart;\n  exports.HistogramBarSeries = HistogramBarSeries;\n  exports.HivePlot = HivePlot;\n  exports.Line = Line;\n  exports.LineChart = LineChart;\n  exports.LineSeries = LineSeries;\n  exports.LinearAxis = LinearAxis;\n  exports.LinearAxisLine = LinearAxisLine;\n  exports.LinearAxisTickLabel = LinearAxisTickLabel;\n  exports.LinearAxisTickLine = LinearAxisTickLine;\n  exports.LinearAxisTickSeries = LinearAxisTickSeries;\n  exports.LinearGauge = LinearGauge;\n  exports.LinearGaugeBar = LinearGaugeBar;\n  exports.LinearGaugeOuterBar = LinearGaugeOuterBar;\n  exports.LinearGaugeSeries = LinearGaugeSeries;\n  exports.LinearXAxis = LinearXAxis;\n  exports.LinearXAxisTickLabel = LinearXAxisTickLabel;\n  exports.LinearXAxisTickLine = LinearXAxisTickLine;\n  exports.LinearXAxisTickSeries = LinearXAxisTickSeries;\n  exports.LinearYAxis = LinearYAxis;\n  exports.LinearYAxisTickLabel = LinearYAxisTickLabel;\n  exports.LinearYAxisTickLine = LinearYAxisTickLine;\n  exports.LinearYAxisTickSeries = LinearYAxisTickSeries;\n  exports.Map = Map$1;\n  exports.MapMarker = MapMarker;\n  exports.MarimekkoBarSeries = MarimekkoBarSeries;\n  exports.MarimekkoChart = MarimekkoChart;\n  exports.MarkLine = MarkLine;\n  exports.Mask = Mask;\n  exports.MotionPath = MotionPath;\n  exports.Move = Move;\n  exports.Pan = Pan;\n  exports.PieArc = PieArc;\n  exports.PieArcLabel = PieArcLabel;\n  exports.PieArcSeries = PieArcSeries;\n  exports.PieChart = PieChart;\n  exports.PointSeries = PointSeries;\n  exports.RadialArea = RadialArea;\n  exports.RadialAreaChart = RadialAreaChart;\n  exports.RadialAreaSeries = RadialAreaSeries;\n  exports.RadialAxis = RadialAxis;\n  exports.RadialAxisArc = RadialAxisArc;\n  exports.RadialAxisArcSeries = RadialAxisArcSeries;\n  exports.RadialAxisTick = RadialAxisTick;\n  exports.RadialAxisTickLabel = RadialAxisTickLabel;\n  exports.RadialAxisTickLine = RadialAxisTickLine;\n  exports.RadialAxisTickSeries = RadialAxisTickSeries;\n  exports.RadialBar = RadialBar;\n  exports.RadialBarChart = RadialBarChart;\n  exports.RadialBarSeries = RadialBarSeries;\n  exports.RadialGauge = RadialGauge;\n  exports.RadialGaugeArc = RadialGaugeArc;\n  exports.RadialGaugeLabel = RadialGaugeLabel;\n  exports.RadialGaugeSeries = RadialGaugeSeries;\n  exports.RadialGaugeValueLabel = RadialGaugeValueLabel;\n  exports.RadialGradient = RadialGradient;\n  exports.RadialGuideBar = RadialGuideBar;\n  exports.RadialLine = RadialLine;\n  exports.RadialPointSeries = RadialPointSeries;\n  exports.RadialScatterPlot = RadialScatterPlot;\n  exports.RadialScatterPoint = RadialScatterPoint;\n  exports.RadialScatterSeries = RadialScatterSeries;\n  exports.RangeLines = RangeLines;\n  exports.Sankey = Sankey;\n  exports.SankeyLabel = SankeyLabel;\n  exports.SankeyLink = SankeyLink;\n  exports.SankeyNode = SankeyNode;\n  exports.ScatterPlot = ScatterPlot;\n  exports.ScatterPoint = ScatterPoint;\n  exports.ScatterSeries = ScatterSeries;\n  exports.SequentialLegend = SequentialLegend;\n  exports.SonarChart = SonarChart;\n  exports.SparklineChart = SparklineChart;\n  exports.StackedAreaChart = StackedAreaChart;\n  exports.StackedAreaSeries = StackedAreaSeries;\n  exports.StackedBarChart = StackedBarChart;\n  exports.StackedBarSeries = StackedBarSeries;\n  exports.StackedNormalizedAreaChart = StackedNormalizedAreaChart;\n  exports.StackedNormalizedAreaSeries = StackedNormalizedAreaSeries;\n  exports.StackedNormalizedBarChart = StackedNormalizedBarChart;\n  exports.StackedNormalizedBarSeries = StackedNormalizedBarSeries;\n  exports.Stripes = Stripes;\n  exports.TooltipArea = TooltipArea;\n  exports.TooltipTemplate = TooltipTemplate;\n  exports.Zoom = Zoom;\n  exports.ZoomPan = ZoomPan;\n  exports.addWeeksToDate = addWeeksToDate;\n  exports.bigIntegerToLocaleString = bigIntegerToLocaleString;\n  exports.buildBarStackData = buildBarStackData;\n  exports.buildBins = buildBins;\n  exports.buildDataScales = buildDataScales;\n  exports.buildMarimekkoData = buildMarimekkoData;\n  exports.buildNestedChartData = buildNestedChartData;\n  exports.buildShallowChartData = buildShallowChartData;\n  exports.buildStackData = buildStackData;\n  exports.buildWaterfall = buildWaterfall;\n  exports.calculateDimensions = calculateDimensions;\n  exports.calculateShowStroke = calculateShowStroke;\n  exports.constrainMatrix = constrainMatrix;\n  exports.constructFunctionProps = constructFunctionProps;\n  exports.extent = extent;\n  exports.formatValue = formatValue;\n  exports.functionProps = functionProps;\n  exports.getClosestPoint = getClosestPoint;\n  exports.getColor = getColor;\n  exports.getDegrees = getDegrees;\n  exports.getDimension = getDimension;\n  exports.getDurationTicks = getDurationTicks;\n  exports.getLimitMatrix = getLimitMatrix;\n  exports.getMaxBigIntegerForNested = getMaxBigIntegerForNested;\n  exports.getMaxBigIntegerForShallow = getMaxBigIntegerForShallow;\n  exports.getMaxTicks = getMaxTicks;\n  exports.getParentSVG = getParentSVG;\n  exports.getPointFromMatrix = getPointFromMatrix;\n  exports.getPositionForTarget = getPositionForTarget;\n  exports.getTicks = getTicks;\n  exports.getXDomain = getXDomain;\n  exports.getYDomain = getYDomain;\n  exports.humanFormatBigInteger = humanFormatBigInteger;\n  exports.interpolate = interpolate;\n  exports.isAxisVisible = isAxisVisible;\n  exports.isZoomLevelGoingOutOfBounds = isZoomLevelGoingOutOfBounds;\n  exports.normalizeValue = normalizeValue;\n  exports.normalizeValueForFormatting = normalizeValueForFormatting;\n  exports.reduceTicks = reduceTicks;\n  exports.schemes = schemes;\n  exports.toggleTextSelection = toggleTextSelection;\n  exports.uniqueBy = uniqueBy;\n  exports.weekDays = weekDays;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/Users/ranjanbiswas/Documents/projects/VacZones/vaczones/node_modules/reaviz/dist/index.js"],"names":["global","factory","exports","module","require","define","amd","self","reaviz","React","classNames","ellipsize","d3Array","calculateSize","humanFormat","d3Shape","transformationMatrix","d3Scale","bind","useDimensions","rdk","bigInt","chroma","realayers","memoize","isEqual","framerMotion","d3Interpolate","d3Geo","d3Sankey","CountUp","React__default","Object","prototype","hasOwnProperty","call","LinearAxisTickLabel","Component","getAlign","align","half","props","getTickLineSpacing","line","size","position","getOffset","padding","rotation","orientation","adjustedPadding","fromAxis","alongAxis","spacing","offset1","offset2","horz","getTextPosition","angle","transform","textAnchor","alignmentBaseline","render","fill","text","fullText","fontSize","fontFamily","className","x","y","textPosition","createElement","assign","defaultProps","LinearAxisTickLine","PureComponent","positionTick","isVertical","tickSize","start","end","x1","x2","y1","y2","strokeColor","strokeWidth","path","stroke","getNavigatorLanguage","window","navigator","languages","length","userLanguage","language","browserLanguage","locale","options","year","month","day","hour12","formatMatcher","formatValue","value","undefined","Date","toLocaleDateString","toLocaleString","ONE_DAY","DURATION_TICK_STEPS","reduceTicks","ticks","maxTicks","reduced","modulus","Math","floor","i","push","getMaxTicks","dimension","tickWidth","max","getDurationTicks","domain","domainWidth","tickStep","s","numDayTicks","dayStep","ceil","getTicks","scale","tickValues","type","interval","result","__rest","e","t","p","indexOf","getOwnPropertySymbols","propertyIsEnumerable","CloneElement","_a","children","element","childRef","rest","getProjectedProps","useMemo","childProps","keys","reduce","acc","key","prop","childProp","args","ref","node","current","newProps","cloneElement","calculateDimensions","document","width","height","font","LinearAxisTickSeries","getAdjustedScale","bandwidth","offset","round","d","getPosition","scaledTick","getDimension","getRotationAngle","label","maxTicksLength","tick","baseWidth","maxBaseWidth","cos","PI","getLabelFormat","format","tickFormat","apply","v","axis","adjustedScale","midpoint","map","toString","Fragment","humanFormatScale","Scale","k","M","B","humanFormatMillionScale","T","ONE_MILLION","ONE_BILLION","humanFormatBigInteger","bigInteger","greater","divide","toJSNumber","bigIntegerToLocaleString","formattedString","c","split","reverse","parseMargins","margins","top","right","bottom","left","Array","isArray","calculateMarginOffsets","newHeight","newWidth","xOffset","yOffset","parsedMargins","marginDims","chartWidth","chartHeight","xMargin","yMargin","extent","data","attr","accessor","val","fn","vv","minVal","min","maxVal","getYDomain","scaled","isDiverging","startY","endY","startY1","endY1","posStart","maxNum","getXDomain","startX0","endX1","interpolate","curveMonotoneX","curveStep","curveLinear","scaleBandInvert","paddingOuter","eachBand","step","range","index","getClosestPoint","pos","invert","bisect","bisector","minIndex","before","maxIndex","after","beforeVal","afterVal","mariemkoInvert","idx","getParentSVG","event","target","ownerSVGElement","getPositionForTarget","clientX","clientY","getBoundingClientRect","clientLeft","clientTop","getPointFromMatrix","matrix","parent","applyToPoint","inverse","getLimitMatrix","applyToPoints","constrainMatrix","lessThanScaleFactorMin","scaleFactor","scaleFactorMin","moreThanScaleFactorMax","scaleFactorMax","isZoomLevelGoingOutOfBounds","a","b","toggleTextSelection","allowSelection","style","forEach","body","calculateShowStroke","showLine","prev","cur","next","getDegrees","radians","functionProps","constructFunctionProps","uniqueBy","accessors","ittr","arr","depth","Error","includes","axisLineId","LinearAxisLine","constructor","arguments","state","id","strokeGradient","range0","range1","LinearAxis","createRef","componentDidMount","updateDimensions","componentDidUpdate","prevProps","onDimensionsChange","shouldOffset","dims","setState","translateY","translateX","axisLine","tickSeries","roundDomains","LinearXAxisTickLabel","LinearXAxisTickLine","LinearXAxisTickSeries","LinearXAxis","LinearYAxisTickLabel","LinearYAxisTickLine","LinearYAxisTickSeries","LinearYAxis","isAxisVisible","RadialAxisTickLine","innerRadius","outerRadius","pointerEvents","rad2deg","RadialAxisTickLabel","point","autoRotate","l","r","shouldRotate","rotate","translate","lineSize","dy","RadialAxisTick","RadialAxisTickSeries","count","RadialAxisArc","strokeDasharray","strokeDash","cx","cy","RadialAxisArcSeries","arc","scaleLinear","arcs","RadialAxis","xScale","Move","started","deltaX","deltaY","prevXPosition","prevYPosition","onMouseMove","preventDefault","stopPropagation","movementX","movementY","checkThreshold","disableText","setCursor","onMoveStart","nativeEvent","rqf","requestAnimationFrame","onMove","onMouseUp","disposeHandlers","onMoveEnd","onMoveCancel","onTouchMove","getTouchCoords","onTouchEnd","componentWillUnmount","cancelAnimationFrame","removeEventListener","shouldDisable","set","cursor","threshold","abs","touches","onMouseDown","preventRightClick","disabled","shouldCancel","which","addEventListener","onTouchStart","Children","child","styleInject","css","insertAt","head","getElementsByTagName","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","css$1","BrushHandle","isDragging","onHandleDrag","handle","dragging","dot","css$2","css$3","BrushSlice","hasNoSlice","onBrushChange","direction","sliceWidth","endSliceWidth","unsliced","slice","opacity","Brush","isSlicing","isPanning","startUpdated","endUpdated","ensurePositionInBounds","getStartEnd","getPositionsForPanEvent","initial","eventObj","newStart","newEnd","positions","onSliceChange","ChartBrush","getBrushOffset","ChartContainer","center","centerX","centerY","xAxisVisible","yAxisVisible","curId","useId","xAxisSized","setXAxisSized","useState","yAxisSized","setYAxisSized","setYOffset","setXOffset","chartSized","onUpdateAxes","useCallback","updateAxes","styleHeight","styleWidth","normalizeValue","maxBigInt","isInstance","divideBy","normalizeValueForFormatting","getMaxBigIntegerForNested","series","maxBigInteger","one","group","maxBigIntegerForGroup","getMaxBigIntegerForShallow","buildNestedChartData","sort","nestedPoint","findIndex","getTime","metadata","x0","y0","aMax","median","bMax","addToChartType","add","valueOf","buildShallowChartData","binSize","isTuple","k1","k0","v0","v1","xProp","yProp","buildBins","thresholds","layout","histogram","bins","bin","transformDataToStack","category","formattedValues","transformStackToData","stackData","categoryKey","buildBarStackData","stackFn","stack","stackOffsetExpand","stackOffsetDiverging","buildMarimekkoData","sums","totalSum","sum","transformDataToStack$1","transformStackToData$1","buildStackData","normalized","buildWaterfall","cumulative","Pan","globalPanning","classList","contains","onPanStart","pan","onPanEnd","onPanCancel","source","contrained","passive","onPanMove","constrain","newMatrix","smoothMatrix","shouldConstrain","f","getMidpoint","pointA","pointB","getDistanceBetweenPoints","sqrt","pow","getTouchPoints","touch","distance","Zoom","onMouseWheel","disableMouseWheel","requireZoomModifier","onZoomEnd","hasModifier","metaKey","ctrlKey","getStep","clearTimeout","timeout","setTimeout","firstTouch","lastDistance","distanceFactor","outside","delta","minZoom","maxZoom","onZoom","css$4","css$5","DiscreteLegend","entries","container","horizontal","vertical","entry","css$6","css$7","css$8","css$9","DiscreteLegendSymbol","color","symbol","background","DiscreteLegendEntry","onMouseEnter","onMouseLeave","title","onClick","css$a","css$b","SequentialLegend","colorScheme","colors","join","gradientDir","gradient","css$c","css$d","Gridline","getCoords","coords","gridLine","GridlineSeries","getGridlines","yScale","yAxis","xAxis","yAxisGrid","xAxisGrid","renderSeries","shouldRenderY","renderGroup","shouldRenderX","getSkipIndex","grid","skipIdx","stripe","css$e","css$f","GridStripe","stripeFill","dim","gridStripe","css$g","css$h","MarkLine","pointX","vectorEffect","markLine","GradientStop","stopOpacity","stopColor","Gradient","getDirection","stops","spreadMethod","stop","RadialGradient","radius","gradientUnits","Mask","Stripes","patternUnits","patternTransform","css$i","css$j","TooltipTemplate","renderValues","subValue","subValueColor","backgroundColor","subValueName","renderMultiple","excessCount","pagedValues","isMultiple","ChartTooltip","content","Tooltip","TooltipArea","transformData","isHorizontal","seriesPoint","shallowPoint","getXCoord","isRadial","rad","atan2","onValueEnter","placement","transformed","newPlacement","keyScale","valueScale","coord","newValue","pointY","marginX","marginY","isNaN","prevX","prevY","offsetX","offsetY","sin","visible","onValueLeave","getTooltipReference","renderRadial","startAngle","endAngle","renderLinear","tooltip","modifiers","reference","ZoomPan","zoomRef","panRef","isZooming","identity","getDerivedStateFromProps","fromDefinition","tx","ty","sx","sy","onZoomPan","pannable","zoomable","zoomStep","selection","fromObject","userSelect","getXScale","isMultiSeries","scaleTime","rangeRound","scaleBand","nice","getYScale","getMarimekkoScale","getMarimekkoGroupScale","barCount","widthMinusPadding","xMultiplier","getXRange","arg","found","getGroupScale","paddingInner","getInnerScale","groupScale","getRadialYScale","ChartZoomPan","axisType","can","newScale","copy","clamp","isZoomed","zoomOffset","endOffset","DEFAULT_TRANSITION","velocity","damping","MotionPath","custom","transition","useMotionValue","exit","prevPath","spring","useSpring","from","to","useEffect","interpolator","get","enter","unsub","onChange","_b","enterD","enterRest","_c","exitRest","motion","animate","schemes","cybertron","correctLightness","brewer","rangeHelper","attribute","getColor","active","scaleOrdinal","maxIdx","css$k","css$l","ScatterPoint","animated","rectRef","useRef","tooltipVisible","setTooltipVisible","extras","renderedSymbol","transitionProps","delay","enterProps","exitProps","yStartDomain","inactive","g","circle","PADDING","HALF_PADDING","ScatterSeries","activeIds","renderPoint","pointData","pointId","clipPath","css$m","css$n","ScatterPlot","getData","zoom","zoomPan","zoomControlled","zoomDomain","getScales","preventAnimation","renderChart","containerProps","gridlines","brush","secondaryAxis","scatterPlot","css$o","css$p","PointSeries","isVisible","show","activeValues","isActive","Area","getAreaPath","interpolation","area","curve","item","getAreaEnter","areaPath","getAreaExit","maxY","getFill","mask","getTransition","renderArea","maskPath","Line","ghostPathRef","pathLength","getTotalLength","getLinePath","showZeroStroke","defined","getLineEnter","hasArea","linePath","strokeDashoffset","getLineExit","PADDING$1","HALF_PADDING$1","AreaSeries","activePoint","renderSymbols","symbols","activeSymbols","isAnimated","renderMarkLine","renderSingleSeries","renderMultiSeries","isMulti","StackedNormalizedAreaSeries","StackedAreaSeries","css$q","css$r","AreaChart","seriesType","areaChart","StackedAreaChart","StackedNormalizedAreaChart","css$s","css$t","Bar","rect","getExit","getIsVertical","newX","newY","getKeyCoords","sizeOverride","isCategorical","calc","calculateLinearScalePadding","c0","c1","getValueCoords","minSize","minHeight","xScale1","xCoords","yCoords","groupIndex","totalSize","sizeMinusPadding","multiplier","onMouseClick","getTooltipData","xAttr","matches","renderBar","currentColorShade","rounded","rx","ry","initialExit","attrX","attrY","renderGuideBar","barIndex","guide","console","error","attrStart","endPoint","startPoint","activeBrightness","rangeLines","brighten","hex","rangeLineColor","rangeLineColorShade","tooltipData","barLabel","BarSeries","getIsMulti","getTransform","xPos","yPos","bar","barElements","renderBarGroup","barData","groupData","groupPadding","followCursor","RangeLines","getEnter","rangeLineHeight","isTop","minX","getLineHeight","getHeightWidth","getDelay","StackedBarSeries","StackedNormalizedBarSeries","MarimekkoBarSeries","BarLabel","HistogramBarSeries","GuideBar","other","variants","hidden","css$u","css$v","BarChart","getScalesAndData","isMarimekko","isGrouped","isStacked","distroType","getMultiGroupScales","getMarimekkoGroupScales","getKeyScale","getValueScale","getKeyAxis","getIsDiverging","keyAxis","barChart","MarimekkoChart","StackedBarChart","StackedNormalizedBarChart","HistogramBarChart","css$w","css$x","HiveNode","onMouseOver","onMouseOut","css$y","css$z","HiveAxis","axisStart","axisEnd","axisLength","hiveLayout","startRadius","endRadius","arcOffset","link","a1","a2","r0","r1","method","thiz","n","css$A","css$B","HiveLink","prepareData","hive","css$C","css$D","degrees","res","HiveLabel","css$E","css$F","HiveTooltip","nodes","filter","HivePlot","onNodeMouseOver","links","activeNodeIndex","activeNodes","tooltipReference","nodeTooltipData","accumulator","getLinksForNode","onLinkMouseOver","linkTooltipData","activateLink","activeLinkIndex","activeLinksMap","activeLinks","activateAdjacentLinks","activeLink","childLink","onNodeMouseOut","resetActive","onLinkMouseOut","onNodeClick","scalePoint","axisColor","domainColor","renderAxis","nodeOrLink","renderLinks","renderNodes","renderTooltip","formatter","LineSeries","LineChart","Map$1","markers","getProjection","geoMercator","fitSize","renderMarker","marker","projection","coordinates","warn","renderCountry","geoPath","features","css$G","css$H","MapMarker","setActive","PieArc","innerArc","arcRef","prevEnter","previousEnter","getTextAnchor","PieArcLabel","centroid","lineStroke","fontFill","posX","posY","innerLinePos","outerPos","duration","shapeRendering","points","factor","midAngle","labelVisible","PieArcSeries","calculateRadius","doughnut","arcWidth","shouldDisplayLabel","arcData","displayAllLabels","calculateLabelPositions","outerArc","minDistance","aPosX","aPosY","j","bPosX","bPosY","o","sign","newOuter","calculateOuterRadius","explode","PieChart","pieLayout","pie","JUSTIFICATION","justify","sankeyJustify","sankeyCenter","sankeyLeft","sankeyRight","Sankey","getNodeColor","onNodeActive","sourceLinks","sourceLink","sourceLinkTarget","targetLinks","targetLink","targetLinkSource","onLinkActive","onInactive","renderNode","computedNode","some","nodeMap","Map","aX0","aY0","bX0","bY0","renderLink","computedLink","chartId","justification","nodeWidth","nodePadding","nodesCopy","linksCopy","sankeyChart","sankey","nodeAlign","nodeId","css$I","css$J","SankeyLabel","nodePositions","showRightSide","location","DEFAULT_COLOR","css$K","css$L","SankeyLink","sankeyLinkHorizontal","getLink","getStroke","hovered","strokeOpacity","renderTooltipContent","tooltipLabel","tooltipValue","linkSource","linkTarget","css$M","css$N","SankeyNode","getNode","nodeHeight","fillOpacity","showLabel","SparklineChart","AreaSparklineChart","BarSparklineChart","SonarChart","RadialArea","getPath","curveCardinalClosed","curveLinearClosed","radialFn","radialArea","dd","_","yStart","RadialLine","preData","radialLine","css$O","css$P","RadialScatterPoint","getTranslate","parseFloat","sizeVal","exitTransform","RadialScatterSeries","dataId","RadialScatterPlot","yDomain","xDomain","RadialPointSeries","RadialAreaSeries","renderLine","RadialAreaChart","pi","tau","epsilon","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","arcTo","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","tan","acos","t01","t21","a0","ccw","dx","cw","da","w","h","MotionBar","RadialGuideBar","RadialBar","getArc","curved","arcFn","padAngle","padRadius","innerAngleDistance","arcLength","outerAngleDistance","halfAngleDistanceDelta","pathFn","yEnd","guidePath","RadialBarSeries","RadialBarChart","RadialGaugeArc","getPaths","newInnerRad","newOuterRad","css$Q","css$R","RadialGaugeLabel","valueLabel","css$S","css$T","RadialGaugeValueLabel","separator","countUpRef","RadialGaugeSeries","getWidths","minGaugeWidth","rows","columns","renderGauge","dataEndAngle","baselineLabelHeight","labelOffset","RadialGauge","minValue","maxValue","css$U","css$V","modifiers$1","HeatmapCell","cellIndex","cellCount","isTransparent","cell","HeatmapSeries","emptyColor","valueDomain","scaleQuantile","renderCell","row","rowIndex","cellElement","Heatmap","getScalesData","prevData","getFirstOfMonth","date","getFullYear","getMonth","addWeeksToDate","weeks","setDate","getDate","getStartOfDay","setHours","getNewDayFromDay","num","weekDays","base","UTC","name","weekday","buildDataScales","rawData","view","startDate","endDomain","xDomainRange","dates","firstDayOfStart","getDay","curDate","week","dayValue","find","CalendarHeatmap","getDataDomains","xTickValues","yAxisLabelFormat","xAxisLabelFormat","LinearGaugeBar","LinearGaugeOuterBar","outerBar","LinearGaugeSeries","LinearGauge","transformedData","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('classnames'), require('ellipsize'), require('d3-array'), require('calculate-size'), require('human-format'), require('d3-shape'), require('transformation-matrix'), require('d3-scale'), require('memoize-bind'), require('react-cool-dimensions'), require('rdk'), require('big-integer'), require('chroma-js'), require('realayers'), require('memoize-one'), require('react-fast-compare'), require('framer-motion'), require('d3-interpolate'), require('d3-geo'), require('d3-sankey'), require('react-countup')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'react', 'classnames', 'ellipsize', 'd3-array', 'calculate-size', 'human-format', 'd3-shape', 'transformation-matrix', 'd3-scale', 'memoize-bind', 'react-cool-dimensions', 'rdk', 'big-integer', 'chroma-js', 'realayers', 'memoize-one', 'react-fast-compare', 'framer-motion', 'd3-interpolate', 'd3-geo', 'd3-sankey', 'react-countup'], factory) :\n  (global = global || self, factory(global.reaviz = {}, global.React, global.classNames, global.ellipsize, global.d3Array, global.calculateSize, global.humanFormat, global.d3Shape, global.transformationMatrix, global.d3Scale, global.bind, global.useDimensions, global.rdk, global.bigInt, global.chroma, global.realayers, global.memoize, global.isEqual, global.framerMotion, global.d3Interpolate, global.d3Geo, global.d3Sankey, global.CountUp));\n}(this, (function (exports, React, classNames, ellipsize, d3Array, calculateSize, humanFormat, d3Shape, transformationMatrix, d3Scale, bind, useDimensions, rdk, bigInt, chroma, realayers, memoize, isEqual, framerMotion, d3Interpolate, d3Geo, d3Sankey, CountUp) { 'use strict';\n\n  var React__default = 'default' in React ? React['default'] : React;\n  classNames = classNames && Object.prototype.hasOwnProperty.call(classNames, 'default') ? classNames['default'] : classNames;\n  ellipsize = ellipsize && Object.prototype.hasOwnProperty.call(ellipsize, 'default') ? ellipsize['default'] : ellipsize;\n  calculateSize = calculateSize && Object.prototype.hasOwnProperty.call(calculateSize, 'default') ? calculateSize['default'] : calculateSize;\n  humanFormat = humanFormat && Object.prototype.hasOwnProperty.call(humanFormat, 'default') ? humanFormat['default'] : humanFormat;\n  bind = bind && Object.prototype.hasOwnProperty.call(bind, 'default') ? bind['default'] : bind;\n  useDimensions = useDimensions && Object.prototype.hasOwnProperty.call(useDimensions, 'default') ? useDimensions['default'] : useDimensions;\n  bigInt = bigInt && Object.prototype.hasOwnProperty.call(bigInt, 'default') ? bigInt['default'] : bigInt;\n  chroma = chroma && Object.prototype.hasOwnProperty.call(chroma, 'default') ? chroma['default'] : chroma;\n  memoize = memoize && Object.prototype.hasOwnProperty.call(memoize, 'default') ? memoize['default'] : memoize;\n  isEqual = isEqual && Object.prototype.hasOwnProperty.call(isEqual, 'default') ? isEqual['default'] : isEqual;\n  CountUp = CountUp && Object.prototype.hasOwnProperty.call(CountUp, 'default') ? CountUp['default'] : CountUp;\n\n  class LinearAxisTickLabel extends React.Component {\r\n      getAlign() {\r\n          const { align, half } = this.props;\r\n          if ((align === 'inside' || align === 'outside') && half === 'center') {\r\n              return 'center';\r\n          }\r\n          if (align === 'inside') {\r\n              return half === 'start' ? 'end' : 'start';\r\n          }\r\n          if (align === 'outside') {\r\n              return half === 'start' ? 'start' : 'end';\r\n          }\r\n          return align;\r\n      }\r\n      getTickLineSpacing() {\r\n          const { line } = this.props;\r\n          if (!line) {\r\n              return [0, 0];\r\n          }\r\n          const size = line.props.size;\r\n          const position = line.props.position;\r\n          if (position === 'start') {\r\n              return [size * -1, 0];\r\n          }\r\n          else if (position === 'end') {\r\n              return [0, size];\r\n          }\r\n          else {\r\n              return [size * -0.5, size * 0.5];\r\n          }\r\n      }\r\n      getOffset() {\r\n          const { padding, position, rotation, orientation } = this.props;\r\n          const adjustedPadding = typeof padding === 'number'\r\n              ? {\r\n                  fromAxis: padding,\r\n                  alongAxis: padding\r\n              }\r\n              : padding;\r\n          const spacing = this.getTickLineSpacing();\r\n          const offset1 = position === 'start'\r\n              ? spacing[0] - adjustedPadding.fromAxis\r\n              : position === 'end'\r\n                  ? spacing[1] + adjustedPadding.fromAxis\r\n                  : 0;\r\n          const align = this.getAlign();\r\n          let offset2 = rotation === true ? -5 : 0;\r\n          offset2 +=\r\n              align === 'center'\r\n                  ? 0\r\n                  : align === 'start'\r\n                      ? -adjustedPadding.alongAxis\r\n                      : adjustedPadding.alongAxis;\r\n          const horz = orientation === 'horizontal';\r\n          return {\r\n              [horz ? 'x' : 'y']: offset2,\r\n              [horz ? 'y' : 'x']: offset1\r\n          };\r\n      }\r\n      getTextPosition() {\r\n          const { angle, orientation, position } = this.props;\r\n          let transform = '';\r\n          let textAnchor = '';\r\n          let alignmentBaseline = 'middle';\r\n          if (angle !== 0) {\r\n              transform = `rotate(${angle})`;\r\n              textAnchor = 'end';\r\n          }\r\n          else {\r\n              const align = this.getAlign();\r\n              if (orientation === 'horizontal') {\r\n                  textAnchor =\r\n                      align === 'center' ? 'middle' : align === 'start' ? 'end' : 'start';\r\n                  if (position === 'start') {\r\n                      alignmentBaseline = 'baseline';\r\n                  }\r\n                  else if (position === 'end') {\r\n                      alignmentBaseline = 'hanging';\r\n                  }\r\n              }\r\n              else {\r\n                  alignmentBaseline =\r\n                      align === 'center'\r\n                          ? 'middle'\r\n                          : align === 'start'\r\n                              ? 'baseline'\r\n                              : 'hanging';\r\n                  if (position === 'start') {\r\n                      textAnchor = 'end';\r\n                  }\r\n                  else if (position === 'end') {\r\n                      textAnchor = 'start';\r\n                  }\r\n                  else {\r\n                      textAnchor = 'middle';\r\n                  }\r\n              }\r\n          }\r\n          return {\r\n              transform,\r\n              textAnchor: this.props.textAnchor || textAnchor,\r\n              alignmentBaseline\r\n          };\r\n      }\r\n      render() {\r\n          const { fill, text, fullText, fontSize, fontFamily, className } = this.props;\r\n          const { x, y } = this.getOffset();\r\n          const textPosition = this.getTextPosition();\r\n          return (React__default.createElement(\"g\", { transform: `translate(${x}, ${y})`, fontSize: fontSize, fontFamily: fontFamily },\r\n              React__default.createElement(\"title\", null, fullText),\r\n              React__default.createElement(\"text\", Object.assign({}, textPosition, { fill: fill, className: className }), text)));\r\n      }\r\n  }\r\n  LinearAxisTickLabel.defaultProps = {\r\n      fill: '#8F979F',\r\n      fontSize: 11,\r\n      fontFamily: 'sans-serif',\r\n      rotation: true,\r\n      padding: 0,\r\n      align: 'center'\r\n  };\n\n  class LinearAxisTickLine extends React.PureComponent {\r\n      positionTick() {\r\n          const { size, position, orientation } = this.props;\r\n          const isVertical = orientation === 'vertical';\r\n          const tickSize = size || 0;\r\n          const start = position === 'start'\r\n              ? tickSize * -1\r\n              : position === 'center'\r\n                  ? tickSize * -0.5\r\n                  : 0;\r\n          const end = start + tickSize;\r\n          return {\r\n              x1: isVertical ? end : 0,\r\n              x2: isVertical ? start : 0,\r\n              y1: isVertical ? 0 : start,\r\n              y2: isVertical ? 0 : end\r\n          };\r\n      }\r\n      render() {\r\n          const { strokeColor, strokeWidth, className } = this.props;\r\n          const path = this.positionTick();\r\n          return (React__default.createElement(\"line\", Object.assign({ className: className, strokeWidth: strokeWidth, stroke: strokeColor }, path)));\r\n      }\r\n  }\r\n  LinearAxisTickLine.defaultProps = {\r\n      strokeColor: '#8F979F',\r\n      strokeWidth: 1,\r\n      size: 5\r\n  };\n\n  // https://stackoverflow.com/questions/673905/best-way-to-determine-users-locale-within-browser\r\n  const getNavigatorLanguage = () => {\r\n      if (typeof window === 'undefined') {\r\n          return 'en';\r\n      }\r\n      if (navigator.languages && navigator.languages.length) {\r\n          return navigator.languages[0];\r\n      }\r\n      if (navigator.userLanguage ||\r\n          navigator.language ||\r\n          navigator.browserLanguage) {\r\n          return 'en';\r\n      }\r\n  };\r\n  const locale = getNavigatorLanguage();\r\n  const options = {\r\n      year: 'numeric',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n      hour12: true,\r\n      formatMatcher: 'best fit'\r\n  };\r\n  /**\r\n   * Format a value based on type.\r\n   */\r\n  function formatValue(value) {\r\n      if (value !== undefined) {\r\n          if (value instanceof Date) {\r\n              return value.toLocaleDateString(locale, options);\r\n          }\r\n          else if (typeof value === 'number') {\r\n              return value.toLocaleString();\r\n          }\r\n          return value;\r\n      }\r\n      return 'No value';\r\n  }\n\n  const ONE_DAY = 60 * 60 * 24;\r\n  const DURATION_TICK_STEPS = [\r\n      0.001,\r\n      0.005,\r\n      0.01,\r\n      0.05,\r\n      0.1,\r\n      0.5,\r\n      1,\r\n      5,\r\n      10,\r\n      15,\r\n      60,\r\n      60 * 15,\r\n      60 * 30,\r\n      60 * 60,\r\n      60 * 60 * 2,\r\n      60 * 60 * 4,\r\n      60 * 60 * 6,\r\n      60 * 60 * 8,\r\n      60 * 60 * 12,\r\n      ONE_DAY // 24 h\r\n  ];\r\n  /**\r\n   * Reduce the ticks to the max number of ticks.\r\n   */\r\n  function reduceTicks(ticks, maxTicks) {\r\n      if (ticks.length > maxTicks) {\r\n          const reduced = [];\r\n          const modulus = Math.floor(ticks.length / maxTicks);\r\n          for (let i = 0; i < ticks.length; i++) {\r\n              if (i % modulus === 0) {\r\n                  reduced.push(ticks[i]);\r\n              }\r\n          }\r\n          ticks = reduced;\r\n      }\r\n      return ticks;\r\n  }\r\n  /**\r\n   * Determine the max ticks for the available width.\r\n   */\r\n  function getMaxTicks(size, dimension) {\r\n      const tickWidth = Math.max(size, 0);\r\n      return Math.floor(dimension / tickWidth);\r\n  }\r\n  /**\r\n   * Formats the ticks in a duration format.\r\n   */\r\n  function getDurationTicks(domain, maxTicks) {\r\n      const domainWidth = domain[1] - domain[0];\r\n      let tickStep = null;\r\n      for (const s of DURATION_TICK_STEPS) {\r\n          if (domainWidth / s < maxTicks) {\r\n              tickStep = s;\r\n              break;\r\n          }\r\n      }\r\n      if (tickStep === null) {\r\n          const numDayTicks = domainWidth / ONE_DAY;\r\n          const dayStep = Math.ceil(numDayTicks / maxTicks);\r\n          tickStep = ONE_DAY * dayStep;\r\n      }\r\n      const ticks = [domain[0]];\r\n      while (ticks[ticks.length - 1] + tickStep <= domain[1]) {\r\n          ticks.push(ticks[ticks.length - 1] + tickStep);\r\n      }\r\n      return ticks;\r\n  }\r\n  /**\r\n   * Get the tick values from the scale.\r\n   */\r\n  function getTicks(scale, tickValues, type, maxTicks = 100, interval) {\r\n      let result;\r\n      if (tickValues) {\r\n          result = tickValues;\r\n      }\r\n      else {\r\n          if (scale.ticks) {\r\n              if (type === 'duration') {\r\n                  result = getDurationTicks(scale.domain(), maxTicks);\r\n              }\r\n              else if (interval) {\r\n                  result = scale.ticks(interval);\r\n              }\r\n              else {\r\n                  if (type === 'time') {\r\n                      // If its time, we need to handle the time count\r\n                      // manually because d3 does this odd rounding\r\n                      result = scale.ticks();\r\n                      result = reduceTicks(result, maxTicks);\r\n                  }\r\n                  else {\r\n                      result = scale.ticks(maxTicks);\r\n                  }\r\n              }\r\n          }\r\n          else {\r\n              tickValues = scale.domain();\r\n              result = reduceTicks(tickValues, maxTicks);\r\n          }\r\n      }\r\n      return result;\r\n  }\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n  See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\r\n\r\n  function __rest(s, e) {\r\n      var t = {};\r\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n          t[p] = s[p];\r\n      if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n          for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n              if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                  t[p[i]] = s[p[i]];\r\n          }\r\n      return t;\r\n  }\n\n  /**\r\n   * CloneElement is a wrapper component for createElement function.\r\n   * This allows you to describe your cloning element declaratively\r\n   * which is a more natural API for React.\r\n   */\r\n  function CloneElement(_a) {\r\n      var { children, element, childRef } = _a, rest = __rest(_a, [\"children\", \"element\", \"childRef\"]);\r\n      const getProjectedProps = React.useMemo(() => props => {\r\n          const childProps = element.props;\r\n          return Object.keys(props).reduce((acc, key) => {\r\n              const prop = props[key];\r\n              const childProp = childProps[key];\r\n              if (typeof prop === 'function' && typeof childProp === 'function') {\r\n                  acc[key] = args => {\r\n                      prop(args);\r\n                      childProp(args);\r\n                  };\r\n              }\r\n              else if (key === 'className') {\r\n                  acc[key] = classNames(prop, childProp);\r\n              }\r\n              else {\r\n                  acc[key] = prop;\r\n              }\r\n              return acc;\r\n          }, {});\r\n      }, [rest]);\r\n      if (element === null) {\r\n          return children;\r\n      }\r\n      // Tricky logic around functional vs class components\r\n      const ref = childRef ?\r\n          node => {\r\n              if (typeof childRef === 'function') {\r\n                  childRef(node);\r\n              }\r\n              else if (ref) {\r\n                  childRef.current = node;\r\n              }\r\n          } : undefined;\r\n      const newProps = getProjectedProps(rest);\r\n      return React.cloneElement(element, Object.assign(Object.assign(Object.assign({}, element.props), newProps), { children,\r\n          ref }));\r\n  }\n\n  const calculateDimensions = (text, fontFamily, fontSize) => {\r\n      // SSR Rendering doesn't support canvas measurements\r\n      // we have to make a guess in this case...\r\n      if (typeof document === 'undefined') {\r\n          return {\r\n              width: text.length * 8,\r\n              height: 25\r\n          };\r\n      }\r\n      return calculateSize(text, {\r\n          font: fontFamily,\r\n          fontSize: `${fontSize}px`\r\n      });\r\n  };\n\n  class LinearAxisTickSeries extends React.Component {\r\n      /**\r\n       * Gets the adjusted scale given offsets.\r\n       */\r\n      getAdjustedScale() {\r\n          const { scale } = this.props;\r\n          if (scale.bandwidth) {\r\n              let offset = scale.bandwidth() / 2;\r\n              if (scale.round()) {\r\n                  offset = Math.round(offset);\r\n              }\r\n              return d => +scale(d) + offset;\r\n          }\r\n          else {\r\n              return d => +scale(d);\r\n          }\r\n      }\r\n      /**\r\n       * Gets the x/y position for a given tick.\r\n       */\r\n      getPosition(scaledTick) {\r\n          const { orientation } = this.props;\r\n          if (orientation === 'horizontal') {\r\n              return { x: scaledTick, y: 0 };\r\n          }\r\n          else {\r\n              return { x: 0, y: scaledTick };\r\n          }\r\n      }\r\n      /**\r\n       * Gets the dimension (height/width) this axis is calculating on.\r\n       */\r\n      getDimension() {\r\n          const { height, width, orientation } = this.props;\r\n          return orientation === 'vertical' ? height : width;\r\n      }\r\n      /**\r\n       * Calculates the rotation angle that the ticks need to be shifted to.\r\n       * This equation will measure the length of the text in a external canvas\r\n       * object and determine what the longest label is and rotate until they fit.\r\n       */\r\n      getRotationAngle(ticks) {\r\n          if (!this.props.label) {\r\n              return 0;\r\n          }\r\n          const label = this.props.label.props;\r\n          const dimension = this.getDimension();\r\n          const maxTicksLength = d3Array.max(ticks, tick => tick.width);\r\n          let angle = 0;\r\n          if (label.rotation) {\r\n              if (label.rotation === true) {\r\n                  let baseWidth = maxTicksLength;\r\n                  const maxBaseWidth = Math.floor(dimension / ticks.length);\r\n                  while (baseWidth > maxBaseWidth && angle > -90) {\r\n                      angle -= 30;\r\n                      baseWidth = Math.cos(angle * (Math.PI / 180)) * maxTicksLength;\r\n                  }\r\n              }\r\n              else {\r\n                  angle = label.rotation;\r\n              }\r\n          }\r\n          return angle;\r\n      }\r\n      /**\r\n       * Gets the formatted label of the tick.\r\n       */\r\n      getLabelFormat() {\r\n          const { label, scale } = this.props;\r\n          if (label && label.props.format) {\r\n              return label.props.format;\r\n          }\r\n          else if (scale.tickFormat) {\r\n              return scale.tickFormat.apply(scale, [5]);\r\n          }\r\n          else {\r\n              return v => formatValue(v);\r\n          }\r\n      }\r\n      /**\r\n       * Gets the ticks given the dimensions and scales and returns\r\n       * the text and position.\r\n       */\r\n      getTicks() {\r\n          const { scale, tickSize, tickValues, interval, axis, label } = this.props;\r\n          const dimension = this.getDimension();\r\n          const maxTicks = getMaxTicks(tickSize, dimension);\r\n          const ticks = getTicks(scale, tickValues, axis.type, maxTicks, interval);\r\n          const adjustedScale = this.getAdjustedScale();\r\n          const format = this.getLabelFormat();\r\n          const midpoint = dimension / 2;\r\n          return ticks.map(tick => {\r\n              const fullText = format(tick);\r\n              const scaledTick = adjustedScale(tick);\r\n              const position = this.getPosition(scaledTick);\r\n              const text = ellipsize(fullText, 18);\r\n              const size = label\r\n                  ? calculateDimensions(text, label.props.fontFamily, label.props.fontSize.toString())\r\n                  : {};\r\n              return Object.assign(Object.assign(Object.assign({}, position), size), { text,\r\n                  fullText, half: scaledTick === midpoint\r\n                      ? 'center'\r\n                      : scaledTick < midpoint\r\n                          ? 'start'\r\n                          : 'end' });\r\n          });\r\n      }\r\n      render() {\r\n          const { label, line, height, width, orientation } = this.props;\r\n          const ticks = this.getTicks();\r\n          const angle = this.getRotationAngle(ticks);\r\n          return (React__default.createElement(React.Fragment, null, ticks.map((tick, i) => (React__default.createElement(\"g\", { key: i, transform: `translate(${tick.x}, ${tick.y})` },\r\n              line && (React__default.createElement(CloneElement, { element: line, height: height, width: width, orientation: orientation })),\r\n              label && (React__default.createElement(CloneElement, { element: label, text: tick.text, fullText: tick.fullText, half: tick.half, angle: angle, orientation: orientation, line: line })))))));\r\n      }\r\n  }\r\n  LinearAxisTickSeries.defaultProps = {\r\n      line: React__default.createElement(LinearAxisTickLine, null),\r\n      label: React__default.createElement(LinearAxisTickLabel, null),\r\n      tickSize: 30\r\n  };\n\n  const humanFormatScale = new humanFormat.Scale({\r\n      k: 1000,\r\n      M: 1000000,\r\n      B: 1000000000\r\n  });\r\n  const humanFormatMillionScale = new humanFormat.Scale({\r\n      M: 1,\r\n      B: 1000,\r\n      T: 1000000\r\n  });\r\n  const ONE_MILLION = 1000000;\r\n  const ONE_BILLION = 1000000000;\r\n  const humanFormatBigInteger = bigInteger => {\r\n      if (bigInteger.greater(ONE_BILLION)) {\r\n          return humanFormat(bigInteger.divide(ONE_MILLION).toJSNumber(), {\r\n              scale: humanFormatMillionScale\r\n          });\r\n      }\r\n      return humanFormat(bigInteger.toJSNumber(), { scale: humanFormatScale });\r\n  };\r\n  const bigIntegerToLocaleString = bigInteger => {\r\n      let i = 0;\r\n      let formattedString = '';\r\n      for (const c of bigInteger\r\n          .toString()\r\n          .split('')\r\n          .reverse()) {\r\n          if (i > 0 && i % 3 === 0) {\r\n              formattedString = ',' + formattedString;\r\n          }\r\n          formattedString = c + formattedString;\r\n          i++;\r\n      }\r\n      return formattedString;\r\n  };\n\n  /**\r\n   * Given a margins object, returns the top/left/right/bottom positions.\r\n   */\r\n  function parseMargins(margins) {\r\n      let top = 0;\r\n      let right = 0;\r\n      let bottom = 0;\r\n      let left = 0;\r\n      if (Array.isArray(margins)) {\r\n          if (margins.length === 2) {\r\n              top = margins[0];\r\n              bottom = margins[0];\r\n              left = margins[1];\r\n              right = margins[1];\r\n          }\r\n          else if (margins.length === 4) {\r\n              top = margins[0];\r\n              right = margins[1];\r\n              bottom = margins[2];\r\n              left = margins[3];\r\n          }\r\n      }\r\n      else if (margins !== undefined) {\r\n          top = margins;\r\n          right = margins;\r\n          bottom = margins;\r\n          left = margins;\r\n      }\r\n      return {\r\n          top,\r\n          right,\r\n          bottom,\r\n          left\r\n      };\r\n  }\r\n  /**\r\n   * Calculates the margins for the chart.\r\n   */\r\n  function calculateMarginOffsets(height, width, margins) {\r\n      const { left, right, bottom, top } = margins;\r\n      const newHeight = height - top - bottom;\r\n      const newWidth = width - left - right;\r\n      return {\r\n          height: newHeight,\r\n          width: newWidth\r\n      };\r\n  }\r\n  /**\r\n   * Calculates the dimensions for the chart.\r\n   */\r\n  function getDimension({ xOffset, yOffset, height, width, margins }) {\r\n      const parsedMargins = parseMargins(margins);\r\n      const marginDims = calculateMarginOffsets(height, width, parsedMargins);\r\n      const chartWidth = marginDims.width - xOffset;\r\n      const chartHeight = marginDims.height - yOffset;\r\n      return {\r\n          xOffset,\r\n          yOffset,\r\n          height,\r\n          width,\r\n          chartWidth,\r\n          chartHeight,\r\n          xMargin: xOffset + parsedMargins.left,\r\n          yMargin: parsedMargins.top\r\n      };\r\n  }\n\n  /**\r\n   * Gets the min/max values handling nested arrays.\r\n   */\r\n  function extent(data, attr) {\r\n      const accessor = (val, fn) => {\r\n          if (Array.isArray(val.data)) {\r\n              return fn(val.data, vv => vv[attr]);\r\n          }\r\n          return val[attr];\r\n      };\r\n      const minVal = d3Array.min(data, d => accessor(d, d3Array.min));\r\n      const maxVal = d3Array.max(data, d => accessor(d, d3Array.max));\r\n      return [minVal, maxVal];\r\n  }\r\n  /**\r\n   * Get the domain for the Y Axis.\r\n   */\r\n  function getYDomain({ data, scaled = false, isDiverging = false }) {\r\n      const [startY, endY] = extent(data, 'y');\r\n      const [startY1, endY1] = extent(data, 'y1');\r\n      // If dealing w/ negative numbers, we should\r\n      // normalize the top and bottom values\r\n      if (startY < 0 || isDiverging) {\r\n          const posStart = -startY;\r\n          const maxNum = Math.max(posStart, endY);\r\n          return [-maxNum, maxNum];\r\n      }\r\n      // Scaled start scale at non-zero\r\n      if (scaled) {\r\n          return [startY1, endY1];\r\n      }\r\n      // Start at 0 based\r\n      return [0, endY1];\r\n  }\r\n  /**\r\n   * Get the domain for the X Axis.\r\n   */\r\n  function getXDomain({ data, scaled = false, isDiverging = false }) {\r\n      const startX0 = extent(data, 'x0')[0];\r\n      const endX1 = extent(data, 'x1')[1];\r\n      // Histograms use dates for start/end\r\n      if (typeof startX0 === 'number' && typeof endX1 === 'number') {\r\n          // If dealing w/ negative numbers, we should\r\n          // normalize the top and bottom values\r\n          if (startX0 < 0 || isDiverging) {\r\n              const posStart = -startX0;\r\n              const maxNum = Math.max(posStart, endX1);\r\n              return [-maxNum, maxNum];\r\n          }\r\n          // If not scaled, return 0/max domains\r\n          if (!scaled) {\r\n              return [0, endX1];\r\n          }\r\n      }\r\n      // Scaled start scale at non-zero\r\n      return [startX0, endX1];\r\n  }\n\n  /**\r\n   * Helper function for interpolation.\r\n   */\r\n  function interpolate(type) {\r\n      if (type === 'smooth') {\r\n          return d3Shape.curveMonotoneX;\r\n      }\r\n      else if (type === 'step') {\r\n          return d3Shape.curveStep;\r\n      }\r\n      else {\r\n          return d3Shape.curveLinear;\r\n      }\r\n  }\n\n  /**\r\n   * Add ability to calculate scale band position.\r\n   * Reference: https://stackoverflow.com/questions/38633082/d3-getting-invert-value-of-band-scales\r\n   */\r\n  const scaleBandInvert = scale => {\r\n      const domain = scale.domain();\r\n      const paddingOuter = scale(domain[0]);\r\n      const eachBand = scale.step();\r\n      const [, end] = scale.range();\r\n      return offset => {\r\n          let index = Math.floor((offset - paddingOuter) / eachBand);\r\n          // Handle horizontal charts...\r\n          if (end === 0) {\r\n              index = index * -1;\r\n          }\r\n          return domain[Math.max(0, Math.min(index, domain.length - 1))];\r\n      };\r\n  };\r\n  /**\r\n   * Given a point position, get the closes data point in the dataset.\r\n   */\r\n  const getClosestPoint = (pos, scale, data, attr = 'x') => {\r\n      if (scale.invert) {\r\n          const domain = scale.invert(pos);\r\n          // Select the index\r\n          const bisect = d3Array.bisector((d) => d[attr]).right;\r\n          const index = bisect(data, domain);\r\n          // Determine min index\r\n          const minIndex = Math.max(0, index - 1);\r\n          const before = data[minIndex];\r\n          // Determine max index\r\n          const maxIndex = Math.min(data.length - 1, index);\r\n          const after = data[maxIndex];\r\n          // Determine which is closest to the point\r\n          let beforeVal = before[attr];\r\n          let afterVal = after[attr];\r\n          beforeVal = domain - beforeVal;\r\n          afterVal = afterVal - domain;\r\n          return beforeVal < afterVal ? before : after;\r\n      }\r\n      else {\r\n          // If we have a band scale, handle that special\r\n          const domain = scale.domain();\r\n          let prop;\r\n          // Of course the Marimekko is a pain...\r\n          if (scale.mariemkoInvert) {\r\n              prop = scale.mariemkoInvert(pos);\r\n          }\r\n          else {\r\n              prop = scaleBandInvert(scale)(pos);\r\n          }\r\n          const idx = domain.indexOf(prop);\r\n          return data[idx];\r\n      }\r\n  };\r\n  /**\r\n   * Given an event, get the parent svg element;\r\n   */\r\n  const getParentSVG = event => {\r\n      // set node to targets owner svg\r\n      let node = event.target.ownerSVGElement;\r\n      // find the outermost svg\r\n      if (node) {\r\n          while (node.ownerSVGElement) {\r\n              node = node.ownerSVGElement;\r\n          }\r\n      }\r\n      return node;\r\n  };\r\n  /**\r\n   * Given an event, get the relative X/Y position for a target.\r\n   */\r\n  const getPositionForTarget = ({ target, clientX, clientY }) => {\r\n      const { top, left } = target.getBoundingClientRect();\r\n      return {\r\n          x: clientX - left - target.clientLeft,\r\n          y: clientY - top - target.clientTop\r\n      };\r\n  };\r\n  /**\r\n   * Gets the point from q given matrix.\r\n   */\r\n  const getPointFromMatrix = (event, matrix) => {\r\n      const parent = getParentSVG(event);\r\n      if (!parent) {\r\n          return null;\r\n      }\r\n      // Determines client coordinates relative to the editor component\r\n      const { top, left } = parent.getBoundingClientRect();\r\n      const x = event.clientX - left;\r\n      const y = event.clientY - top;\r\n      // Transforms the coordinate to world coordinate (in the SVG/DIV world)\r\n      return transformationMatrix.applyToPoint(transformationMatrix.inverse(matrix), { x, y });\r\n  };\r\n  /**\r\n   * Get the start/end matrix.\r\n   */\r\n  const getLimitMatrix = (height, width, matrix) => transformationMatrix.applyToPoints(matrix, [\r\n      { x: 0, y: 0 },\r\n      { x: width, y: height }\r\n  ]);\r\n  /**\r\n   * Constrain the matrix.\r\n   */\r\n  const constrainMatrix = (height, width, matrix) => {\r\n      const [min, max] = getLimitMatrix(height, width, matrix);\r\n      if (max.x < width || max.y < height) {\r\n          return true;\r\n      }\r\n      if (min.x > 0 || min.y > 0) {\r\n          return true;\r\n      }\r\n      return false;\r\n  };\r\n  /**\r\n   * Determine if scale factor is less than allowed.\r\n   */\r\n  const lessThanScaleFactorMin = (value, scaleFactor) => value.scaleFactorMin && value.d * scaleFactor <= value.scaleFactorMin;\r\n  /**\r\n   * Determine if scale factor is larger than allowed.\r\n   */\r\n  const moreThanScaleFactorMax = (value, scaleFactor) => value.scaleFactorMax && value.d * scaleFactor >= value.scaleFactorMax;\r\n  /**\r\n   * Determine if both min and max scale fctors are going out of bounds.\r\n   */\r\n  const isZoomLevelGoingOutOfBounds = (value, scaleFactor) => {\r\n      const a = lessThanScaleFactorMin(value, scaleFactor) && scaleFactor < 1;\r\n      const b = moreThanScaleFactorMax(value, scaleFactor) && scaleFactor > 1;\r\n      return a || b;\r\n  };\n\n  /**\r\n   * Toggle the text selection of the body.\r\n   */\r\n  function toggleTextSelection(allowSelection) {\r\n      const style = allowSelection ? '' : 'none';\r\n      [\r\n          '-webkit-touch-callout',\r\n          '-webkit-user-select',\r\n          '-khtml-user-select',\r\n          '-moz-user-select',\r\n          '-ms-user-select',\r\n          'user-select'\r\n      ].forEach(prop => (document.body.style[prop] = style));\r\n  }\n\n  /**\r\n   * Calculates whether the stroke should be shown.\r\n   */\r\n  function calculateShowStroke(current, data) {\r\n      const i = data.indexOf(current);\r\n      let showLine = false;\r\n      const prev = data[i - 1];\r\n      if (i > 0 && prev.y) {\r\n          showLine = true;\r\n      }\r\n      const cur = data[i];\r\n      if (cur.y) {\r\n          showLine = true;\r\n      }\r\n      const next = data[i + 1];\r\n      if (i < data.length - 1 && next.y) {\r\n          showLine = true;\r\n      }\r\n      return showLine;\r\n  }\n\n  /**\r\n   * Get the angle from a radian.\r\n   */\r\n  const getDegrees = (radians) => (radians / Math.PI) * 180 - 90;\n\n  const functionProps = (prop, val, data) => {\r\n      if (typeof val === 'function') {\r\n          return val(data);\r\n      }\r\n      else if (prop === 'className') {\r\n          return classNames(val);\r\n      }\r\n      else if (val !== undefined || val !== null) {\r\n          return val;\r\n      }\r\n      return {};\r\n  };\r\n  const constructFunctionProps = (props, data) => ({\r\n      className: functionProps('className', props.className, data),\r\n      style: functionProps('style', props.style, data)\r\n  });\n\n  /**\r\n   * Given a dataset and a list of accessors, returns a unique collection.\r\n   */\r\n  function uniqueBy(data, ...accessors) {\r\n      const result = [];\r\n      const ittr = (arr, depth) => {\r\n          for (const a of arr) {\r\n              const acc = accessors[depth];\r\n              if (acc === undefined) {\r\n                  throw new Error(`Accessor not found for depth: ${depth}`);\r\n              }\r\n              const val = acc(a);\r\n              if (Array.isArray(val)) {\r\n                  ittr(val, depth + 1);\r\n              }\r\n              else if (!result.includes(val)) {\r\n                  result.push(val);\r\n              }\r\n          }\r\n      };\r\n      ittr(data, 0);\r\n      return result;\r\n  }\n\n  let axisLineId = 0;\r\n  class LinearAxisLine extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {\r\n              id: (axisLineId++).toString()\r\n          };\r\n      }\r\n      render() {\r\n          const { strokeColor, strokeGradient, scale, orientation, className } = this.props;\r\n          const { id } = this.state;\r\n          const [range0, range1] = scale.range();\r\n          return (React__default.createElement(React.Fragment, null,\r\n              React__default.createElement(\"line\", { className: className, x1: orientation === 'vertical' ? 0 : range0, \r\n                  // Workaround for a Chrome/Firefox bug where it won't render gradients for straight lines\r\n                  x2: orientation === 'vertical' ? 0.00001 : range1, y1: orientation === 'vertical' ? range0 : 0, y2: orientation === 'vertical' ? range1 : 0.00001, strokeWidth: 1, stroke: strokeGradient ? `url(#axis-gradient-${id})` : strokeColor }),\r\n              strokeGradient && (React__default.createElement(CloneElement, { element: strokeGradient, id: `axis-gradient-${id}` }))));\r\n      }\r\n  }\r\n  LinearAxisLine.defaultProps = {\r\n      strokeColor: '#8F979F',\r\n      strokeWidth: 1\r\n  };\n\n  class LinearAxis extends React.Component {\r\n      constructor(props) {\r\n          super(props);\r\n          this.ref = React.createRef();\r\n          this.state = {\r\n              height: props.height,\r\n              width: props.width\r\n          };\r\n      }\r\n      componentDidMount() {\r\n          this.updateDimensions();\r\n      }\r\n      componentDidUpdate(prevProps) {\r\n          const { height, width, scale } = this.props;\r\n          if (width !== prevProps.width ||\r\n              height !== prevProps.height ||\r\n              scale !== prevProps.scale) {\r\n              this.updateDimensions();\r\n          }\r\n      }\r\n      updateDimensions() {\r\n          const { onDimensionsChange, orientation, position } = this.props;\r\n          const shouldOffset = position !== 'center';\r\n          let height;\r\n          let width;\r\n          if (shouldOffset) {\r\n              const dims = this.ref.current.getBoundingClientRect();\r\n              width = Math.floor(dims.width);\r\n              height = Math.floor(dims.height);\r\n          }\r\n          if (orientation === 'vertical') {\r\n              if (this.state.width !== width) {\r\n                  this.setState({ width });\r\n                  onDimensionsChange({ width });\r\n              }\r\n          }\r\n          else {\r\n              if (this.state.height !== height) {\r\n                  this.setState({ height });\r\n                  onDimensionsChange({ height });\r\n              }\r\n          }\r\n      }\r\n      getPosition() {\r\n          const { position, width, height, orientation } = this.props;\r\n          let translateY = 0;\r\n          let translateX = 0;\r\n          if (position === 'end' && orientation === 'horizontal') {\r\n              translateY = height;\r\n          }\r\n          else if (position === 'center' && orientation === 'horizontal') {\r\n              translateY = height / 2;\r\n          }\r\n          else if (position === 'end' && orientation === 'vertical') {\r\n              translateX = width;\r\n          }\r\n          else if (position === 'center' && orientation === 'vertical') {\r\n              translateX = width / 2;\r\n          }\r\n          return { translateX, translateY };\r\n      }\r\n      render() {\r\n          const { scale, height, width, orientation, axisLine, tickSeries } = this.props;\r\n          const { translateX, translateY } = this.getPosition();\r\n          return (React__default.createElement(\"g\", { transform: `translate(${translateX}, ${translateY})`, ref: this.ref },\r\n              axisLine && (React__default.createElement(CloneElement, { element: axisLine, height: height, width: width, scale: scale, orientation: orientation })),\r\n              (tickSeries.props.line || tickSeries.props.label) && (React__default.createElement(CloneElement, { element: tickSeries, height: height, width: width, scale: scale, orientation: orientation, axis: this.props }))));\r\n      }\r\n  }\r\n  LinearAxis.defaultProps = {\r\n      axisLine: React__default.createElement(LinearAxisLine, null),\r\n      tickSeries: React__default.createElement(LinearAxisTickSeries, null),\r\n      scaled: false,\r\n      roundDomains: false,\r\n      onDimensionsChange: () => undefined\r\n  };\n\n  class LinearXAxisTickLabel extends React.Component {\r\n      render() {\r\n          return React__default.createElement(LinearAxisTickLabel, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  LinearXAxisTickLabel.defaultProps = Object.assign(Object.assign({}, LinearAxisTickLabel.defaultProps), { rotation: true, position: 'end', align: 'center' });\r\n  class LinearXAxisTickLine extends React.Component {\r\n      render() {\r\n          return React__default.createElement(LinearAxisTickLine, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  LinearXAxisTickLine.defaultProps = Object.assign(Object.assign({}, LinearAxisTickLine.defaultProps), { position: 'end' });\r\n  class LinearXAxisTickSeries extends React.Component {\r\n      render() {\r\n          return React__default.createElement(LinearAxisTickSeries, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  LinearXAxisTickSeries.defaultProps = Object.assign(Object.assign({}, LinearAxisTickSeries.defaultProps), { tickSize: 75, line: React__default.createElement(LinearXAxisTickLine, null), label: React__default.createElement(LinearXAxisTickLabel, null) });\r\n  class LinearXAxis extends React.Component {\r\n      render() {\r\n          return React__default.createElement(LinearAxis, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  LinearXAxis.defaultProps = Object.assign(Object.assign({}, LinearAxis.defaultProps), { position: 'end', roundDomains: false, scaled: false, type: 'value', orientation: 'horizontal', tickSeries: React__default.createElement(LinearXAxisTickSeries, null) });\n\n  class LinearYAxisTickLabel extends React.Component {\r\n      render() {\r\n          return React__default.createElement(LinearAxisTickLabel, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  LinearYAxisTickLabel.defaultProps = Object.assign(Object.assign({}, LinearAxisTickLabel.defaultProps), { rotation: false, position: 'start', align: 'center' });\r\n  class LinearYAxisTickLine extends React.Component {\r\n      render() {\r\n          return React__default.createElement(LinearAxisTickLine, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  LinearYAxisTickLine.defaultProps = Object.assign(Object.assign({}, LinearAxisTickLine.defaultProps), { position: 'start' });\r\n  class LinearYAxisTickSeries extends React.Component {\r\n      render() {\r\n          return React__default.createElement(LinearAxisTickSeries, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  LinearYAxisTickSeries.defaultProps = Object.assign(Object.assign({}, LinearAxisTickSeries.defaultProps), { tickSize: 30, line: React__default.createElement(LinearYAxisTickLine, null), label: React__default.createElement(LinearYAxisTickLabel, null) });\r\n  class LinearYAxis extends React.Component {\r\n      render() {\r\n          return React__default.createElement(LinearAxis, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  LinearYAxis.defaultProps = Object.assign(Object.assign({}, LinearAxis.defaultProps), { orientation: 'vertical', scaled: false, roundDomains: false, type: 'value', position: 'start', tickSeries: React__default.createElement(LinearYAxisTickSeries, null) });\n\n  /**\r\n   * Returns whether the axis has a visual element or not.\r\n   */\r\n  const isAxisVisible = (axis) => !!axis.tickSeries.props.label || !!axis.tickSeries.props.line;\n\n  class RadialAxisTickLine extends React.PureComponent {\r\n      render() {\r\n          const { stroke, size, position, innerRadius, outerRadius } = this.props;\r\n          const x1 = position === 'outside' ? size : -(outerRadius - innerRadius);\r\n          return (React__default.createElement(\"line\", { x1: x1, x2: 0, stroke: stroke, style: { pointerEvents: 'none' } }));\r\n      }\r\n  }\r\n  RadialAxisTickLine.defaultProps = {\r\n      stroke: 'rgba(113, 128, 141, .5)',\r\n      size: 10,\r\n      position: 'inside'\r\n  };\n\n  const rad2deg = (angle) => (angle * 180) / Math.PI;\r\n  class RadialAxisTickLabel extends React.PureComponent {\r\n      getPosition() {\r\n          const { point, autoRotate, rotation, padding } = this.props;\r\n          let textAnchor;\r\n          let transform;\r\n          if (autoRotate) {\r\n              const l = point >= Math.PI;\r\n              const r = point < 2 * Math.PI;\r\n              // TODO: This centers the text, determine better way later\r\n              if ((rotation >= 85 && rotation <= 95) ||\r\n                  (rotation <= -85 && rotation >= -95)) {\r\n                  textAnchor = 'middle';\r\n              }\r\n              else if (l && r) {\r\n                  textAnchor = 'end';\r\n              }\r\n              else {\r\n                  textAnchor = 'start';\r\n              }\r\n              transform = `rotate(${90 - rad2deg(point)}, ${padding}, 0)`;\r\n          }\r\n          else {\r\n              const shouldRotate = rotation > 100 && rotation;\r\n              const rotate = shouldRotate ? 180 : 0;\r\n              const translate = shouldRotate ? -30 : 0;\r\n              textAnchor = shouldRotate ? 'end' : 'start';\r\n              transform = `rotate(${rotate}) translate(${translate})`;\r\n          }\r\n          return {\r\n              transform,\r\n              textAnchor\r\n          };\r\n      }\r\n      render() {\r\n          const { data, fill, fontFamily, fontSize, format, lineSize, index } = this.props;\r\n          const text = format ? format(data, index) : formatValue(data);\r\n          const { transform, textAnchor } = this.getPosition();\r\n          return (React__default.createElement(\"g\", { transform: transform },\r\n              React__default.createElement(\"title\", null, text),\r\n              React__default.createElement(\"text\", { dy: \"0.35em\", x: lineSize + 5, textAnchor: textAnchor, fill: fill, fontFamily: fontFamily, fontSize: fontSize }, text)));\r\n      }\r\n  }\r\n  RadialAxisTickLabel.defaultProps = {\r\n      fill: '#71808d',\r\n      fontSize: 11,\r\n      padding: 15,\r\n      fontFamily: 'sans-serif',\r\n      autoRotate: true\r\n  };\n\n  class RadialAxisTick extends React.Component {\r\n      render() {\r\n          const { line, label, scale, outerRadius, data, index, padding, innerRadius } = this.props;\r\n          const point = scale(data);\r\n          const rotation = (point * 180) / Math.PI - 90;\r\n          const transform = `rotate(${rotation}) translate(${outerRadius +\r\n            padding},0)`;\r\n          const lineSize = line ? line.props.size : 0;\r\n          return (React__default.createElement(\"g\", { transform: transform },\r\n              line && (React__default.createElement(CloneElement, { element: line, innerRadius: innerRadius, outerRadius: outerRadius })),\r\n              label && (React__default.createElement(CloneElement, { element: label, index: index, point: point, rotation: rotation, lineSize: lineSize, data: data }))));\r\n      }\r\n  }\r\n  RadialAxisTick.defaultProps = {\r\n      outerRadius: 0,\r\n      padding: 0,\r\n      line: React__default.createElement(RadialAxisTickLine, null),\r\n      label: React__default.createElement(RadialAxisTickLabel, null)\r\n  };\n\n  class RadialAxisTickSeries extends React.Component {\r\n      render() {\r\n          const { scale, count, outerRadius, tick, tickValues, innerRadius, interval, type } = this.props;\r\n          const ticks = getTicks(scale, tickValues, type, count, interval || count);\r\n          return (React__default.createElement(React.Fragment, null, ticks.map((data, i) => (React__default.createElement(CloneElement, { element: tick, key: i, index: i, scale: scale, data: data, innerRadius: innerRadius, outerRadius: outerRadius })))));\r\n      }\r\n  }\r\n  RadialAxisTickSeries.defaultProps = {\r\n      count: 12,\r\n      type: 'time',\r\n      tick: React__default.createElement(RadialAxisTick, null)\r\n  };\n\n  class RadialAxisArc extends React.Component {\r\n      render() {\r\n          const { index, stroke, strokeDasharray, scale } = this.props;\r\n          const r = scale(index);\r\n          const strokeColor = typeof stroke === 'string' ? stroke : stroke(index);\r\n          const strokeDash = typeof strokeDasharray === 'string'\r\n              ? strokeDasharray\r\n              : strokeDasharray(index);\r\n          return (React__default.createElement(\"circle\", { fill: \"none\", strokeDasharray: strokeDash, stroke: strokeColor, style: { pointerEvents: 'none' }, cx: \"0\", cy: \"0\", r: r }));\r\n      }\r\n  }\r\n  RadialAxisArc.defaultProps = {\r\n      stroke: '#71808d',\r\n      strokeDasharray: '1,4'\r\n  };\n\n  class RadialAxisArcSeries extends React.Component {\r\n      render() {\r\n          const { count, innerRadius, outerRadius, arc } = this.props;\r\n          const scale = d3Scale.scaleLinear()\r\n              .domain([0, count])\r\n              .range([innerRadius, outerRadius]);\r\n          const arcs = scale.ticks(count);\r\n          return (React__default.createElement(React.Fragment, null, arcs.map(d => (React__default.createElement(CloneElement, { element: arc, key: d, index: d, scale: scale })))));\r\n      }\r\n  }\r\n  RadialAxisArcSeries.defaultProps = {\r\n      count: 12,\r\n      arc: React__default.createElement(RadialAxisArc, null)\r\n  };\n\n  class RadialAxis extends React.Component {\r\n      render() {\r\n          const { arcs, ticks, xScale, height, width, innerRadius, type } = this.props;\r\n          const outerRadius = Math.min(height, width) / 2;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              arcs && (React__default.createElement(CloneElement, { element: arcs, outerRadius: outerRadius, innerRadius: innerRadius })),\r\n              ticks && (React__default.createElement(CloneElement, { element: ticks, scale: xScale, type: type, innerRadius: innerRadius, outerRadius: outerRadius }))));\r\n      }\r\n  }\r\n  RadialAxis.defaultProps = {\r\n      innerRadius: 10,\r\n      type: 'value',\r\n      arcs: React__default.createElement(RadialAxisArcSeries, null),\r\n      ticks: React__default.createElement(RadialAxisTickSeries, null)\r\n  };\n\n  class Move extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.started = false;\r\n          this.deltaX = 0;\r\n          this.deltaY = 0;\r\n          this.prevXPosition = 0;\r\n          this.prevYPosition = 0;\r\n          this.onMouseMove = event => {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              const { movementX, movementY } = event;\r\n              this.deltaX = this.deltaX + movementX;\r\n              this.deltaY = this.deltaY + movementY;\r\n              if (this.checkThreshold()) {\r\n                  this.disableText(true);\r\n                  this.setCursor(true);\r\n                  this.deltaX = 0;\r\n                  this.deltaY = 0;\r\n                  this.started = true;\r\n                  this.props.onMoveStart({\r\n                      nativeEvent: event,\r\n                      type: 'mouse'\r\n                  });\r\n              }\r\n              else {\r\n                  this.rqf = requestAnimationFrame(() => {\r\n                      this.props.onMove({\r\n                          nativeEvent: event,\r\n                          type: 'mouse',\r\n                          x: movementX,\r\n                          y: movementY\r\n                      });\r\n                  });\r\n              }\r\n          };\r\n          this.onMouseUp = event => {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              this.disposeHandlers();\r\n              if (this.started) {\r\n                  this.props.onMoveEnd({\r\n                      nativeEvent: event,\r\n                      type: 'mouse'\r\n                  });\r\n              }\r\n              else {\r\n                  this.props.onMoveCancel({\r\n                      nativeEvent: event,\r\n                      type: 'mouse'\r\n                  });\r\n              }\r\n          };\r\n          this.onTouchMove = (event) => {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              // Calculate delta from previous position and current\r\n              const { clientX, clientY } = this.getTouchCoords(event);\r\n              const deltaX = clientX - this.prevXPosition;\r\n              const deltaY = clientY - this.prevYPosition;\r\n              // Track the delta\r\n              this.deltaX = this.deltaX + deltaX;\r\n              this.deltaY = this.deltaY + deltaY;\r\n              if (this.checkThreshold()) {\r\n                  this.disableText(true);\r\n                  this.setCursor(true);\r\n                  this.deltaX = 0;\r\n                  this.deltaY = 0;\r\n                  this.started = true;\r\n                  this.props.onMoveStart({\r\n                      // TODO: Come back and clean this up...\r\n                      nativeEvent: Object.assign(Object.assign({}, event), { clientX,\r\n                          clientY }),\r\n                      type: 'touch'\r\n                  });\r\n              }\r\n              else {\r\n                  this.rqf = requestAnimationFrame(() => {\r\n                      this.props.onMove({\r\n                          // TODO: Come back and clean this up...\r\n                          nativeEvent: Object.assign(Object.assign({}, event), { clientX,\r\n                              clientY }),\r\n                          type: 'touch',\r\n                          x: deltaX,\r\n                          y: deltaY\r\n                      });\r\n                  });\r\n              }\r\n              this.prevXPosition = clientX;\r\n              this.prevYPosition = clientY;\r\n          };\r\n          this.onTouchEnd = (event) => {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              this.disposeHandlers();\r\n              if (this.started) {\r\n                  this.props.onMoveEnd({\r\n                      nativeEvent: event,\r\n                      type: 'touch'\r\n                  });\r\n              }\r\n              else {\r\n                  this.props.onMoveCancel({\r\n                      nativeEvent: event,\r\n                      type: 'touch'\r\n                  });\r\n              }\r\n          };\r\n      }\r\n      componentWillUnmount() {\r\n          cancelAnimationFrame(this.rqf);\r\n          this.disposeHandlers();\r\n      }\r\n      disposeHandlers() {\r\n          window.removeEventListener('mousemove', this.onMouseMove);\r\n          window.removeEventListener('mouseup', this.onMouseUp);\r\n          window.removeEventListener('touchmove', this.onTouchMove);\r\n          window.removeEventListener('touchend', this.onTouchEnd);\r\n          this.setCursor(false);\r\n          this.disableText(true);\r\n      }\r\n      disableText(shouldDisable) {\r\n          if (this.props.disableText) {\r\n              toggleTextSelection(shouldDisable);\r\n          }\r\n      }\r\n      setCursor(set) {\r\n          let { cursor } = this.props;\r\n          if (cursor) {\r\n              if (!set) {\r\n                  cursor = 'inherit';\r\n              }\r\n              document.body.style['cursor'] = cursor;\r\n          }\r\n      }\r\n      checkThreshold() {\r\n          const { threshold } = this.props;\r\n          return (!this.started &&\r\n              (Math.abs(this.deltaX) > threshold || Math.abs(this.deltaY) > threshold));\r\n      }\r\n      getTouchCoords(event) {\r\n          const { clientX, clientY } = event.touches[0];\r\n          return {\r\n              clientX,\r\n              clientY\r\n          };\r\n      }\r\n      onMouseDown(event) {\r\n          const { preventRightClick, disabled } = this.props;\r\n          const shouldCancel = event.nativeEvent.which === 3 && preventRightClick;\r\n          if (shouldCancel || disabled) {\r\n              return;\r\n          }\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.started = false;\r\n          // Always bind event so we cancel movement even if no action was taken\r\n          window.addEventListener('mousemove', this.onMouseMove);\r\n          window.addEventListener('mouseup', this.onMouseUp);\r\n      }\r\n      onTouchStart(event) {\r\n          const { disabled } = this.props;\r\n          if (disabled || event.touches.length !== 1) {\r\n              return;\r\n          }\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this.started = false;\r\n          this.prevXPosition = event.touches[0].clientX;\r\n          this.prevYPosition = event.touches[0].clientY;\r\n          // Always bind event so we cancel movement even if no action was taken\r\n          window.addEventListener('touchmove', this.onTouchMove);\r\n          window.addEventListener('touchend', this.onTouchEnd);\r\n      }\r\n      render() {\r\n          return React.Children.map(this.props.children, (child) => React.cloneElement(child, Object.assign(Object.assign({}, child.props), { onMouseDown: e => {\r\n                  this.onMouseDown(e);\r\n                  if (child.props.onMouseDown) {\r\n                      child.props.onMouseDown(e);\r\n                  }\r\n              }, onTouchStart: e => {\r\n                  this.onTouchStart(e);\r\n                  if (child.props.onTouchStart) {\r\n                      child.props.onTouchStart(e);\r\n                  }\r\n              } })));\r\n      }\r\n  }\r\n  Move.defaultProps = {\r\n      preventRightClick: true,\r\n      disableText: true,\r\n      threshold: 0,\r\n      onMoveStart: () => undefined,\r\n      onMove: () => undefined,\r\n      onMoveEnd: () => undefined,\r\n      onMoveCancel: () => undefined\r\n  };\n\n  function styleInject(css, ref) {\n    if ( ref === void 0 ) ref = {};\n    var insertAt = ref.insertAt;\n\n    if (!css || typeof document === 'undefined') { return; }\n\n    var head = document.head || document.getElementsByTagName('head')[0];\n    var style = document.createElement('style');\n    style.type = 'text/css';\n\n    if (insertAt === 'top') {\n      if (head.firstChild) {\n        head.insertBefore(style, head.firstChild);\n      } else {\n        head.appendChild(style);\n      }\n    } else {\n      head.appendChild(style);\n    }\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = css;\n    } else {\n      style.appendChild(document.createTextNode(css));\n    }\n  }\n\n  var css = \".BrushHandle-module_handle__1sUPw {\\n  fill: var(--color-background);\\n  stroke: var(--color-primary); }\\n\\n.BrushHandle-module_dragging__MOc92 {\\n  fill: var(--color-surface); }\\n\\n.BrushHandle-module_dot__1tWYP {\\n  fill: var(--color-on-background); }\\n\\n.BrushHandle-module_line__Tqtk3 {\\n  stroke: var(--color-primary); }\\n\";\n  var css$1 = {\"handle\":\"BrushHandle-module_handle__1sUPw\",\"dragging\":\"BrushHandle-module_dragging__MOc92\",\"dot\":\"BrushHandle-module_dot__1tWYP\",\"line\":\"BrushHandle-module_line__Tqtk3\"};\n  styleInject(css);\n\n  class BrushHandle extends React.PureComponent {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {\r\n              isDragging: false\r\n          };\r\n      }\r\n      onMoveStart() {\r\n          this.setState({\r\n              isDragging: true\r\n          });\r\n      }\r\n      onMove(event) {\r\n          this.props.onHandleDrag(event.x);\r\n      }\r\n      onMoveEnd() {\r\n          this.setState({\r\n              isDragging: false\r\n          });\r\n      }\r\n      render() {\r\n          const { height } = this.props;\r\n          const { isDragging } = this.state;\r\n          return (React__default.createElement(Move, { cursor: \"ew-resize\", onMoveStart: bind(this.onMoveStart, this), onMove: bind(this.onMove, this), onMoveEnd: bind(this.onMoveEnd, this) },\r\n              React__default.createElement(\"g\", null,\r\n                  React__default.createElement(\"line\", { className: css$1.line, y1: \"0\", y2: height, x1: \"5\", x2: \"5\" }),\r\n                  React__default.createElement(\"rect\", { className: classNames(css$1.handle, { [css$1.dragging]: isDragging }), height: height - 10, style: { cursor: 'ew-resize' }, width: 8, y: \"5\", y1: height - 5 }),\r\n                  React__default.createElement(\"g\", { transform: `translate(-1, ${height / 2 - 10})`, style: { pointerEvents: 'none' } }, d3Array.range(5).map(i => (React__default.createElement(\"circle\", { cy: i * 5, cx: \"5\", r: \".5\", key: i, className: css$1.dot })))))));\r\n      }\r\n  }\n\n  var css$2 = \".BrushSlice-module_slice__25s30 {\\n  fill: var(--color-primary); }\\n\\n.BrushSlice-module_unsliced__2a0pj {\\n  fill: var(--color-background);\\n  opacity: 0.5;\\n  pointer-events: none; }\\n\";\n  var css$3 = {\"slice\":\"BrushSlice-module_slice__25s30\",\"unsliced\":\"BrushSlice-module_unsliced__2a0pj\"};\n  styleInject(css$2);\n\n  class BrushSlice extends React.PureComponent {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {\r\n              isDragging: false\r\n          };\r\n      }\r\n      onMoveStart() {\r\n          const { start, end, width } = this.props;\r\n          const hasNoSlice = start === 0 && end === width;\r\n          if (!hasNoSlice) {\r\n              this.setState({\r\n                  isDragging: true\r\n              });\r\n          }\r\n      }\r\n      onMove({ x }) {\r\n          const { onBrushChange, width } = this.props;\r\n          let { start, end } = this.props;\r\n          start = start + x;\r\n          end = end + x;\r\n          if (start >= 0 && end <= width) {\r\n              onBrushChange({\r\n                  start,\r\n                  end\r\n              });\r\n          }\r\n      }\r\n      onMoveEnd() {\r\n          this.setState({\r\n              isDragging: false\r\n          });\r\n      }\r\n      onHandleDrag(direction, deltaX) {\r\n          const { onBrushChange } = this.props;\r\n          let { start, end } = this.props;\r\n          start = direction === 'start' ? start + deltaX : start;\r\n          end = direction !== 'start' ? end + deltaX : end;\r\n          onBrushChange({\r\n              start,\r\n              end\r\n          });\r\n      }\r\n      render() {\r\n          const { height, start, end, width } = this.props;\r\n          const { isDragging } = this.state;\r\n          const sliceWidth = Math.max(end - start, 0);\r\n          const endSliceWidth = Math.max(width - end, 0);\r\n          const hasNoSlice = start === 0 && end === width;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              React__default.createElement(\"rect\", { className: css$3.unsliced, height: height, width: start }),\r\n              React__default.createElement(\"rect\", { transform: `translate(${end}, 0)`, className: css$3.unsliced, height: height, width: endSliceWidth }),\r\n              React__default.createElement(\"g\", { transform: `translate(${start}, 0)` },\r\n                  React__default.createElement(Move, { cursor: \"grabbing\", onMoveStart: bind(this.onMoveStart, this), onMove: bind(this.onMove, this), onMoveEnd: bind(this.onMoveEnd, this) },\r\n                      React__default.createElement(\"rect\", { className: css$3.slice, height: height, width: sliceWidth, style: {\r\n                              cursor: isDragging ? 'grabbing' : 'grab',\r\n                              opacity: hasNoSlice ? 0 : 0.1,\r\n                              pointerEvents: !hasNoSlice ? 'initial' : 'none'\r\n                          } })),\r\n                  React__default.createElement(\"g\", { transform: `translate(-4, 0)` },\r\n                      React__default.createElement(BrushHandle, { height: height, onHandleDrag: bind(this.onHandleDrag, this, 'start') })),\r\n                  React__default.createElement(\"g\", { transform: `translate(${sliceWidth - 5}, 0)` },\r\n                      React__default.createElement(BrushHandle, { height: height, onHandleDrag: bind(this.onHandleDrag, this, 'end') })))));\r\n      }\r\n  }\n\n  class Brush extends React.PureComponent {\r\n      constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n              isSlicing: false,\r\n              isPanning: false,\r\n              start: props.start || 0,\r\n              end: props.end || props.width\r\n          };\r\n      }\r\n      componentDidUpdate(prevProps) {\r\n          // If no brush is defined and width updates, update the offset of the end handle.\r\n          if (prevProps.width !== this.props.width &&\r\n              this.state.end === prevProps.width) {\r\n              this.setState({ end: this.props.width });\r\n          }\r\n          // Don't update if we are doing the slicing\r\n          if (!this.state.isSlicing && !this.state.isPanning) {\r\n              const { start, end } = this.props;\r\n              const startUpdated = start !== prevProps.start && start !== this.state.start;\r\n              const endUpdated = end !== prevProps.end && end !== this.state.end;\r\n              if (startUpdated || endUpdated) {\r\n                  this.setState(Object.assign({}, this.ensurePositionInBounds(start, end)));\r\n              }\r\n          }\r\n      }\r\n      getStartEnd(event, state = this.state) {\r\n          const { x } = this.getPositionsForPanEvent(event);\r\n          let start;\r\n          let end;\r\n          if (x < state.initial) {\r\n              start = x;\r\n              end = state.initial;\r\n          }\r\n          else {\r\n              start = state.initial;\r\n              end = x;\r\n          }\r\n          return this.ensurePositionInBounds(start, end, state);\r\n      }\r\n      getPositionsForPanEvent(event) {\r\n          const eventObj = {\r\n              target: this.ref,\r\n              clientX: event.clientX,\r\n              clientY: event.clientY\r\n          };\r\n          return getPositionForTarget(eventObj);\r\n      }\r\n      ensurePositionInBounds(newStart, newEnd, state = this.state) {\r\n          const { width } = this.props;\r\n          let start = newStart;\r\n          let end = newEnd;\r\n          if (start === undefined || start <= 0) {\r\n              start = 0;\r\n          }\r\n          if (end === undefined) {\r\n              end = width;\r\n          }\r\n          if (start > end) {\r\n              start = state.start;\r\n          }\r\n          if (end < start) {\r\n              end = state.end;\r\n          }\r\n          if (end >= width) {\r\n              end = width;\r\n          }\r\n          return { start, end };\r\n      }\r\n      onMoveStart(event) {\r\n          const positions = this.getPositionsForPanEvent(event.nativeEvent);\r\n          this.setState({\r\n              isSlicing: true,\r\n              initial: positions.x\r\n          });\r\n      }\r\n      onMove(event) {\r\n          this.setState(prev => {\r\n              const { onBrushChange } = this.props;\r\n              // Use setState callback so we can get the true previous value\r\n              // rather than the bulk updated value react will trigger\r\n              const { start, end } = this.getStartEnd(event.nativeEvent, prev);\r\n              if (onBrushChange) {\r\n                  onBrushChange({\r\n                      start,\r\n                      end\r\n                  });\r\n              }\r\n              return {\r\n                  start,\r\n                  end\r\n              };\r\n          });\r\n      }\r\n      onMoveEnd() {\r\n          this.setState({\r\n              isSlicing: false\r\n          });\r\n      }\r\n      onMoveCancel() {\r\n          const val = {\r\n              start: 0,\r\n              end: this.props.width\r\n          };\r\n          this.setState(val);\r\n          if (this.props.onBrushChange) {\r\n              this.props.onBrushChange(val);\r\n          }\r\n      }\r\n      onSliceChange(event) {\r\n          const val = this.ensurePositionInBounds(event.start, event.end);\r\n          this.setState(val);\r\n          if (this.props.onBrushChange) {\r\n              this.props.onBrushChange(val);\r\n          }\r\n      }\r\n      render() {\r\n          const { children, disabled, height, width } = this.props;\r\n          const { isSlicing, start, end } = this.state;\r\n          return (React__default.createElement(Move, { cursor: \"crosshair\", onMoveStart: bind(this.onMoveStart, this), onMove: bind(this.onMove, this), onMoveEnd: bind(this.onMoveEnd, this), onMoveCancel: bind(this.onMoveCancel, this) },\r\n              React__default.createElement(\"g\", { style: {\r\n                      pointerEvents: isSlicing ? 'none' : 'auto',\r\n                      cursor: disabled ? '' : 'crosshair'\r\n                  } },\r\n                  children,\r\n                  !disabled && (React__default.createElement(React.Fragment, null,\r\n                      React__default.createElement(\"rect\", { ref: ref => (this.ref = ref), height: height, width: width, opacity: 0 }),\r\n                      start !== undefined && end !== undefined && (React__default.createElement(BrushSlice, { start: start, end: end, height: height, width: width, onBrushChange: bind(this.onSliceChange, this) })))))));\r\n      }\r\n  }\r\n  Brush.defaultProps = {\r\n      disabled: false,\r\n      height: 0,\r\n      width: 0,\r\n      onBrushChange: () => undefined\r\n  };\n\n  class ChartBrush extends React.Component {\r\n      getBrushOffset() {\r\n          let start;\r\n          let end;\r\n          const { disabled, domain, scale } = this.props;\r\n          if (!disabled && domain) {\r\n              start = scale(domain[0]);\r\n              end = scale(domain[1]);\r\n          }\r\n          return { start, end };\r\n      }\r\n      onBrushChange(event) {\r\n          const { onBrushChange, scale, width } = this.props;\r\n          if (onBrushChange) {\r\n              let domain;\r\n              if (event.start !== undefined &&\r\n                  event.end !== undefined &&\r\n                  (event.start !== 0 || event.end !== width)) {\r\n                  const start = scale.invert(event.start);\r\n                  const end = scale.invert(event.end);\r\n                  domain = [start, end];\r\n              }\r\n              onBrushChange({\r\n                  domain\r\n              });\r\n          }\r\n      }\r\n      render() {\r\n          const _a = this.props, { scale, height, width, children } = _a, rest = __rest(_a, [\"scale\", \"height\", \"width\", \"children\"]);\r\n          return (React__default.createElement(Brush, Object.assign({}, rest, this.getBrushOffset(), { height: height, width: width, onBrushChange: bind(this.onBrushChange, this) }), children));\r\n      }\r\n  }\r\n  ChartBrush.defaultProps = {};\n\n  const ChartContainer = (_a) => {\r\n      var { className, children, center, centerX, centerY, style, margins, xAxisVisible, yAxisVisible, id } = _a, rest = __rest(_a, [\"className\", \"children\", \"center\", \"centerX\", \"centerY\", \"style\", \"margins\", \"xAxisVisible\", \"yAxisVisible\", \"id\"]);\r\n      const curId = id || rdk.useId();\r\n      const [xAxisSized, setXAxisSized] = React.useState(false);\r\n      const [yAxisSized, setYAxisSized] = React.useState(false);\r\n      const [xOffset, setYOffset] = React.useState(0);\r\n      const [yOffset, setXOffset] = React.useState(0);\r\n      const { ref, width, height } = useDimensions();\r\n      const chartSized = React.useMemo(() => {\r\n          if ((!height || !width)) {\r\n              return false;\r\n          }\r\n          // TODO: @amcdnl refactor this to account for 0-2 axises on x/y\r\n          if (xAxisVisible && !xAxisSized) {\r\n              return false;\r\n          }\r\n          if (yAxisVisible && !yAxisSized) {\r\n              return false;\r\n          }\r\n          return true;\r\n      }, [height, width, xAxisSized, xAxisVisible, yAxisVisible, yAxisSized]);\r\n      const onUpdateAxes = React.useCallback((orientation, event) => {\r\n          if (orientation === 'horizontal') {\r\n              setXAxisSized(true);\r\n          }\r\n          else {\r\n              setYAxisSized(true);\r\n          }\r\n          if (event.height) {\r\n              setYOffset(event.height);\r\n          }\r\n          if (event.width) {\r\n              setXOffset(event.width);\r\n          }\r\n      }, []);\r\n      const childProps = React.useMemo(() => (Object.assign({ chartSized, id: curId, updateAxes: onUpdateAxes, yAxisSized,\r\n          xAxisSized }, getDimension({\r\n          margins,\r\n          height,\r\n          width,\r\n          yOffset,\r\n          xOffset\r\n      }))), [\r\n          chartSized,\r\n          id,\r\n          onUpdateAxes,\r\n          yAxisSized,\r\n          xAxisSized,\r\n          margins,\r\n          height,\r\n          width,\r\n          yOffset,\r\n          xOffset\r\n      ]);\r\n      const translateX = center || centerX ? width / 2 : childProps.xMargin;\r\n      const translateY = center || centerY ? height / 2 : childProps.yMargin;\r\n      const styleHeight = rest.height || '100%';\r\n      const styleWidth = rest.width || '100%';\r\n      return (React__default.createElement(\"div\", { ref: ref, style: { height: styleHeight, width: styleWidth } }, height && width && (React__default.createElement(\"svg\", { width: width, height: height, className: className, style: style },\r\n          React__default.createElement(\"g\", { transform: `translate(${translateX}, ${translateY})` }, children(childProps))))));\r\n  };\n\n  function normalizeValue(value, maxBigInt) {\r\n      if (bigInt.isInstance(value)) {\r\n          if (maxBigInt.greater(1000000)) {\r\n              const divideBy = maxBigInt.divide(1000000);\r\n              return value.divide(divideBy).toJSNumber();\r\n          }\r\n          else {\r\n              return value.toJSNumber();\r\n          }\r\n      }\r\n      else {\r\n          return value;\r\n      }\r\n  }\r\n  function normalizeValueForFormatting(value) {\r\n      if (bigInt.isInstance(value)) {\r\n          return bigIntegerToLocaleString(value);\r\n      }\r\n      return value;\r\n  }\r\n  function getMaxBigIntegerForNested(series) {\r\n      let maxBigInteger = bigInt.one;\r\n      for (const group of series) {\r\n          const maxBigIntegerForGroup = getMaxBigIntegerForShallow(group.data);\r\n          if (maxBigIntegerForGroup.greater(maxBigInteger)) {\r\n              maxBigInteger = maxBigIntegerForGroup;\r\n          }\r\n      }\r\n      return maxBigInteger;\r\n  }\r\n  function getMaxBigIntegerForShallow(series) {\r\n      let maxBigInteger = bigInt.one;\r\n      for (const point of series) {\r\n          if (bigInt.isInstance(point.data)) {\r\n              const bigInteger = point.data;\r\n              if (bigInteger.greater(maxBigInteger)) {\r\n                  maxBigInteger = bigInteger;\r\n              }\r\n          }\r\n      }\r\n      return maxBigInteger;\r\n  }\n\n  /**\r\n   * Accepts a `ChartDataShape` and transforms it to a chart readable data shape.\r\n   *\r\n   * Example:\r\n   *\r\n   *   [{\r\n   *    key: 'Threat Intel',\r\n   *    data: [{ key:'2011', data: 25 }]\r\n   *   }]\r\n   *\r\n   * will be transformed to:\r\n   *\r\n   *  [{\r\n   *    key: 'Threat Intel',\r\n   *    data: [\r\n   *      key: 'Threat Intel',\r\n   *      x: '2011',\r\n   *      y: 25\r\n   *    ]\r\n   *  }]\r\n   */\r\n  function buildNestedChartData(series, sort = false, direction = 'vertical') {\r\n      let result = [];\r\n      const maxBigInteger = getMaxBigIntegerForNested(series);\r\n      const isVertical = direction === 'vertical';\r\n      for (const point of series) {\r\n          for (const nestedPoint of point.data) {\r\n              const key = normalizeValueForFormatting(point.key);\r\n              let idx = result.findIndex(r => {\r\n                  const left = r.key;\r\n                  if (left instanceof Date && key instanceof Date) {\r\n                      return left.getTime() === key.getTime();\r\n                  }\r\n                  return left === key;\r\n              });\r\n              if (idx === -1) {\r\n                  result.push({\r\n                      key,\r\n                      metadata: point.metadata,\r\n                      data: []\r\n                  });\r\n                  idx = result.length - 1;\r\n              }\r\n              const x = normalizeValue(isVertical ? nestedPoint.key : nestedPoint.data, maxBigInteger);\r\n              const y = normalizeValue(isVertical ? nestedPoint.data : nestedPoint.key, maxBigInteger);\r\n              result[idx].data.push({\r\n                  key,\r\n                  value: normalizeValueForFormatting(nestedPoint.data),\r\n                  metadata: nestedPoint.metadata,\r\n                  id: point.id,\r\n                  x,\r\n                  x0: isVertical ? x : 0,\r\n                  x1: x,\r\n                  y,\r\n                  y0: isVertical ? 0 : y,\r\n                  y1: y\r\n              });\r\n          }\r\n      }\r\n      // Sort the series data based on the median value\r\n      if (sort) {\r\n          result = result.sort((a, b) => {\r\n              const aMax = d3Array.median(a.data, (d) => d.y);\r\n              const bMax = d3Array.median(b.data, (d) => d.y);\r\n              return aMax < bMax ? 1 : -1;\r\n          });\r\n      }\r\n      return result;\r\n  }\r\n  function addToChartType(a, b) {\r\n      if (bigInt.isInstance(a) && bigInt.isInstance(b)) {\r\n          return a.add(b);\r\n      }\r\n      else if (a instanceof Date && typeof b === 'number') {\r\n          return new Date(a.valueOf() + b);\r\n      }\r\n      else if (typeof a === 'number' && typeof b === 'number') {\r\n          return a + b;\r\n      }\r\n      else {\r\n          throw new Error('Invalid types to addToChartTypes');\r\n      }\r\n  }\r\n  /**\r\n   * Accepts a shallow shape and normalizes it to a chart readable format.\r\n   */\r\n  function buildShallowChartData(series, direction = 'vertical', binSize = undefined) {\r\n      const result = [];\r\n      const maxBigInteger = getMaxBigIntegerForShallow(series);\r\n      const isVertical = direction === 'vertical';\r\n      for (const point of series) {\r\n          const isTuple = Array.isArray(point.data);\r\n          let k1 = point.key;\r\n          if (binSize) {\r\n              k1 = addToChartType(point.key, binSize);\r\n          }\r\n          const props = {\r\n              k0: normalizeValue(point.key, maxBigInteger),\r\n              k1: normalizeValue(k1, maxBigInteger),\r\n              v0: normalizeValue(isTuple ? point.data[0] : 0, maxBigInteger),\r\n              v1: normalizeValue(isTuple ? point.data[1] : point.data, maxBigInteger)\r\n          };\r\n          const xProp = isVertical ? 'k' : 'v';\r\n          const yProp = isVertical ? 'v' : 'k';\r\n          result.push({\r\n              key: normalizeValueForFormatting(props.k0),\r\n              value: normalizeValueForFormatting(props.v1),\r\n              metadata: point.metadata,\r\n              id: point.id,\r\n              x: props[`${xProp}1`],\r\n              x0: props[`${xProp}0`],\r\n              x1: props[`${xProp}1`],\r\n              y: props[`${yProp}1`],\r\n              y0: props[`${yProp}0`],\r\n              y1: props[`${yProp}1`]\r\n          });\r\n      }\r\n      return result;\r\n  }\n\n  /**\r\n   * Build a histogram given data set.\r\n   */\r\n  function buildBins(xScale, thresholds, data) {\r\n      const layout = d3Array.histogram()\r\n          .value((d) => d.x)\r\n          .domain(xScale.domain())\r\n          .thresholds(xScale.ticks(thresholds));\r\n      const bins = layout(data);\r\n      return bins.map(bin => ({\r\n          x0: bin.x0,\r\n          x1: bin.x1,\r\n          y: bin.length,\r\n          y0: 0,\r\n          y1: bin.length\r\n      }));\r\n  }\n\n  /**\r\n   * Given a dataset like:\r\n   *\r\n   *   [{\r\n   *    key: 'Threat Intel',\r\n   *    data: [{ key:'2011', data: 25 }]\r\n   *   }]\r\n   *\r\n   * it will transform it to:\r\n   *\r\n   *  [\r\n   *    { x: 'Theat Intel', '2011': 25 }\r\n   *  ]\r\n   */\r\n  function transformDataToStack(data) {\r\n      const result = [];\r\n      const maxBigInteger = getMaxBigIntegerForNested(data);\r\n      for (const category of data) {\r\n          for (const value of category.data) {\r\n              let idx = result.findIndex(r => {\r\n                  if (r.x instanceof Date && category.key instanceof Date) {\r\n                      return r.x.getTime() === category.key.getTime();\r\n                  }\r\n                  return r.x === category.key;\r\n              });\r\n              if (idx === -1) {\r\n                  result.push({\r\n                      metadata: category.metadata,\r\n                      x: category.key,\r\n                      formattedValues: {}\r\n                  });\r\n                  idx = result.length - 1;\r\n              }\r\n              result[idx][value.key] = normalizeValue(value.data, maxBigInteger);\r\n              result[idx].formattedValues[value.key] = normalizeValueForFormatting(value.data);\r\n          }\r\n      }\r\n      return result;\r\n  }\r\n  /**\r\n   * Translates the stack data to a chart standard dataset.\r\n   */\r\n  function transformStackToData(stackData, direction = 'vertical') {\r\n      const result = [];\r\n      const isVertical = direction === 'vertical';\r\n      // Transform the data from the d3 stack format to our internal format\r\n      for (const category of stackData) {\r\n          for (const point of category) {\r\n              const key = point.data.x;\r\n              let idx = result.findIndex(r => {\r\n                  if (r.key instanceof Date && key instanceof Date) {\r\n                      return r.key.getTime() === key.getTime();\r\n                  }\r\n                  return r.key === key;\r\n              });\r\n              if (idx === -1) {\r\n                  result.push({\r\n                      key,\r\n                      data: []\r\n                  });\r\n                  idx = result.length - 1;\r\n              }\r\n              const categoryKey = category.key;\r\n              const y = point.data[categoryKey];\r\n              const [y0, y1] = point;\r\n              result[idx].data.push({\r\n                  metadata: point.data.metadata,\r\n                  key,\r\n                  x: isVertical ? categoryKey : y1,\r\n                  x0: isVertical ? categoryKey : y0,\r\n                  x1: isVertical ? categoryKey : y1,\r\n                  y: isVertical ? y : categoryKey,\r\n                  y0: isVertical ? y0 : categoryKey,\r\n                  y1: isVertical ? y1 : categoryKey,\r\n                  value: point.data.formattedValues[categoryKey]\r\n              });\r\n          }\r\n      }\r\n      return result;\r\n  }\r\n  /**\r\n   * Builds a stack dataset from the standard data format.\r\n   */\r\n  function buildBarStackData(data, offset = 'default', direction = 'vertical') {\r\n      const keys = uniqueBy(data, d => d.data, d => d.key);\r\n      const stackData = transformDataToStack(data);\r\n      let stackFn = d3Shape.stack();\r\n      if (offset === 'expand') {\r\n          stackFn = stackFn.offset(d3Shape.stackOffsetExpand);\r\n      }\r\n      else if (offset === 'diverging') {\r\n          stackFn = stackFn.offset(d3Shape.stackOffsetDiverging);\r\n      }\r\n      const result = stackFn.keys(keys)(stackData);\r\n      return transformStackToData(result, direction);\r\n  }\n\n  /**\r\n   * Builds a stack dataset from the standard data format.\r\n   */\r\n  function buildMarimekkoData(data) {\r\n      const result = buildBarStackData(data, 'expand');\r\n      const sums = {};\r\n      // Calculate the sum for each series and the total sum\r\n      let totalSum = 0;\r\n      for (const series of result) {\r\n          const sum = series.data.reduce((acc, cur) => acc + cur.y, 0);\r\n          sums[series.key] = sum;\r\n          totalSum += sum;\r\n      }\r\n      // Calculate the x0/x1 for each series\r\n      let prev = 0;\r\n      for (const series of result) {\r\n          const x0 = prev;\r\n          const x1 = prev + sums[series.key] / totalSum;\r\n          prev = x1;\r\n          for (const point of series.data) {\r\n              point.x0 = x0;\r\n              point.x1 = x1;\r\n          }\r\n      }\r\n      return result;\r\n  }\n\n  /**\r\n   * Given a dataset like:\r\n   *\r\n   *   [{\r\n   *    key: 'Threat Intel',\r\n   *    data: [{ key:'2011', data: 25 }]\r\n   *   }]\r\n   *\r\n   * it will transform it to:\r\n   *\r\n   *  [\r\n   *    { x: '2011', 'Theat Intel': 25 }\r\n   *  ]\r\n   */\r\n  function transformDataToStack$1(data) {\r\n      const result = [];\r\n      const maxBigInteger = getMaxBigIntegerForNested(data);\r\n      for (const category of data) {\r\n          for (const value of category.data) {\r\n              let idx = result.findIndex(r => {\r\n                  if (r.x instanceof Date && value.key instanceof Date) {\r\n                      return r.x.getTime() === value.key.getTime();\r\n                  }\r\n                  return r.x === value.key;\r\n              });\r\n              if (idx === -1) {\r\n                  result.push({\r\n                      x: value.key,\r\n                      formattedValues: {}\r\n                  });\r\n                  idx = result.length - 1;\r\n              }\r\n              result[idx][category.key] = normalizeValue(value.data, maxBigInteger);\r\n              result[idx].formattedValues[category.key] = normalizeValueForFormatting(value.data);\r\n          }\r\n      }\r\n      return result;\r\n  }\r\n  /**\r\n   * Translates the stack data to a chart standard dataset.\r\n   */\r\n  function transformStackToData$1(stackData) {\r\n      const result = [];\r\n      for (const category of stackData) {\r\n          const series = [];\r\n          for (const point of category) {\r\n              const [y0, y1] = point;\r\n              const x = point.data.x;\r\n              series.push({\r\n                  key: category.key,\r\n                  x,\r\n                  x0: x,\r\n                  x1: x,\r\n                  y: y1 - y0,\r\n                  y0,\r\n                  y1,\r\n                  value: point.data.formattedValues[category.key]\r\n              });\r\n          }\r\n          result.push({\r\n              key: category.key,\r\n              data: series\r\n          });\r\n      }\r\n      return result;\r\n  }\r\n  /**\r\n   * Builds a stack dataset from the standard data format.\r\n   */\r\n  function buildStackData(data, normalized = false) {\r\n      const keys = uniqueBy(data, d => d.key);\r\n      const stackData = transformDataToStack$1(data);\r\n      const stackFn = !normalized ? d3Shape.stack() : d3Shape.stack().offset(d3Shape.stackOffsetExpand);\r\n      const result = stackFn.keys(keys)(stackData);\r\n      return transformStackToData$1(result);\r\n  }\n\n  const buildWaterfall = (series, direction = 'vertical', binSize = undefined) => {\r\n      const data = buildShallowChartData(series, direction, binSize);\r\n      const isVertical = direction === 'vertical';\r\n      const v = isVertical ? 'y' : 'x';\r\n      let cumulative = 0;\r\n      for (const point of data) {\r\n          point[`${v}0`] = cumulative;\r\n          cumulative += point[v];\r\n          point[`${v}1`] = cumulative;\r\n          point[v] = cumulative;\r\n      }\r\n      return data;\r\n  };\n\n  class Pan extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.prevXPosition = 0;\r\n          this.prevYPosition = 0;\r\n          this.started = false;\r\n          this.deltaX = 0;\r\n          this.deltaY = 0;\r\n          this.childRef = React.createRef();\r\n          this.onMouseDown = (event) => {\r\n              // Stop at disabled\r\n              if (this.props.disabled) {\r\n                  return;\r\n              }\r\n              // Ignore right click\r\n              if (event.which === 3) {\r\n                  return;\r\n              }\r\n              // If global panning is turned off, it will only pan on the container\r\n              if (!this.props.globalPanning &&\r\n                  event.target &&\r\n                  !event.target.classList.contains('pan-container')) {\r\n                  return;\r\n              }\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              toggleTextSelection(false);\r\n              this.started = false;\r\n              // Always bind event so we cancel movement even if no action was taken\r\n              window.addEventListener('mousemove', this.onMouseMove);\r\n              window.addEventListener('mouseup', this.onMouseUp);\r\n          };\r\n          this.onMouseMove = (event) => {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              this.deltaX = this.deltaX + event.movementX;\r\n              this.deltaY = this.deltaY + event.movementY;\r\n              if (this.checkThreshold()) {\r\n                  if (this.props.cursor) {\r\n                      document.body.style['cursor'] = this.props.cursor;\r\n                  }\r\n                  this.deltaX = 0;\r\n                  this.deltaY = 0;\r\n                  this.started = true;\r\n                  this.onPanStart(event, 'mouse');\r\n              }\r\n              else {\r\n                  this.pan(event.movementX, event.movementY, event, 'mouse');\r\n              }\r\n          };\r\n          this.onMouseUp = (event) => {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              this.disposeHandlers();\r\n              toggleTextSelection(true);\r\n              if (this.started) {\r\n                  this.onPanEnd(event, 'mouse');\r\n              }\r\n              else {\r\n                  this.props.onPanCancel({\r\n                      nativeEvent: event,\r\n                      source: 'mouse'\r\n                  });\r\n              }\r\n          };\r\n          this.onTouchStart = (event) => {\r\n              // Stop at disabled\r\n              if (this.props.disabled) {\r\n                  return;\r\n              }\r\n              // Reqquire more than one touch\r\n              if (event.touches.length !== 1) {\r\n                  return;\r\n              }\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              toggleTextSelection(false);\r\n              this.started = false;\r\n              this.prevXPosition = event.touches[0].clientX;\r\n              this.prevYPosition = event.touches[0].clientY;\r\n              // Always bind event so we cancel movement even if no action was taken\r\n              window.addEventListener('touchmove', this.onTouchMove);\r\n              window.addEventListener('touchend', this.onTouchEnd);\r\n          };\r\n          this.onTouchMove = (event) => {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              // Calculate delta from previous position and current\r\n              const x = event.touches[0].clientX;\r\n              const y = event.touches[0].clientY;\r\n              const deltaX = x - this.prevXPosition;\r\n              const deltaY = y - this.prevYPosition;\r\n              this.deltaX = this.deltaX + deltaX;\r\n              this.deltaY = this.deltaY + deltaY;\r\n              if (this.checkThreshold()) {\r\n                  this.deltaX = 0;\r\n                  this.deltaY = 0;\r\n                  this.started = true;\r\n                  this.onPanStart(event, 'touch');\r\n              }\r\n              else {\r\n                  const contrained = this.pan(deltaX, deltaY, event, 'touch');\r\n                  if (!contrained) {\r\n                      this.prevXPosition = x;\r\n                      this.prevYPosition = y;\r\n                  }\r\n              }\r\n          };\r\n          this.onTouchEnd = (event) => {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              this.disposeHandlers();\r\n              toggleTextSelection(true);\r\n              if (this.started) {\r\n                  this.onPanEnd(event, 'touch');\r\n              }\r\n              else {\r\n                  this.props.onPanCancel({\r\n                      nativeEvent: event,\r\n                      source: 'touch'\r\n                  });\r\n              }\r\n          };\r\n      }\r\n      componentDidMount() {\r\n          if (this.childRef.current) {\r\n              this.childRef.current.addEventListener('mousedown', this.onMouseDown, {\r\n                  passive: false\r\n              });\r\n              this.childRef.current.addEventListener('touchstart', this.onTouchStart, {\r\n                  passive: false\r\n              });\r\n          }\r\n      }\r\n      componentWillUnmount() {\r\n          this.disposeHandlers();\r\n          if (this.childRef.current) {\r\n              this.childRef.current.removeEventListener('mousedown', this.onMouseDown);\r\n              this.childRef.current.removeEventListener('touchstart', this.onTouchStart);\r\n          }\r\n      }\r\n      disposeHandlers() {\r\n          window.removeEventListener('mousemove', this.onMouseMove);\r\n          window.removeEventListener('mouseup', this.onMouseUp);\r\n          window.removeEventListener('touchmove', this.onTouchMove);\r\n          window.removeEventListener('touchend', this.onTouchEnd);\r\n          // Reset cursor on body back to original\r\n          document.body.style['cursor'] = 'inherit';\r\n          toggleTextSelection(true);\r\n      }\r\n      checkThreshold() {\r\n          const { threshold } = this.props;\r\n          return (!this.started &&\r\n              (Math.abs(this.deltaX) > threshold || Math.abs(this.deltaY) > threshold));\r\n      }\r\n      onPanStart(nativeEvent, source) {\r\n          this.props.onPanStart({\r\n              nativeEvent,\r\n              source\r\n          });\r\n      }\r\n      onPanMove(x, y, source, nativeEvent) {\r\n          this.props.onPanMove({\r\n              source,\r\n              nativeEvent,\r\n              x,\r\n              y\r\n          });\r\n      }\r\n      onPanEnd(nativeEvent, source) {\r\n          const { onPanEnd } = this.props;\r\n          onPanEnd({\r\n              nativeEvent,\r\n              source\r\n          });\r\n      }\r\n      pan(x, y, nativeEvent, source) {\r\n          const { scale, constrain, width, height, matrix } = this.props;\r\n          const newMatrix = transformationMatrix.smoothMatrix(transformationMatrix.transform(matrix, transformationMatrix.translate(x / scale, y / scale)), 100);\r\n          const shouldConstrain = constrain && constrainMatrix(height, width, newMatrix);\r\n          if (!shouldConstrain) {\r\n              this.onPanMove(newMatrix.e, newMatrix.f, source, nativeEvent);\r\n          }\r\n          return shouldConstrain;\r\n      }\r\n      render() {\r\n          return React__default.createElement(\"g\", { ref: this.childRef }, this.props.children);\r\n      }\r\n  }\r\n  Pan.defaultProps = {\r\n      x: 0,\r\n      y: 0,\r\n      disabled: false,\r\n      scale: 1,\r\n      threshold: 10,\r\n      globalPanning: true,\r\n      onPanStart: () => undefined,\r\n      onPanMove: () => undefined,\r\n      onPanEnd: () => undefined,\r\n      onPanCancel: () => undefined\r\n  };\n\n  /**\r\n   * Gets the position between a given set of points.\r\n   */\r\n  const getMidpoint = (pointA, pointB) => ({\r\n      x: (pointA.x + pointB.x) / 2,\r\n      y: (pointA.y + pointB.y) / 2\r\n  });\r\n  /**\r\n   * Gets the distance between a given set of points.\r\n   */\r\n  const getDistanceBetweenPoints = (pointA, pointB) => Math.sqrt(Math.pow(pointB.y - pointA.y, 2) + Math.pow(pointB.x - pointA.x, 2));\r\n  /**\r\n   * Get touch points.\r\n   */\r\n  function getTouchPoints(event, node) {\r\n      const { left, top } = node.getBoundingClientRect();\r\n      const [pointA, pointB] = [...event.touches].map(touch => ({\r\n          x: touch.clientX - Math.round(left),\r\n          y: touch.clientY - Math.round(top)\r\n      }));\r\n      const distance = getDistanceBetweenPoints(pointA, pointB);\r\n      const midpoint = getMidpoint(pointA, pointB);\r\n      return {\r\n          pointA,\r\n          pointB,\r\n          distance,\r\n          midpoint\r\n      };\r\n  }\n\n  class Zoom extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.childRef = React.createRef();\r\n          this.onMouseWheel = event => {\r\n              const { disableMouseWheel, requireZoomModifier, matrix, onZoomEnd } = this.props;\r\n              if (disableMouseWheel) {\r\n                  return false;\r\n              }\r\n              const hasModifier = event.metaKey || event.ctrlKey;\r\n              if (requireZoomModifier && !hasModifier) {\r\n                  return false;\r\n              }\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              const point = getPointFromMatrix(event, matrix);\r\n              if (point) {\r\n                  const { x, y } = point;\r\n                  const step = this.getStep(event.deltaY);\r\n                  this.scale(x, y, step, event);\r\n                  // Do small timeout to 'guess' when its done zooming\r\n                  clearTimeout(this.timeout);\r\n                  this.timeout = setTimeout(() => onZoomEnd(), 500);\r\n              }\r\n          };\r\n          this.onTouchStart = (event) => {\r\n              if (event.touches.length === 2) {\r\n                  event.preventDefault();\r\n                  event.stopPropagation();\r\n                  toggleTextSelection(false);\r\n                  this.firstTouch = getTouchPoints(event, this.childRef.current);\r\n                  this.lastDistance = this.firstTouch.distance;\r\n                  window.addEventListener('touchmove', this.onTouchMove);\r\n                  window.addEventListener('touchend', this.onTouchEnd);\r\n              }\r\n          };\r\n          this.onTouchMove = (event) => {\r\n              if (event.touches.length === 2) {\r\n                  event.preventDefault();\r\n                  event.stopPropagation();\r\n                  const { distance } = getTouchPoints(event, this.childRef.current);\r\n                  const distanceFactor = distance / this.lastDistance;\r\n                  const point = transformationMatrix.applyToPoint(transformationMatrix.inverse(this.props.matrix), {\r\n                      x: this.firstTouch.midpoint.x,\r\n                      y: this.firstTouch.midpoint.y\r\n                  });\r\n                  if (point.x && point.y) {\r\n                      const outside = this.scale(point.x, point.y, distanceFactor, event);\r\n                      if (!outside) {\r\n                          this.lastDistance = distance;\r\n                      }\r\n                  }\r\n              }\r\n          };\r\n          this.onTouchEnd = (event) => {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              window.removeEventListener('touchmove', this.onTouchMove);\r\n              window.removeEventListener('touchend', this.onTouchEnd);\r\n              toggleTextSelection(true);\r\n              this.props.onZoomEnd();\r\n          };\r\n      }\r\n      componentDidMount() {\r\n          const { disabled, disableMouseWheel } = this.props;\r\n          const ref = this.childRef.current;\r\n          if (!disabled && ref) {\r\n              if (!disableMouseWheel) {\r\n                  ref.addEventListener('mousewheel', this.onMouseWheel, {\r\n                      passive: false\r\n                  });\r\n              }\r\n              ref.addEventListener('touchstart', this.onTouchStart, { passive: false });\r\n          }\r\n      }\r\n      componentWillUnmount() {\r\n          window.removeEventListener('touchmove', this.onTouchMove);\r\n          window.removeEventListener('touchend', this.onTouchEnd);\r\n          cancelAnimationFrame(this.rqf);\r\n          clearTimeout(this.timeout);\r\n          const ref = this.childRef.current;\r\n          if (ref) {\r\n              ref.removeEventListener('mousewheel', this.onMouseWheel);\r\n              ref.removeEventListener('touchstart', this.onTouchStart);\r\n          }\r\n          toggleTextSelection(true);\r\n      }\r\n      getStep(delta) {\r\n          const { scaleFactor } = this.props;\r\n          return -delta > 0 ? scaleFactor + 1 : 1 - scaleFactor;\r\n      }\r\n      scale(x, y, step, nativeEvent) {\r\n          const { minZoom, maxZoom, onZoom, matrix } = this.props;\r\n          const outside = isZoomLevelGoingOutOfBounds({\r\n              d: matrix.a,\r\n              scaleFactorMin: minZoom,\r\n              scaleFactorMax: maxZoom\r\n          }, step);\r\n          if (!outside) {\r\n              const newMatrix = transformationMatrix.smoothMatrix(transformationMatrix.transform(matrix, transformationMatrix.translate(x, y), transformationMatrix.scale(step, step), transformationMatrix.translate(-x, -y)), 100);\r\n              this.rqf = requestAnimationFrame(() => {\r\n                  onZoom({\r\n                      scale: newMatrix.a,\r\n                      x: newMatrix.e,\r\n                      y: newMatrix.f,\r\n                      nativeEvent\r\n                  });\r\n              });\r\n          }\r\n          return outside;\r\n      }\r\n      render() {\r\n          const { style, children } = this.props;\r\n          return (React__default.createElement(\"g\", { ref: this.childRef, style: style }, children));\r\n      }\r\n  }\r\n  Zoom.defaultProps = {\r\n      x: 0,\r\n      y: 0,\r\n      scale: 1,\r\n      scaleFactor: 0.1,\r\n      minZoom: 1,\r\n      maxZoom: 10\r\n  };\n\n  var css$4 = \".DiscreteLegend-module_container__2mEDZ {\\n  display: flex;\\n  overflow: auto; }\\n  .DiscreteLegend-module_container__2mEDZ.DiscreteLegend-module_horizontal__1X-xR {\\n    align-items: center;\\n    flex-direction: row; }\\n  .DiscreteLegend-module_container__2mEDZ.DiscreteLegend-module_vertical__2VWFB {\\n    flex-direction: column; }\\n\";\n  var css$5 = {\"container\":\"DiscreteLegend-module_container__2mEDZ\",\"horizontal\":\"DiscreteLegend-module_horizontal__1X-xR\",\"vertical\":\"DiscreteLegend-module_vertical__2VWFB\"};\n  styleInject(css$4);\n\n  class DiscreteLegend extends React.Component {\r\n      render() {\r\n          const { entries, orientation, style } = this.props;\r\n          const className = classNames(css$5.container, this.props.className, {\r\n              [css$5.horizontal]: orientation === 'horizontal',\r\n              [css$5.vertical]: orientation === 'vertical'\r\n          });\r\n          return (React__default.createElement(\"div\", { className: className, style: style }, entries.map((entry, index) => (React__default.createElement(CloneElement, { element: entry, key: `dle-${index}` })))));\r\n      }\r\n  }\r\n  DiscreteLegend.defaultProps = {\r\n      orientation: 'vertical'\r\n  };\n\n  var css$6 = \".DiscreteLegendEntry-module_entry__2t_fB {\\n  display: flex;\\n  color: var(--color-on-primary);\\n  padding: 8px;\\n  will-change: transparency;\\n  transition: opacity 150ms ease-in; }\\n  .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_vertical__hlqTw {\\n    flex-direction: column;\\n    text-align: center; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_vertical__hlqTw:first-child {\\n      padding-top: 0; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_vertical__hlqTw:last-child {\\n      padding-bottom: 0; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_vertical__hlqTw svg {\\n      display: block;\\n      margin: 0 auto; }\\n  .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_horizontal__22RL3 {\\n    align-items: center;\\n    flex-direction: row; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_horizontal__22RL3:first-child {\\n      padding-left: 0; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_horizontal__22RL3:last-child {\\n      padding-right: 0; }\\n    .DiscreteLegendEntry-module_entry__2t_fB.DiscreteLegendEntry-module_horizontal__22RL3 .DiscreteLegendEntry-module_label__1eXDb {\\n      margin-left: 8px; }\\n  .DiscreteLegendEntry-module_entry__2t_fB .DiscreteLegendEntry-module_label__1eXDb {\\n    font-size: 12px; }\\n  .DiscreteLegendEntry-module_entry__2t_fB svg {\\n    width: 15px;\\n    height: 15px; }\\n\";\n  var css$7 = {\"entry\":\"DiscreteLegendEntry-module_entry__2t_fB\",\"vertical\":\"DiscreteLegendEntry-module_vertical__hlqTw\",\"horizontal\":\"DiscreteLegendEntry-module_horizontal__22RL3\",\"label\":\"DiscreteLegendEntry-module_label__1eXDb\"};\n  styleInject(css$6);\n\n  var css$8 = \".DiscreteLegendSymbol-module_symbol__jSdtc {\\n  width: 15px;\\n  height: 3px; }\\n\";\n  var css$9 = {\"symbol\":\"DiscreteLegendSymbol-module_symbol__jSdtc\"};\n  styleInject(css$8);\n\n  class DiscreteLegendSymbol extends React.PureComponent {\r\n      render() {\r\n          const { className, color } = this.props;\r\n          return (React__default.createElement(\"div\", { className: classNames(css$9.symbol, className), style: { background: color } }));\r\n      }\r\n  }\r\n  DiscreteLegendSymbol.defaultProps = {};\n\n  class DiscreteLegendEntry extends React.Component {\r\n      render() {\r\n          const { label, symbol, onMouseEnter, onMouseLeave, title, color, style, onClick, orientation } = this.props;\r\n          const className = classNames(css$7.entry, this.props.className, {\r\n              [css$7.vertical]: orientation === 'vertical',\r\n              [css$7.horizontal]: orientation === 'horizontal'\r\n          });\r\n          return (React__default.createElement(\"div\", { title: title, className: className, onClick: onClick, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, style: style },\r\n              React__default.createElement(CloneElement, { element: symbol, color: color }),\r\n              React__default.createElement(\"span\", { className: css$7.label }, label)));\r\n      }\r\n  }\r\n  DiscreteLegendEntry.defaultProps = {\r\n      symbol: React__default.createElement(DiscreteLegendSymbol, null),\r\n      orientation: 'horizontal',\r\n      onMouseEnter: () => undefined,\r\n      onMouseLeave: () => undefined,\r\n      onClick: () => undefined\r\n  };\n\n  var css$a = \".SequentialLegend-module_container__3zYTi {\\n  display: flex;\\n  height: 100%; }\\n  .SequentialLegend-module_container__3zYTi.SequentialLegend-module_vertical__1GIoN {\\n    flex-direction: column;\\n    max-width: 55px; }\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_vertical__1GIoN .SequentialLegend-module_start__2Ed_Q,\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_vertical__1GIoN .SequentialLegend-module_end__1vA4W {\\n      text-align: center;\\n      padding: 5px 0;\\n      width: 100%; }\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_vertical__1GIoN .SequentialLegend-module_gradient__ebuYY {\\n      width: 25px;\\n      margin: 0 auto; }\\n  .SequentialLegend-module_container__3zYTi.SequentialLegend-module_horizontal__ljDoI {\\n    flex-direction: row-reverse; }\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_horizontal__ljDoI .SequentialLegend-module_start__2Ed_Q,\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_horizontal__ljDoI .SequentialLegend-module_end__1vA4W {\\n      max-width: 20%; }\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_horizontal__ljDoI .SequentialLegend-module_start__2Ed_Q {\\n      text-align: right;\\n      padding-left: 5px; }\\n    .SequentialLegend-module_container__3zYTi.SequentialLegend-module_horizontal__ljDoI .SequentialLegend-module_end__1vA4W {\\n      text-align: left;\\n      padding-right: 5px; }\\n  .SequentialLegend-module_container__3zYTi .SequentialLegend-module_gradient__ebuYY {\\n    flex: 1;\\n    width: 100%;\\n    border-radius: 2px; }\\n  .SequentialLegend-module_container__3zYTi .SequentialLegend-module_start__2Ed_Q,\\n  .SequentialLegend-module_container__3zYTi .SequentialLegend-module_end__1vA4W {\\n    color: var(--color-on-primary);\\n    font-size: 12px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n\";\n  var css$b = {\"container\":\"SequentialLegend-module_container__3zYTi\",\"vertical\":\"SequentialLegend-module_vertical__1GIoN\",\"start\":\"SequentialLegend-module_start__2Ed_Q\",\"end\":\"SequentialLegend-module_end__1vA4W\",\"gradient\":\"SequentialLegend-module_gradient__ebuYY\",\"horizontal\":\"SequentialLegend-module_horizontal__ljDoI\"};\n  styleInject(css$a);\n\n  class SequentialLegend extends React.PureComponent {\r\n      render() {\r\n          const { orientation, className, style, colorScheme, data } = this.props;\r\n          // Generate the color gradient\r\n          const color = chroma\r\n              .scale(colorScheme)\r\n              .colors(10)\r\n              .reverse()\r\n              .map((c, i) => `${c} ${i * 10}%`)\r\n              .join(',');\r\n          // Get the extent from the data passed\r\n          const [end, start] = d3Array.extent(uniqueBy(data, d => d.data, d => d.data));\r\n          // Get direction\r\n          const gradientDir = orientation === 'vertical' ? '' : 'to left,';\r\n          return (React__default.createElement(\"div\", { style: style, className: classNames(css$b.container, className, {\r\n                  [css$b.vertical]: orientation === 'vertical',\r\n                  [css$b.horizontal]: orientation === 'horizontal'\r\n              }) },\r\n              React__default.createElement(\"div\", { className: css$b.start }, formatValue(start)),\r\n              React__default.createElement(\"div\", { className: css$b.gradient, style: {\r\n                      background: `linear-gradient(${gradientDir}${color})`\r\n                  } }),\r\n              React__default.createElement(\"div\", { className: css$b.end }, formatValue(end))));\r\n      }\r\n  }\r\n  SequentialLegend.defaultProps = {\r\n      colorScheme: ['rgba(28, 107, 86, 0.5)', '#2da283'],\r\n      orientation: 'vertical'\r\n  };\n\n  var css$c = \".Gridline-module_gridLine__3cVfZ {\\n  stroke-dasharray: 2 5;\\n  shape-rendering: crispEdges;\\n  pointer-events: none; }\\n\";\n  var css$d = {\"gridLine\":\"Gridline-module_gridLine__3cVfZ\"};\n  styleInject(css$c);\n\n  class Gridline extends React.PureComponent {\r\n      getCoords() {\r\n          const { direction, data, height, width, scale, strokeWidth, strokeColor, strokeDasharray } = this.props;\r\n          const pos = scale(data);\r\n          if (direction === 'x') {\r\n              return {\r\n                  x1: pos,\r\n                  x2: pos,\r\n                  y1: 0,\r\n                  y2: height,\r\n                  fill: 'none',\r\n                  stroke: strokeColor,\r\n                  strokeDasharray,\r\n                  strokeWidth\r\n              };\r\n          }\r\n          else {\r\n              return {\r\n                  y1: pos,\r\n                  y2: pos,\r\n                  x1: 0,\r\n                  x2: width,\r\n                  fill: 'none',\r\n                  stroke: strokeColor,\r\n                  strokeDasharray,\r\n                  strokeWidth\r\n              };\r\n          }\r\n      }\r\n      render() {\r\n          const coords = this.getCoords();\r\n          return React__default.createElement(\"line\", Object.assign({ className: css$d.gridLine }, coords));\r\n      }\r\n  }\r\n  Gridline.defaultProps = {\r\n      strokeWidth: 1,\r\n      direction: 'all',\r\n      strokeColor: 'rgba(153, 153, 153, 0.5)'\r\n  };\n\n  class GridlineSeries extends React.Component {\r\n      getGridlines() {\r\n          const { yScale, xScale, yAxis, xAxis, height, width } = this.props;\r\n          return {\r\n              yAxisGrid: getTicks(yScale, yAxis.tickSeries.props.tickValues, yAxis.type, getMaxTicks(yAxis.tickSeries.props.tickSize, height), yAxis.tickSeries.props.interval),\r\n              xAxisGrid: getTicks(xScale, xAxis.tickSeries.props.tickValues, xAxis.type, getMaxTicks(xAxis.tickSeries.props.tickSize, width), xAxis.tickSeries.props.interval)\r\n          };\r\n      }\r\n      renderSeries(yAxisGrid, xAxisGrid, element, type) {\r\n          const { xScale, yScale } = this.props;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              this.shouldRenderY(element.props.direction) &&\r\n                  this.renderGroup(element, yAxisGrid, yScale, 'y', type),\r\n              this.shouldRenderX(element.props.direction) &&\r\n                  this.renderGroup(element, xAxisGrid, xScale, 'x', type)));\r\n      }\r\n      shouldRenderY(direction) {\r\n          return direction === 'all' || direction === 'y';\r\n      }\r\n      shouldRenderX(direction) {\r\n          return direction === 'all' || direction === 'x';\r\n      }\r\n      getSkipIndex(direction) {\r\n          const { yAxis, xAxis } = this.props;\r\n          if ((direction === 'x' &&\r\n              yAxis.axisLine !== null &&\r\n              yAxis.position === 'start') ||\r\n              (direction === 'y' && xAxis.axisLine !== null && xAxis.position === 'end')) {\r\n              return 0;\r\n          }\r\n          return null;\r\n      }\r\n      renderGroup(element, grid, scale, direction, type) {\r\n          const { height, width } = this.props;\r\n          const skipIdx = this.getSkipIndex(direction);\r\n          return grid.map((point, index) => (React__default.createElement(React.Fragment, { key: `${type}-${direction}-${index}` }, index !== skipIdx && (React__default.createElement(CloneElement, { element: element, index: index, scale: scale, data: point, height: height, width: width, direction: direction })))));\r\n      }\r\n      render() {\r\n          const { line, stripe } = this.props;\r\n          const { yAxisGrid, xAxisGrid } = this.getGridlines();\r\n          return (React__default.createElement(\"g\", { style: { pointerEvents: 'none' } },\r\n              line && this.renderSeries(yAxisGrid, xAxisGrid, line, 'line'),\r\n              stripe && this.renderSeries(yAxisGrid, xAxisGrid, stripe, 'stripe')));\r\n      }\r\n  }\r\n  GridlineSeries.defaultProps = {\r\n      line: React__default.createElement(Gridline, null),\r\n      stripe: null\r\n  };\n\n  var css$e = \".GridStripe-module_gridStripe__1UlRd {\\n  pointer-events: none; }\\n\";\n  var css$f = {\"gridStripe\":\"GridStripe-module_gridStripe__1UlRd\"};\n  styleInject(css$e);\n\n  class GridStripe extends React.PureComponent {\r\n      getCoords() {\r\n          const { position, data, height, width, scale, fill, index } = this.props;\r\n          const pos = scale(data);\r\n          const stripeFill = index % 2 ? 'none' : fill;\r\n          const dim = scale.bandwidth();\r\n          if (position === 'vertical') {\r\n              return {\r\n                  y: 0,\r\n                  x: pos,\r\n                  height: height,\r\n                  width: dim,\r\n                  fill: stripeFill\r\n              };\r\n          }\r\n          else {\r\n              return {\r\n                  y: pos,\r\n                  x: 0,\r\n                  height: dim,\r\n                  width,\r\n                  fill: stripeFill\r\n              };\r\n          }\r\n      }\r\n      render() {\r\n          const coords = this.getCoords();\r\n          return React__default.createElement(\"rect\", Object.assign({ className: css$f.gridStripe }, coords));\r\n      }\r\n  }\r\n  GridStripe.defaultProps = {\r\n      fill: '#2a3138'\r\n  };\n\n  var css$g = \".MarkLine-module_markLine__Uilm3 {\\n  pointer-events: none;\\n  stroke-dasharray: 4, 4;\\n  stroke-linecap: round; }\\n\";\n  var css$h = {\"markLine\":\"MarkLine-module_markLine__Uilm3\"};\n  styleInject(css$g);\n\n  class MarkLine extends React.PureComponent {\r\n      render() {\r\n          const { pointX, height, strokeColor, strokeWidth } = this.props;\r\n          return (React__default.createElement(\"line\", { stroke: strokeColor, strokeWidth: strokeWidth, y1: \"0\", vectorEffect: \"non-scaling-stroke\", y2: height, x1: pointX, x2: pointX, className: css$h.markLine }));\r\n      }\r\n  }\r\n  MarkLine.defaultProps = {\r\n      strokeWidth: 1,\r\n      strokeColor: '#eee'\r\n  };\n\n  class GradientStop extends React.PureComponent {\r\n      render() {\r\n          const { offset, stopOpacity, color } = this.props;\r\n          return React__default.createElement(\"stop\", { offset: offset, stopOpacity: stopOpacity, stopColor: color });\r\n      }\r\n  }\r\n  GradientStop.defaultProps = {\r\n      stopOpacity: 1\r\n  };\n\n  class Gradient extends React.Component {\r\n      getDirection() {\r\n          if (this.props.direction === 'vertical') {\r\n              return {\r\n                  x1: '10%',\r\n                  x2: '10%',\r\n                  y1: '100%',\r\n                  y2: '0%'\r\n              };\r\n          }\r\n          else {\r\n              return {\r\n                  y1: '0%',\r\n                  y2: '0%',\r\n                  x1: '0%',\r\n                  x2: '100%'\r\n              };\r\n          }\r\n      }\r\n      render() {\r\n          const { id, stops, color } = this.props;\r\n          const direction = this.getDirection();\r\n          return (React__default.createElement(\"linearGradient\", Object.assign({ spreadMethod: \"pad\", id: id }, direction), stops.map((stop, index) => (React__default.createElement(CloneElement, { element: stop, key: `gradient-${index}`, color: stop.props.color || color })))));\r\n      }\r\n  }\r\n  Gradient.defaultProps = {\r\n      direction: 'vertical',\r\n      stops: [\r\n          React__default.createElement(GradientStop, { offset: \"0%\", stopOpacity: 0.3, key: \"start\" }),\r\n          React__default.createElement(GradientStop, { offset: \"80%\", stopOpacity: 1, key: \"stop\" })\r\n      ]\r\n  };\n\n  class RadialGradient extends React.Component {\r\n      render() {\r\n          const { id, stops, color, radius } = this.props;\r\n          return (React__default.createElement(\"radialGradient\", { id: id, cx: 0, cy: 0, r: radius, gradientUnits: \"userSpaceOnUse\" }, stops.map((stop, index) => (React__default.createElement(CloneElement, { element: stop, key: `gradient-${index}`, color: color })))));\r\n      }\r\n  }\r\n  RadialGradient.defaultProps = {\r\n      radius: '30%',\r\n      stops: [\r\n          React__default.createElement(GradientStop, { offset: \"0%\", stopOpacity: 0.2, key: \"start\" }),\r\n          React__default.createElement(GradientStop, { offset: \"80%\", stopOpacity: 0.7, key: \"stop\" })\r\n      ]\r\n  };\n\n  class Mask extends React.PureComponent {\r\n      render() {\r\n          const { id, fill } = this.props;\r\n          return (React__default.createElement(\"mask\", { id: id },\r\n              React__default.createElement(\"rect\", { x: \"0\", y: \"0\", width: \"100%\", height: \"100%\", fill: fill })));\r\n      }\r\n  }\n\n  class Stripes extends React.PureComponent {\r\n      render() {\r\n          const { id, fill } = this.props;\r\n          return (React__default.createElement(\"pattern\", { id: id, width: \"4\", height: \"4\", patternUnits: \"userSpaceOnUse\", patternTransform: \"rotate(45)\" },\r\n              React__default.createElement(\"rect\", { className: \"area-stripe\", width: \"1\", height: \"4\", fill: fill })));\r\n      }\r\n  }\r\n  Stripes.defaultProps = {};\n\n  var css$i = \".TooltipTemplate-module_label__jiS7i {\\n  font-size: 16px;\\n  margin-bottom: 3px;\\n  color: var(--color-on-background); }\\n\\n.TooltipTemplate-module_value__1B9bc {\\n  font-size: 13px;\\n  color: var(--color-on-background);\\n  opacity: 0.7; }\\n\\n.TooltipTemplate-module_subValue__10sXY {\\n  display: block;\\n  text-align: left;\\n  padding: 3px 5px; }\\n  .TooltipTemplate-module_subValue__10sXY .TooltipTemplate-module_subValueColor__1cUVB {\\n    width: 5px;\\n    height: 15px;\\n    margin-right: 8px;\\n    display: inline-block; }\\n  .TooltipTemplate-module_subValue__10sXY .TooltipTemplate-module_subValueName__jhmgI {\\n    margin-right: 5px; }\\n\";\n  var css$j = {\"label\":\"TooltipTemplate-module_label__jiS7i\",\"value\":\"TooltipTemplate-module_value__1B9bc\",\"subValue\":\"TooltipTemplate-module_subValue__10sXY\",\"subValueColor\":\"TooltipTemplate-module_subValueColor__1cUVB\",\"subValueName\":\"TooltipTemplate-module_subValueName__jhmgI\"};\n  styleInject(css$i);\n\n  const TooltipTemplate = ({ value, color, className }) => {\r\n      if (!value) {\r\n          return null;\r\n      }\r\n      const renderValues = (data, index) => {\r\n          const fill = color(data, index);\r\n          return (React__default.createElement(\"span\", { className: css$j.subValue },\r\n              React__default.createElement(\"span\", { className: css$j.subValueColor, style: { backgroundColor: fill } }),\r\n              React__default.createElement(\"span\", { className: css$j.subValueName },\r\n                  formatValue(data.key || data.x),\r\n                  \":\"),\r\n              React__default.createElement(\"span\", null, formatValue(data.value || data.y))));\r\n      };\r\n      const renderMultiple = (value) => {\r\n          const excessCount = value.data.length - 15;\r\n          const pagedValues = value.data.slice(0, 15);\r\n          return (React__default.createElement(React.Fragment, null,\r\n              pagedValues.map((point, i) => (React__default.createElement(React.Fragment, { key: i }, renderValues(point, i)))),\r\n              excessCount > 0 && React__default.createElement(\"div\", null,\r\n                  \"...\",\r\n                  excessCount,\r\n                  \" more...\")));\r\n      };\r\n      const isMultiple = Array.isArray(value.data);\r\n      return (React__default.createElement(\"div\", { className: className },\r\n          React__default.createElement(\"div\", { className: css$j.label }, formatValue(value.x)),\r\n          React__default.createElement(\"div\", { className: css$j.value },\r\n              isMultiple && renderMultiple(value),\r\n              !isMultiple && (React__default.createElement(React.Fragment, null, formatValue(value.value ||\r\n                  value.y))))));\r\n  };\n\n  const ChartTooltip = (_a) => {\r\n      var { content = React__default.createElement(TooltipTemplate, null), value, data, color } = _a, rest = __rest(_a, [\"content\", \"value\", \"data\", \"color\"]);\r\n      return (React__default.createElement(realayers.Tooltip, Object.assign({}, rest, { content: () => {\r\n              if (!value && !data) {\r\n                  return null;\r\n              }\r\n              return typeof content === 'function'\r\n                  ? content(data || value, color)\r\n                  : React.cloneElement(content, Object.assign(Object.assign({}, content.props), { value,\r\n                      color }));\r\n          } })));\r\n  };\n\n  class TooltipArea extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {};\r\n          this.ref = React.createRef();\r\n          this.transformData = memoize((series) => {\r\n              const { inverse, isHorizontal } = this.props;\r\n              const result = [];\r\n              if (inverse) {\r\n                  for (const point of series) {\r\n                      const seriesPoint = point;\r\n                      if (Array.isArray(seriesPoint.data)) {\r\n                          for (const nestedPoint of seriesPoint.data) {\r\n                              const right = nestedPoint.x;\r\n                              let idx = result.findIndex(r => {\r\n                                  const left = r.x;\r\n                                  if (left instanceof Date && right instanceof Date) {\r\n                                      return left.getTime() === right.getTime();\r\n                                  }\r\n                                  return left === right;\r\n                              });\r\n                              if (idx === -1) {\r\n                                  result.push({\r\n                                      x: nestedPoint.x,\r\n                                      data: []\r\n                                  });\r\n                                  idx = result.length - 1;\r\n                              }\r\n                              const data = result[idx].data;\r\n                              if (Array.isArray(data)) {\r\n                                  data.push(nestedPoint);\r\n                              }\r\n                          }\r\n                      }\r\n                      else {\r\n                          result.push(point);\r\n                      }\r\n                  }\r\n              }\r\n              else {\r\n                  for (const point of series) {\r\n                      const nestedPoint = point;\r\n                      if (Array.isArray(nestedPoint.data)) {\r\n                          result.push(Object.assign(Object.assign({}, nestedPoint), { x: nestedPoint.key, data: nestedPoint.data.map(d => (Object.assign(Object.assign({}, d), { key: !isHorizontal ? d.x : d.y, value: !isHorizontal ? d.y : d.x }))) }));\r\n                      }\r\n                      else {\r\n                          const shallowPoint = point;\r\n                          result.push(Object.assign(Object.assign({}, shallowPoint), { \r\n                              // Histograms special logic...\r\n                              x: shallowPoint.key === undefined ? shallowPoint.x0 : point.key, y: shallowPoint.value === undefined\r\n                                  ? shallowPoint.y\r\n                                  : shallowPoint.value }));\r\n                      }\r\n                  }\r\n              }\r\n              return result;\r\n          });\r\n      }\r\n      getXCoord(x, y) {\r\n          const { isRadial, width, height } = this.props;\r\n          // If the shape is radial, we need to convert the X coords to a radial format.\r\n          if (isRadial) {\r\n              const outerRadius = Math.min(width, height) / 2;\r\n              let rad = Math.atan2(y - outerRadius, x - outerRadius) + Math.PI / 2;\r\n              // TODO: Figure out what the 'correct' way to do this is...\r\n              if (rad < 0) {\r\n                  rad += Math.PI * 2;\r\n              }\r\n              return rad;\r\n          }\r\n          return x;\r\n      }\r\n      onMouseMove(event) {\r\n          const { xScale, yScale, onValueEnter, height, width, data, isRadial, isHorizontal, placement } = this.props;\r\n          const { value } = this.state;\r\n          const transformed = this.transformData(data);\r\n          // Get our default placement\r\n          let newPlacement = placement;\r\n          if (!placement) {\r\n              if (isHorizontal) {\r\n                  newPlacement = 'right';\r\n              }\r\n              else {\r\n                  newPlacement = 'top';\r\n              }\r\n          }\r\n          // Get the path container element\r\n          let target = this.ref.current;\r\n          const { y, x } = getPositionForTarget({\r\n              target: target,\r\n              // Manually pass the x/y from the event\r\n              clientX: event.clientX,\r\n              clientY: event.clientY\r\n          });\r\n          // Need to flip scales/coords if we are a horz layout\r\n          let keyScale;\r\n          let valueScale;\r\n          let coord;\r\n          if (isHorizontal) {\r\n              keyScale = yScale;\r\n              valueScale = xScale;\r\n              coord = y;\r\n          }\r\n          else {\r\n              coord = this.getXCoord(x, y);\r\n              keyScale = xScale;\r\n              valueScale = yScale;\r\n          }\r\n          const newValue = getClosestPoint(coord, keyScale, transformed);\r\n          if (!isEqual(newValue, value) && newValue) {\r\n              const pointX = keyScale(newValue.x);\r\n              let pointY = valueScale(newValue.y);\r\n              let marginX = 0;\r\n              let marginY = 0;\r\n              if (isNaN(pointY)) {\r\n                  pointY = height / 2;\r\n                  marginX = 10;\r\n                  if (!placement) {\r\n                      newPlacement = 'right';\r\n                  }\r\n              }\r\n              else {\r\n                  marginY = -10;\r\n              }\r\n              // If the points didn't change, don't trigger an update\r\n              if (pointX === this.prevX && pointY === this.prevY) {\r\n                  return;\r\n              }\r\n              this.prevY = pointY;\r\n              this.prevX = pointX;\r\n              const target = event.target;\r\n              const { top, left } = target.getBoundingClientRect();\r\n              let offsetX = 0;\r\n              let offsetY = 0;\r\n              if (isRadial) {\r\n                  // If its radial, we need to convert the coords to radial format\r\n                  const outerRadius = Math.min(width, height) / 2;\r\n                  offsetX = pointY * Math.cos(pointX - Math.PI / 2) + outerRadius;\r\n                  offsetY = pointY * Math.sin(pointX - Math.PI / 2) + outerRadius;\r\n              }\r\n              else {\r\n                  offsetX = pointX;\r\n                  offsetY = pointY;\r\n              }\r\n              offsetX += left + marginX;\r\n              offsetY += top + marginY;\r\n              this.setState({\r\n                  placement: newPlacement,\r\n                  visible: true,\r\n                  value: newValue,\r\n                  offsetX,\r\n                  offsetY\r\n              });\r\n              onValueEnter({\r\n                  visible: true,\r\n                  value: newValue,\r\n                  pointY,\r\n                  pointX,\r\n                  offsetX,\r\n                  offsetY,\r\n                  nativeEvent: event\r\n              });\r\n          }\r\n      }\r\n      onMouseLeave() {\r\n          this.prevX = undefined;\r\n          this.prevY = undefined;\r\n          this.setState({\r\n              value: undefined,\r\n              visible: false\r\n          });\r\n          this.props.onValueLeave();\r\n      }\r\n      getTooltipReference() {\r\n          const { offsetX, offsetY } = this.state;\r\n          return {\r\n              width: 4,\r\n              height: 4,\r\n              top: offsetY,\r\n              left: offsetX\r\n          };\r\n      }\r\n      renderRadial() {\r\n          let { height, width, innerRadius, outerRadius } = this.props;\r\n          innerRadius = innerRadius || 0;\r\n          outerRadius = outerRadius || Math.min(width, height) / 2;\r\n          const d = d3Shape.arc()({\r\n              innerRadius,\r\n              outerRadius,\r\n              startAngle: 180,\r\n              endAngle: Math.PI / 2\r\n          });\r\n          return (React__default.createElement(\"path\", { d: d, opacity: \"0\", cursor: \"auto\", ref: this.ref, onMouseMove: bind(this.onMouseMove, this) }));\r\n      }\r\n      renderLinear() {\r\n          const { height, width } = this.props;\r\n          return (React__default.createElement(\"rect\", { height: height, ref: this.ref, width: width, opacity: 0, cursor: \"auto\", onMouseMove: bind(this.onMouseMove, this) }));\r\n      }\r\n      render() {\r\n          const { isRadial, children, tooltip, disabled, color } = this.props;\r\n          const { visible, placement, value } = this.state;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              disabled && children,\r\n              !disabled && (React__default.createElement(\"g\", { onMouseLeave: bind(this.onMouseLeave, this) },\r\n                  isRadial && this.renderRadial(),\r\n                  !isRadial && this.renderLinear(),\r\n                  React__default.createElement(CloneElement, { element: tooltip, visible: visible, placement: placement, modifiers: {\r\n                          offset: {\r\n                              offset: '0, 15px'\r\n                          }\r\n                      }, reference: this.getTooltipReference(), color: color, value: value }),\r\n                  children))));\r\n      }\r\n  }\r\n  TooltipArea.defaultProps = {\r\n      isRadial: false,\r\n      tooltip: React__default.createElement(ChartTooltip, null),\r\n      inverse: true,\r\n      onValueEnter: () => undefined,\r\n      onValueLeave: () => undefined\r\n  };\n\n  class ZoomPan extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.zoomRef = React.createRef();\r\n          this.panRef = React.createRef();\r\n          this.state = {\r\n              isZooming: false,\r\n              isPanning: false,\r\n              matrix: transformationMatrix.identity()\r\n          };\r\n      }\r\n      static getDerivedStateFromProps(props, state) {\r\n          // TODO: the types in the library don't seem to be correct...\r\n          const matrix = transformationMatrix.transform(transformationMatrix.fromDefinition([\r\n              { type: 'translate', tx: props.x, ty: props.y },\r\n              { type: 'scale', sx: props.scale, sy: props.scale }\r\n          ]));\r\n          if (!isEqual(matrix, state.matrix)) {\r\n              return {\r\n                  matrix\r\n              };\r\n          }\r\n          return null;\r\n      }\r\n      onPanStart(event) {\r\n          this.setState({\r\n              isPanning: true\r\n          });\r\n          this.props.onPanStart(event);\r\n      }\r\n      onPanMove(event) {\r\n          this.props.onZoomPan({\r\n              scale: this.props.scale,\r\n              x: event.x,\r\n              y: event.y,\r\n              type: 'pan',\r\n              nativeEvent: event.nativeEvent\r\n          });\r\n          this.props.onPanMove(event);\r\n      }\r\n      onPanEnd(event) {\r\n          this.setState({ isPanning: false });\r\n          this.props.onPanEnd(event);\r\n      }\r\n      onZoom(event) {\r\n          this.props.onZoomPan({\r\n              x: event.x,\r\n              y: event.y,\r\n              scale: event.scale,\r\n              nativeEvent: event.nativeEvent,\r\n              type: 'zoom'\r\n          });\r\n          this.props.onZoom(event);\r\n      }\r\n      onZoomEnd() {\r\n          this.setState({\r\n              isZooming: false\r\n          });\r\n          this.props.onZoomEnd();\r\n      }\r\n      render() {\r\n          const { height, width, children, disabled, pannable, maxZoom, minZoom, zoomable, scale, x, y, disableMouseWheel, constrain, zoomStep, onPanCancel, requireZoomModifier, globalPanning } = this.props;\r\n          const { isZooming, isPanning } = this.state;\r\n          const cursor = pannable ? 'move' : 'auto';\r\n          const selection = isZooming || isPanning ? 'none' : 'auto';\r\n          const matrix = transformationMatrix.fromObject(this.state.matrix);\r\n          return (React__default.createElement(Pan, { x: x, y: y, scale: scale, matrix: matrix, constrain: constrain, height: height, width: width, disabled: !pannable || disabled, ref: this.panRef, globalPanning: globalPanning, onPanStart: bind(this.onPanStart, this), onPanMove: bind(this.onPanMove, this), onPanEnd: bind(this.onPanEnd, this), onPanCancel: onPanCancel },\r\n              React__default.createElement(Zoom, { ref: this.zoomRef, disabled: !zoomable || disabled, scaleFactor: zoomStep, disableMouseWheel: disableMouseWheel, maxZoom: maxZoom, minZoom: minZoom, scale: scale, x: x, y: y, style: { cursor }, requireZoomModifier: requireZoomModifier, matrix: matrix, onZoom: bind(this.onZoom, this), onZoomEnd: bind(this.onZoomEnd, this) },\r\n                  !disabled && (React__default.createElement(\"rect\", { height: height, width: width, opacity: 0, className: \"pan-container\" })),\r\n                  React__default.createElement(\"g\", { style: {\r\n                          pointerEvents: selection,\r\n                          userSelect: selection\r\n                      } }, children))));\r\n      }\r\n  }\r\n  ZoomPan.defaultProps = {\r\n      maxZoom: 10,\r\n      minZoom: 0,\r\n      zoomStep: 0.1,\r\n      pannable: true,\r\n      zoomable: true,\r\n      constrain: true,\r\n      height: 0,\r\n      width: 0,\r\n      x: 0,\r\n      y: 0,\r\n      scale: 1,\r\n      globalPanning: true,\r\n      onPanStart: () => undefined,\r\n      onPanMove: () => undefined,\r\n      onPanEnd: () => undefined,\r\n      onPanCancel: () => undefined,\r\n      onZoom: () => undefined,\r\n      onZoomEnd: () => undefined\r\n  };\n\n  /**\r\n   * Gets the X Scale function.\r\n   */\r\n  function getXScale({ type, roundDomains, data, width, domain, padding, scaled, isMultiSeries = false, isDiverging = false }) {\r\n      let scale;\r\n      if (type === 'time' || type === 'duration' || type === 'value') {\r\n          if (type === 'time') {\r\n              scale = d3Scale.scaleTime().rangeRound([0, width]);\r\n          }\r\n          else {\r\n              scale = d3Scale.scaleLinear().rangeRound([0, width]);\r\n          }\r\n          scale = scale.domain(domain || getXDomain({ data, scaled, isDiverging }));\r\n      }\r\n      else {\r\n          if (!domain) {\r\n              if (isMultiSeries) {\r\n                  domain = uniqueBy(data, d => d.key);\r\n              }\r\n              else {\r\n                  domain = uniqueBy(data, d => d.x);\r\n              }\r\n          }\r\n          scale = d3Scale.scaleBand()\r\n              .rangeRound([0, width])\r\n              .padding(padding || 0)\r\n              .domain(domain);\r\n      }\r\n      return roundDomains ? scale.nice() : scale;\r\n  }\r\n  /**\r\n   * Gets the Y Scale function.\r\n   */\r\n  function getYScale({ type, height, data, domain, roundDomains = false, scaled = false, padding = 0, isMultiSeries = false, isDiverging = false }) {\r\n      let scale;\r\n      if (type === 'time' || type === 'value' || type === 'duration') {\r\n          scale = d3Scale.scaleLinear()\r\n              .range([height, 0])\r\n              .domain(domain || getYDomain({ data, scaled, isDiverging }));\r\n      }\r\n      else {\r\n          if (!domain) {\r\n              if (isMultiSeries) {\r\n                  domain = uniqueBy(data, d => d.key);\r\n              }\r\n              else {\r\n                  domain = uniqueBy(data, d => d.y);\r\n              }\r\n          }\r\n          scale = d3Scale.scaleBand()\r\n              .rangeRound([height, 0])\r\n              .padding(padding)\r\n              .domain(domain);\r\n      }\r\n      return roundDomains ? scale.nice() : scale;\r\n  }\n\n  /**\r\n   * Get a linear scale for the mariemko chart.\r\n   */\r\n  const getMarimekkoScale = (width, roundDomains) => {\r\n      const scale = d3Scale.scaleLinear().rangeRound([0, width]);\r\n      return roundDomains ? scale.nice() : scale;\r\n  };\r\n  /**\r\n   * Builds a fake scale function to get a group scale for a marimekko value scale.\r\n   */\r\n  const getMarimekkoGroupScale = ({ data, width, valueScale, padding }) => {\r\n      const domain = uniqueBy(data, d => d.key);\r\n      const barCount = data.length;\r\n      const widthMinusPadding = width - padding * (barCount - 1);\r\n      const xMultiplier = widthMinusPadding / width;\r\n      // Given a data series, find the x0/x1 for it.\r\n      const getXRange = series => {\r\n          const [val] = series.data;\r\n          const x0 = valueScale(val.x0);\r\n          const x1 = valueScale(val.x1);\r\n          return { x0, x1 };\r\n      };\r\n      const scale = arg => {\r\n          let result = 0;\r\n          const index = data.findIndex(d => d.key === arg);\r\n          const series = data[index];\r\n          if (series && series.data && series.data.length) {\r\n              const { x1, x0 } = getXRange(series);\r\n              result = (x1 - x0) / 2 + x0;\r\n              if (padding) {\r\n                  result = result * xMultiplier + index * padding;\r\n              }\r\n          }\r\n          return result;\r\n      };\r\n      scale.range = () => [0, width];\r\n      scale.domain = () => domain;\r\n      // Special invert function for marimekko\r\n      scale.mariemkoInvert = (offset) => {\r\n          let found;\r\n          for (let i = 0; i < domain.length; i++) {\r\n              const attr = domain[i];\r\n              const series = data[i];\r\n              const { x1, x0 } = getXRange(series);\r\n              if (offset >= x0 - padding / 2 && offset <= x1 - padding / 2) {\r\n                  found = attr;\r\n                  break;\r\n              }\r\n          }\r\n          return found;\r\n      };\r\n      return scale;\r\n  };\n\n  /**\r\n   * Get the group scale aka x0.\r\n   */\r\n  function getGroupScale({ dimension, padding, data, direction = 'vertical' }) {\r\n      const domain = uniqueBy(data, d => d.key);\r\n      const spacing = domain.length / (dimension / padding + 1);\r\n      const range = direction === 'vertical' ? [0, dimension] : [dimension, 0];\r\n      return d3Scale.scaleBand()\r\n          .rangeRound(range)\r\n          .paddingInner(spacing)\r\n          .paddingOuter(spacing / 2)\r\n          .domain(domain);\r\n  }\r\n  /**\r\n   * Get the inner scale aka x1.\r\n   */\r\n  function getInnerScale({ groupScale, padding, data, prop = 'x' }) {\r\n      const dimension = groupScale.bandwidth();\r\n      const domain = uniqueBy(data, d => d.data, d => d[prop]);\r\n      const spacing = domain.length / (dimension / padding + 1);\r\n      return d3Scale.scaleBand()\r\n          .rangeRound([0, dimension])\r\n          .paddingInner(spacing)\r\n          .domain(domain);\r\n  }\n\n  /**\r\n   * Get the Y Scale for a given set of radiuses.\r\n   * Reference: https://github.com/d3/d3-scale/issues/90\r\n   */\r\n  const getRadialYScale = (innerRadius, outerRadius, domain) => {\r\n      if (domain[0] === 0 && domain[1] === 0) {\r\n          // If all values are 0, set the domain to [0, 1], so the zero values are\r\n          // all at the bottom of the chart, not the middle.\r\n          domain = [0, 1];\r\n      }\r\n      const y = d3Scale.scaleLinear()\r\n          .range([innerRadius * innerRadius, outerRadius * outerRadius])\r\n          .domain(domain);\r\n      const yScale = Object.assign(d => Math.sqrt(y(d)), y);\r\n      return yScale;\r\n  };\n\n  class ChartZoomPan extends React.Component {\r\n      onZoomPan(event) {\r\n          const { width, data, axisType, roundDomains, onZoomPan } = this.props;\r\n          const can = event.type === 'zoom' || (event.type === 'pan' && event.scale > 1);\r\n          if (can) {\r\n              const scale = getXScale({\r\n                  width: width,\r\n                  type: axisType,\r\n                  roundDomains,\r\n                  data\r\n              });\r\n              const newScale = scale.copy().domain(scale\r\n                  .range()\r\n                  .map(x => (x - event.x) / event.scale)\r\n                  .map(scale.clamp(true).invert, event.x));\r\n              onZoomPan({\r\n                  domain: newScale.domain(),\r\n                  isZoomed: event.scale !== 1\r\n              });\r\n          }\r\n      }\r\n      getOffset() {\r\n          let zoomOffset = {\r\n              scale: undefined,\r\n              x: undefined\r\n          };\r\n          const { disabled, domain, width, data, axisType, roundDomains } = this.props;\r\n          if (!disabled && domain) {\r\n              const xScale = getXScale({\r\n                  width,\r\n                  type: axisType,\r\n                  roundDomains,\r\n                  data\r\n              });\r\n              let offset = xScale(domain[0]);\r\n              const endOffset = xScale(domain[1]);\r\n              const scale = width / (endOffset - offset);\r\n              // Apply the new scale to the offset so its scaled correctly\r\n              offset = offset * scale;\r\n              zoomOffset = {\r\n                  scale: scale,\r\n                  x: -offset\r\n              };\r\n          }\r\n          return zoomOffset;\r\n      }\r\n      render() {\r\n          const _a = this.props, { data, height, children, width, onZoomPan } = _a, rest = __rest(_a, [\"data\", \"height\", \"children\", \"width\", \"onZoomPan\"]);\r\n          const { scale, x } = this.getOffset();\r\n          return (React__default.createElement(ZoomPan, Object.assign({}, rest, { scale: scale, x: x, height: height, width: width, pannable: scale > 1, onZoomPan: bind(this.onZoomPan, this) }), children));\r\n      }\r\n  }\r\n  ChartZoomPan.defaultProps = {\r\n      onZoomPan: () => undefined\r\n  };\n\n  const DEFAULT_TRANSITION = {\r\n      type: 'spring',\r\n      velocity: 10,\r\n      damping: 50\r\n  };\n\n  const MotionPath = (_a) => {\r\n      var { custom, transition } = _a, rest = __rest(_a, [\"custom\", \"transition\"]);\r\n      const d = framerMotion.useMotionValue(custom.exit.d);\r\n      const prevPath = framerMotion.useMotionValue(custom.exit.d);\r\n      const spring = framerMotion.useSpring(prevPath, Object.assign(Object.assign({}, DEFAULT_TRANSITION), { from: 0, to: 1 }));\r\n      React.useEffect(() => {\r\n          const interpolator = d3Interpolate.interpolate(prevPath.get(), custom.enter.d);\r\n          const unsub = spring.onChange(v => d.set(interpolator(v)));\r\n          prevPath.set(custom.enter.d);\r\n          return unsub;\r\n      });\r\n      const _b = custom.enter, { d: enterD } = _b, enterRest = __rest(_b, [\"d\"]);\r\n      const _c = custom.exit, exitRest = __rest(_c, [\"d\"]);\r\n      return (React__default.createElement(framerMotion.motion.path, Object.assign({}, rest, { initial: exitRest, exit: exitRest, animate: enterRest, transition: transition, d: transition.type !== false ? d : enterD })));\r\n  };\n\n  /**\r\n   * Color Schemes\r\n   * Credits: https://gka.github.io/chroma.js/#chroma-brewer\r\n   */\r\n  const schemes = Object.assign({ cybertron: chroma\r\n          .scale(['#2d60e8', '#26efb5'])\r\n          .correctLightness()\r\n          .colors(8) }, chroma.brewer);\n\n  /**\r\n   * Given a point, get the key attributes for it.\r\n   */\r\n  const rangeHelper = (point, attribute) => point.map((r, i) => {\r\n      if (r) {\r\n          if (r[attribute] !== undefined) {\r\n              return r[attribute];\r\n          }\r\n          else if (r.data && r.data[attribute] !== undefined) {\r\n              return r.data[attribute];\r\n          }\r\n      }\r\n      return i;\r\n  });\r\n  /**\r\n   * Get a color given a range.\r\n   */\r\n  const getColor = (props) => {\r\n      let { point, colorScheme, attribute, index, data, active, isMultiSeries, domain, key, scale } = Object.assign({ attribute: 'key', isMultiSeries: false, scale: d3Scale.scaleOrdinal }, props);\r\n      if (typeof colorScheme === 'string' && schemes[colorScheme]) {\r\n          colorScheme = schemes[colorScheme];\r\n      }\r\n      if (Array.isArray(colorScheme)) {\r\n          if (!domain) {\r\n              if (isMultiSeries && Array.isArray(data)) {\r\n                  const maxIdx = d3Array.maxIndex(data, d => d.data.length);\r\n                  const maxVal = data[maxIdx];\r\n                  data = maxVal.data;\r\n              }\r\n              domain = rangeHelper(data, attribute);\r\n          }\r\n          key = key !== undefined ? key : point[attribute];\r\n          return scale(colorScheme).domain(domain)(key);\r\n      }\r\n      else if (typeof colorScheme === 'function') {\r\n          return colorScheme(point, index, active);\r\n      }\r\n      else {\r\n          return colorScheme;\r\n      }\r\n  };\n\n  var css$k = \".ScatterPoint-module_inactive__2qwES {\\n  opacity: 0.2; }\\n\";\n  var css$l = {\"inactive\":\"ScatterPoint-module_inactive__2qwES\"};\n  styleInject(css$k);\n\n  const ScatterPoint = (_a) => {\r\n      var { symbol, index, id, data, xScale, yScale, active = true, tooltip = React__default.createElement(ChartTooltip, null), cursor = 'pointer', size = 4, color = schemes.cybertron[0], animated = true, onClick = () => undefined, onMouseEnter = () => undefined, onMouseLeave = () => undefined } = _a, rest = __rest(_a, [\"symbol\", \"index\", \"id\", \"data\", \"xScale\", \"yScale\", \"active\", \"tooltip\", \"cursor\", \"size\", \"color\", \"animated\", \"onClick\", \"onMouseEnter\", \"onMouseLeave\"]);\r\n      const rectRef = React.useRef(null);\r\n      const [tooltipVisible, setTooltipVisible] = React.useState(false);\r\n      const extras = React.useMemo(() => constructFunctionProps(rest, data), [rest, data]);\r\n      const r = React.useMemo(() => typeof size === 'function' ? size(data) : size, [size, data]);\r\n      const renderedSymbol = React.useMemo(() => symbol ? symbol(data) : null, [data, symbol]);\r\n      const transitionProps = React.useMemo(() => animated ? Object.assign(Object.assign({}, DEFAULT_TRANSITION), { delay: index * 0.005 }) : {\r\n          type: false,\r\n          delay: 0\r\n      }, [index, animated]);\r\n      const enterProps = React.useMemo(() => {\r\n          let cy = yScale(data.y1);\r\n          if (yScale.bandwidth) {\r\n              const width = yScale.bandwidth();\r\n              cy = cy + width / 2;\r\n          }\r\n          return {\r\n              x: xScale(data.x),\r\n              y: cy\r\n          };\r\n      }, [data, yScale]);\r\n      const exitProps = React.useMemo(() => {\r\n          const [yStartDomain] = yScale.domain();\r\n          return {\r\n              y: yScale(yStartDomain),\r\n              x: xScale(data.x)\r\n          };\r\n      }, [data, yScale]);\r\n      const fill = React.useMemo(() => getColor({\r\n          colorScheme: color,\r\n          index,\r\n          point: data\r\n      }), [data, color, index]);\r\n      return (React__default.createElement(React.Fragment, null,\r\n          React__default.createElement(\"g\", { ref: rectRef, onMouseEnter: () => {\r\n                  setTooltipVisible(true);\r\n                  onMouseEnter(data);\r\n              }, onMouseLeave: () => {\r\n                  setTooltipVisible(false);\r\n                  onMouseLeave(data);\r\n              }, onClick: () => onClick(data), className: classNames({\r\n                  [css$l.inactive]: !active\r\n              }) }, symbol ? (React__default.createElement(framerMotion.motion.g, Object.assign({ key: `symbol-${id}-${data.id}` }, extras, { initial: {\r\n                  translateX: exitProps.x,\r\n                  translateY: exitProps.y,\r\n                  opacity: 0\r\n              }, animate: {\r\n                  translateX: enterProps.x,\r\n                  translateY: enterProps.y,\r\n                  opacity: 1\r\n              }, exit: {\r\n                  translateX: exitProps.x,\r\n                  translateY: exitProps.y,\r\n                  opacity: 0\r\n              }, transition: transitionProps }), renderedSymbol)) : (React__default.createElement(framerMotion.motion.circle, { key: `symbol-${id}-${data.id}`, className: extras.className, style: Object.assign(Object.assign({}, extras.style), { cursor }), initial: {\r\n                  cx: exitProps.x,\r\n                  cy: exitProps.y,\r\n                  fill,\r\n                  r,\r\n                  opacity: 0\r\n              }, animate: {\r\n                  cx: enterProps.x,\r\n                  cy: enterProps.y,\r\n                  opacity: 1,\r\n                  fill,\r\n                  r\r\n              }, exit: {\r\n                  cx: exitProps.x,\r\n                  cy: exitProps.y,\r\n                  fill,\r\n                  r,\r\n                  opacity: 0\r\n              }, transition: transitionProps }))),\r\n          tooltip && !tooltip.props.disabled && (React__default.createElement(CloneElement, { element: tooltip, visible: tooltipVisible, reference: rectRef, value: data }))));\r\n  };\n\n  // For bubble charts, often symbols exceed the area\r\n  // and we want to add a little bit of padding to prevent clipping\r\n  const PADDING = 25;\r\n  const HALF_PADDING = PADDING / 2;\r\n  const ScatterSeries = (_a) => {\r\n      var { data, height, width, id, isZoomed, activeIds, point = React__default.createElement(ScatterPoint, null) } = _a, rest = __rest(_a, [\"data\", \"height\", \"width\", \"id\", \"isZoomed\", \"activeIds\", \"point\"]);\r\n      const renderPoint = React.useCallback((pointData, index) => {\r\n          let pointId;\r\n          if (pointData.id) {\r\n              pointId = pointData.id;\r\n          }\r\n          const key = pointId || index;\r\n          const active = !(activeIds && activeIds.length) || activeIds.includes(pointId);\r\n          const visible = point.props.visible;\r\n          if (visible && !visible(pointData, index)) {\r\n              return React__default.createElement(React.Fragment, { key: key });\r\n          }\r\n          return (React__default.createElement(CloneElement, Object.assign({ element: point, key: key }, rest, { id: id, data: pointData, index: index, active: active })));\r\n      }, [point, id, rest, activeIds]);\r\n      return (React__default.createElement(React.Fragment, null,\r\n          React__default.createElement(\"defs\", null,\r\n              React__default.createElement(\"clipPath\", { id: `${id}-path` },\r\n                  React__default.createElement(\"rect\", { width: isZoomed ? width : width + PADDING, height: height + PADDING, x: isZoomed ? 0 : -HALF_PADDING, y: -HALF_PADDING }))),\r\n          React__default.createElement(\"g\", { clipPath: `url(#${id}-path)` }, data.map(renderPoint))));\r\n  };\n\n  var css$m = \".ScatterPlot-module_scatterPlot__gOR7J {\\n  overflow: visible; }\\n\";\n  var css$n = {\"scatterPlot\":\"ScatterPlot-module_scatterPlot__gOR7J\"};\n  styleInject(css$m);\n\n  class ScatterPlot extends React.Component {\r\n      constructor(props) {\r\n          super(props);\r\n          this.getData = memoize(data => {\r\n              return buildShallowChartData(data);\r\n          });\r\n          const zoom = props.zoomPan ? props.zoomPan.props : { domain: undefined };\r\n          const zoomControlled = !zoom.hasOwnProperty('domain');\r\n          this.state = {\r\n              isZoomed: !!zoom.domain,\r\n              zoomDomain: zoom.domain,\r\n              zoomControlled\r\n          };\r\n      }\r\n      static getDerivedStateFromProps(props, state) {\r\n          if (props.zoomPan) {\r\n              const zoom = props.zoomPan.props;\r\n              if (!state.zoomControlled && zoom.domain !== state.zoomDomain) {\r\n                  return {\r\n                      zoomDomain: zoom.domain,\r\n                      isZoomed: !!zoom.domain\r\n                  };\r\n              }\r\n          }\r\n          return null;\r\n      }\r\n      getScales(data, chartHeight, chartWidth) {\r\n          const { xAxis, yAxis } = this.props;\r\n          const { zoomDomain } = this.state;\r\n          const yScale = getYScale({\r\n              roundDomains: yAxis.props.roundDomains,\r\n              type: yAxis.props.type,\r\n              height: chartHeight,\r\n              data,\r\n              domain: yAxis.props.domain\r\n          });\r\n          const xScale = getXScale({\r\n              width: chartWidth,\r\n              type: xAxis.props.type,\r\n              roundDomains: xAxis.props.roundDomains,\r\n              data,\r\n              domain: zoomDomain || xAxis.props.domain\r\n          });\r\n          return {\r\n              data,\r\n              yScale,\r\n              xScale\r\n          };\r\n      }\r\n      onZoomPan(event) {\r\n          if (this.state.zoomControlled) {\r\n              this.setState({\r\n                  zoomDomain: event.domain,\r\n                  isZoomed: event.isZoomed,\r\n                  preventAnimation: true\r\n              });\r\n              clearTimeout(this.timeout);\r\n              this.timeout = setTimeout(() => this.setState({ preventAnimation: false }), 500);\r\n          }\r\n      }\r\n      renderChart(containerProps) {\r\n          const { chartHeight, chartWidth, id, updateAxes } = containerProps;\r\n          const { series, xAxis, yAxis, gridlines, brush, zoomPan, secondaryAxis } = this.props;\r\n          const { isZoomed, zoomDomain, preventAnimation } = this.state;\r\n          const data = this.getData(this.props.data);\r\n          const { yScale, xScale } = this.getScales(data, chartHeight, chartWidth);\r\n          const animated = preventAnimation === true ? false : series.props.animated;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              containerProps.chartSized && gridlines && (React__default.createElement(CloneElement, { element: gridlines, height: chartHeight, width: chartWidth, yScale: yScale, xScale: xScale, yAxis: yAxis.props, xAxis: xAxis.props })),\r\n              React__default.createElement(CloneElement, { element: xAxis, height: chartHeight, width: chartWidth, scale: xScale, onDimensionsChange: bind(updateAxes, this, 'horizontal') }),\r\n              React__default.createElement(CloneElement, { element: yAxis, height: chartHeight, width: chartWidth, scale: yScale, onDimensionsChange: bind(updateAxes, this, 'vertical') }),\r\n              secondaryAxis &&\r\n                  secondaryAxis.map((axis, i) => (React__default.createElement(CloneElement, { key: i, element: axis, height: chartHeight, width: chartWidth, onDimensionsChange: bind(updateAxes, this, 'horizontal') }))),\r\n              containerProps.chartSized && (React__default.createElement(CloneElement, { element: brush, height: chartHeight, width: chartWidth, scale: xScale },\r\n                  React__default.createElement(CloneElement, { element: zoomPan, onZoomPan: bind(this.onZoomPan, this), height: chartHeight, width: chartWidth, axisType: xAxis.props.type, roundDomains: xAxis.props.roundDomains, data: data, domain: zoomDomain },\r\n                      React__default.createElement(CloneElement, { element: series, id: `area-series-${id}`, data: data, height: chartHeight, width: chartWidth, yScale: yScale, xScale: xScale, isZoomed: isZoomed, animated: animated }))))));\r\n      }\r\n      render() {\r\n          const { xAxis, yAxis, id, width, height, margins, className } = this.props;\r\n          return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, xAxisVisible: isAxisVisible(xAxis.props), yAxisVisible: isAxisVisible(yAxis.props), className: classNames(css$n.scatterPlot, className) }, props => this.renderChart(props)));\r\n      }\r\n  }\r\n  ScatterPlot.defaultProps = {\r\n      data: [],\r\n      xAxis: React__default.createElement(LinearXAxis, { type: \"time\" }),\r\n      yAxis: React__default.createElement(LinearYAxis, { type: \"value\" }),\r\n      series: React__default.createElement(ScatterSeries, null),\r\n      gridlines: React__default.createElement(GridlineSeries, null),\r\n      brush: null,\r\n      zoomPan: null\r\n  };\n\n  var css$o = \".PointSeries-module_point__3ORLE {\\n  stroke: rgba(255, 255, 255, 0.5);\\n  stroke-width: 1px; }\\n\";\n  var css$p = {\"point\":\"PointSeries-module_point__3ORLE\"};\n  styleInject(css$o);\n\n  class PointSeries extends React.Component {\r\n      isVisible(point, index) {\r\n          const { show, activeValues, data } = this.props;\r\n          const isActive = activeValues && point && isEqual(activeValues.x, point.x);\r\n          if (show === 'hover') {\r\n              return isActive;\r\n          }\r\n          else if (show === 'first') {\r\n              if (activeValues) {\r\n                  return isActive;\r\n              }\r\n              else {\r\n                  return index === 0;\r\n              }\r\n          }\r\n          else if (show === 'last') {\r\n              if (activeValues) {\r\n                  return isActive;\r\n              }\r\n              else {\r\n                  return index === data.length - 1;\r\n              }\r\n          }\r\n          return show;\r\n      }\r\n      render() {\r\n          const { data, xScale, yScale, animated, point, color, height, width, id } = this.props;\r\n          return (React__default.createElement(ScatterSeries, { height: height, width: width, id: id, animated: animated, data: data, xScale: xScale, yScale: yScale, point: React__default.createElement(CloneElement, { element: point, color: color, className: css$p.point, size: 4, tooltip: null, visible: this.isVisible.bind(this) }) }));\r\n      }\r\n  }\r\n  PointSeries.defaultProps = {\r\n      show: 'hover',\r\n      point: React__default.createElement(ScatterPoint, null)\r\n  };\n\n  class Area extends React.Component {\r\n      getAreaPath(data) {\r\n          const { interpolation } = this.props;\r\n          const fn = d3Shape.area()\r\n              .x((d) => d.x)\r\n              .y0((d) => d.y0)\r\n              .y1((d) => d.y1)\r\n              .curve(interpolate(interpolation));\r\n          return fn(data);\r\n      }\r\n      getCoords() {\r\n          const { data, xScale, yScale } = this.props;\r\n          return data.map((item) => ({\r\n              x: xScale(item.x),\r\n              x1: xScale(item.x) - xScale(item.x1),\r\n              y: yScale(item.y),\r\n              y0: yScale(item.y0),\r\n              y1: yScale(item.y1)\r\n          }));\r\n      }\r\n      getAreaEnter(coords) {\r\n          const areaPath = this.getAreaPath(coords);\r\n          return {\r\n              d: areaPath === null ? undefined : areaPath\r\n          };\r\n      }\r\n      getAreaExit() {\r\n          const { yScale, data, xScale } = this.props;\r\n          const maxY = Math.max(...yScale.range());\r\n          const coords = data.map((item) => ({\r\n              x: xScale(item.x),\r\n              x1: 0,\r\n              y: 0,\r\n              y1: maxY,\r\n              y0: maxY\r\n          }));\r\n          const areaPath = this.getAreaPath(coords);\r\n          return {\r\n              d: areaPath === null ? undefined : areaPath\r\n          };\r\n      }\r\n      getFill() {\r\n          const { mask, id, gradient } = this.props;\r\n          if (mask) {\r\n              return `url(#mask-pattern-${id})`;\r\n          }\r\n          else {\r\n              if (gradient) {\r\n                  return `url(#gradient-${id})`;\r\n              }\r\n              return '';\r\n          }\r\n      }\r\n      getTransition() {\r\n          const { animated, index } = this.props;\r\n          if (animated) {\r\n              return Object.assign(Object.assign({}, DEFAULT_TRANSITION), { delay: index * 0.05 });\r\n          }\r\n          else {\r\n              return {\r\n                  type: false,\r\n                  delay: 0\r\n              };\r\n          }\r\n      }\r\n      renderArea(coords) {\r\n          const { mask, id, data } = this.props;\r\n          const fill = this.getFill();\r\n          const maskPath = mask ? `url(#mask-${id})` : '';\r\n          const enter = this.getAreaEnter(coords);\r\n          const exit = this.getAreaExit();\r\n          const extras = constructFunctionProps(this.props, data);\r\n          const transition = this.getTransition();\r\n          return (React__default.createElement(MotionPath, Object.assign({}, extras, { pointerEvents: \"none\", mask: maskPath, fill: fill, transition: transition, custom: {\r\n                  enter,\r\n                  exit\r\n              } })));\r\n      }\r\n      render() {\r\n          const { id, gradient, mask, data, color, index } = this.props;\r\n          const coords = this.getCoords();\r\n          const stroke = color(data, index);\r\n          return (React__default.createElement(React.Fragment, null,\r\n              this.renderArea(coords),\r\n              mask && (React__default.createElement(React.Fragment, null,\r\n                  React__default.createElement(Mask, { id: `mask-${id}`, fill: `url(#gradient-${id})` }),\r\n                  React__default.createElement(CloneElement, { element: mask, id: `mask-pattern-${id}`, fill: stroke }))),\r\n              gradient && (React__default.createElement(CloneElement, { element: gradient, id: `gradient-${id}`, color: stroke }))));\r\n      }\r\n  }\r\n  Area.defaultProps = {\r\n      gradient: React__default.createElement(Gradient, null),\r\n      interpolation: 'linear'\r\n  };\n\n  class Line extends React.PureComponent {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {};\r\n          this.ghostPathRef = React.createRef();\r\n      }\r\n      componentDidMount() {\r\n          if (this.ghostPathRef.current) {\r\n              this.setState({\r\n                  pathLength: this.ghostPathRef.current.getTotalLength()\r\n              });\r\n          }\r\n      }\r\n      componentDidUpdate(prevProps) {\r\n          if (this.ghostPathRef.current &&\r\n              (prevProps.data !== this.props.data ||\r\n                  prevProps.width !== this.props.width)) {\r\n              this.setState({\r\n                  pathLength: this.ghostPathRef.current.getTotalLength()\r\n              });\r\n          }\r\n      }\r\n      getLinePath(data) {\r\n          const { showZeroStroke, interpolation } = this.props;\r\n          const fn = d3Shape.line()\r\n              .x((d) => d.x)\r\n              .y((d) => d.y1)\r\n              .defined((d) => showZeroStroke || calculateShowStroke(d, data))\r\n              .curve(interpolate(interpolation));\r\n          return fn(data);\r\n      }\r\n      getCoords() {\r\n          const { data, xScale, yScale } = this.props;\r\n          return data.map((item) => ({\r\n              x: xScale(item.x),\r\n              x1: xScale(item.x) - xScale(item.x1),\r\n              y: yScale(item.y),\r\n              y0: yScale(item.y0),\r\n              y1: yScale(item.y1)\r\n          }));\r\n      }\r\n      getLineEnter(coords) {\r\n          const { hasArea } = this.props;\r\n          const { pathLength } = this.state;\r\n          const linePath = this.getLinePath(coords);\r\n          let strokeDasharray = '';\r\n          if (!hasArea && pathLength !== undefined) {\r\n              strokeDasharray = `${pathLength} ${pathLength}`;\r\n          }\r\n          return {\r\n              d: linePath === null ? undefined : linePath,\r\n              strokeDashoffset: 0,\r\n              strokeDasharray: strokeDasharray\r\n          };\r\n      }\r\n      getLineExit() {\r\n          const { hasArea, yScale, xScale, data } = this.props;\r\n          const { pathLength } = this.state;\r\n          let coords;\r\n          if (hasArea) {\r\n              const maxY = Math.max(...yScale.range());\r\n              coords = data.map((item) => ({\r\n                  x: xScale(item.x),\r\n                  x1: 0,\r\n                  y: maxY,\r\n                  y1: maxY,\r\n                  y0: maxY\r\n              }));\r\n          }\r\n          else {\r\n              coords = this.getCoords();\r\n          }\r\n          const linePath = this.getLinePath(coords);\r\n          let strokeDasharray = '';\r\n          let strokeDashoffset = 0;\r\n          if (!hasArea && pathLength !== undefined) {\r\n              strokeDasharray = `${pathLength} ${pathLength}`;\r\n              strokeDashoffset = pathLength;\r\n          }\r\n          return {\r\n              d: linePath === null ? undefined : linePath,\r\n              strokeDasharray,\r\n              strokeDashoffset\r\n          };\r\n      }\r\n      getTransition() {\r\n          const { animated, index, hasArea } = this.props;\r\n          if (animated) {\r\n              return Object.assign(Object.assign({}, DEFAULT_TRANSITION), { delay: hasArea ? 0 : index * 0.05 });\r\n          }\r\n          else {\r\n              return {\r\n                  type: false,\r\n                  delay: 0\r\n              };\r\n          }\r\n      }\r\n      render() {\r\n          const { data, color, index, strokeWidth, hasArea } = this.props;\r\n          const { pathLength } = this.state;\r\n          const coords = this.getCoords();\r\n          const stroke = color(data, index);\r\n          const enter = this.getLineEnter(coords);\r\n          const exit = this.getLineExit();\r\n          const extras = constructFunctionProps(this.props, data);\r\n          const transition = this.getTransition();\r\n          const showLine = hasArea || pathLength !== undefined;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              showLine && (React__default.createElement(MotionPath, Object.assign({}, extras, { pointerEvents: \"none\", stroke: stroke, strokeWidth: strokeWidth, fill: \"none\", transition: transition, custom: {\r\n                      enter,\r\n                      exit\r\n                  } }))),\r\n              !hasArea && (React__default.createElement(\"path\", { opacity: \"0\", d: enter.d, ref: this.ghostPathRef, pointerEvents: \"none\" }))));\r\n      }\r\n  }\r\n  Line.defaultProps = {\r\n      showZeroStroke: true,\r\n      strokeWidth: 3\r\n  };\n\n  // For area charts, often symbols exceed the area\r\n  // and we want to add a little bit of padding to prevent clipping\r\n  const PADDING$1 = 25;\r\n  const HALF_PADDING$1 = PADDING$1 / 2;\r\n  class AreaSeries extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {};\r\n      }\r\n      getColor(point, index) {\r\n          const { colorScheme, data } = this.props;\r\n          const { activeValues } = this.state;\r\n          const key = Array.isArray(point) ? point[0].key : point === null || point === void 0 ? void 0 : point.key;\r\n          return getColor({\r\n              data,\r\n              colorScheme,\r\n              active: activeValues,\r\n              point,\r\n              index,\r\n              key,\r\n          });\r\n      }\r\n      onValueEnter(event) {\r\n          this.setState({\r\n              activePoint: event.pointX,\r\n              activeValues: event.value,\r\n          });\r\n      }\r\n      onValueLeave() {\r\n          this.setState({\r\n              activePoint: undefined,\r\n              activeValues: undefined,\r\n          });\r\n      }\r\n      renderArea(data, index = 0) {\r\n          const { id, width, xScale, yScale, area, line, interpolation, animated, } = this.props;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              line && (React__default.createElement(CloneElement, { element: line, xScale: xScale, yScale: yScale, data: data, width: width, index: index, hasArea: area !== null, animated: animated, interpolation: interpolation, color: this.getColor.bind(this) })),\r\n              area && (React__default.createElement(CloneElement, { element: area, id: `${id}-area-${index}`, xScale: xScale, yScale: yScale, data: data, index: index, animated: animated, interpolation: interpolation, color: this.getColor.bind(this) }))));\r\n      }\r\n      renderSymbols(data, index = 0) {\r\n          const { xScale, yScale, symbols, id, height, width, animated, area, } = this.props;\r\n          const { activeValues } = this.state;\r\n          const visible = symbols !== null;\r\n          const activeSymbols = (symbols && symbols.props.activeValues) || activeValues;\r\n          // Animations are only valid for Area\r\n          const isAnimated = area !== undefined && animated && !activeSymbols;\r\n          return (React__default.createElement(React.Fragment, null, visible && (React__default.createElement(CloneElement, { element: symbols, key: `point-series-${id}`, id: id, height: height, width: width, activeValues: activeSymbols, xScale: xScale, yScale: yScale, index: index, data: data, animated: isAnimated, color: () => this.getColor(data, index) }))));\r\n      }\r\n      renderMarkLine() {\r\n          const { height, markLine } = this.props;\r\n          const { activePoint, activeValues } = this.state;\r\n          return (React__default.createElement(React.Fragment, null, activeValues && markLine && (React__default.createElement(CloneElement, { element: markLine, height: height, pointX: activePoint }))));\r\n      }\r\n      renderSingleSeries(data) {\r\n          return (React__default.createElement(React.Fragment, null,\r\n              this.renderArea(data),\r\n              this.renderMarkLine(),\r\n              this.renderSymbols(data)));\r\n      }\r\n      renderMultiSeries(data) {\r\n          return (React__default.createElement(React.Fragment, null,\r\n              data\r\n                  .map((point, index) => (React__default.createElement(React.Fragment, { key: `${point.key.toString()}` }, this.renderArea(point.data, index))))\r\n                  .reverse(),\r\n              this.renderMarkLine(),\r\n              data\r\n                  .map((point, index) => (React__default.createElement(React.Fragment, { key: `${point.key.toString()}` }, this.renderSymbols(point.data, index))))\r\n                  .reverse()));\r\n      }\r\n      render() {\r\n          const { data, height, id, width, isZoomed, tooltip, xScale, yScale, type, } = this.props;\r\n          const isMulti = type === 'grouped' || type === 'stacked' || type === 'stackedNormalized';\r\n          return (React__default.createElement(React.Fragment, null,\r\n              React__default.createElement(\"defs\", null,\r\n                  React__default.createElement(\"clipPath\", { id: `${id}-path` },\r\n                      React__default.createElement(\"rect\", { width: isZoomed ? width : width + PADDING$1, height: height + PADDING$1, x: isZoomed ? 0 : -HALF_PADDING$1, y: -HALF_PADDING$1 }))),\r\n              React__default.createElement(CloneElement, { element: tooltip, xScale: xScale, yScale: yScale, data: data, height: height, width: width, color: this.getColor.bind(this), onValueEnter: bind(this.onValueEnter, this), onValueLeave: bind(this.onValueLeave, this) },\r\n                  React__default.createElement(\"g\", { clipPath: `url(#${id}-path)` },\r\n                      isMulti &&\r\n                          this.renderMultiSeries(data),\r\n                      !isMulti &&\r\n                          this.renderSingleSeries(data)))));\r\n      }\r\n  }\r\n  AreaSeries.defaultProps = {\r\n      colorScheme: 'cybertron',\r\n      animated: true,\r\n      interpolation: 'linear',\r\n      type: 'standard',\r\n      line: React__default.createElement(Line, null),\r\n      area: React__default.createElement(Area, null),\r\n      markLine: React__default.createElement(MarkLine, null),\r\n      tooltip: React__default.createElement(TooltipArea, null),\r\n      symbols: React__default.createElement(PointSeries, null),\r\n  };\n\n  class StackedNormalizedAreaSeries extends React.Component {\r\n      render() {\r\n          const _a = this.props, { type, symbols } = _a, rest = __rest(_a, [\"type\", \"symbols\"]);\r\n          return (React__default.createElement(AreaSeries, Object.assign({}, rest, { type: \"stackedNormalized\", symbols: symbols && (React__default.createElement(CloneElement, Object.assign({ element: symbols }, symbols.props, { point: React__default.createElement(CloneElement, Object.assign({ element: symbols.props.point }, symbols.props.point.props, { tooltip: null })) }))) })));\r\n      }\r\n  }\r\n  StackedNormalizedAreaSeries.defaultProps = Object.assign(Object.assign({}, AreaSeries.defaultProps), { type: 'stackedNormalized', tooltip: (React__default.createElement(TooltipArea, { tooltip: React__default.createElement(ChartTooltip, { content: (series, color) => {\r\n                  if (!series) {\r\n                      return null;\r\n                  }\r\n                  const value = Object.assign(Object.assign({}, series), { data: series.data.map(d => (Object.assign(Object.assign({}, d), { value: `${formatValue(d.value)} ∙ ${formatValue(Math.floor((d.y1 - d.y0) * 100))}%` }))) });\r\n                  return React__default.createElement(TooltipTemplate, { color: color, value: value });\r\n              } }) })) });\n\n  class StackedAreaSeries extends React.Component {\r\n      render() {\r\n          const _a = this.props, { type, symbols } = _a, rest = __rest(_a, [\"type\", \"symbols\"]);\r\n          return (React__default.createElement(AreaSeries, Object.assign({}, rest, { type: \"stacked\", symbols: symbols && (React__default.createElement(CloneElement, Object.assign({ element: symbols }, symbols.props, { point: React__default.createElement(CloneElement, Object.assign({ element: symbols.props.point }, symbols.props.point.props, { tooltip: null })) }))) })));\r\n      }\r\n  }\r\n  StackedAreaSeries.defaultProps = Object.assign(Object.assign({}, AreaSeries.defaultProps), { type: 'stacked' });\n\n  var css$q = \".AreaChart-module_areaChart__3MZH6 {\\n  overflow: visible; }\\n\";\n  var css$r = {\"areaChart\":\"AreaChart-module_areaChart__3MZH6\"};\n  styleInject(css$q);\n\n  class AreaChart extends React.Component {\r\n      constructor(props) {\r\n          super(props);\r\n          this.getData = memoize((data, type) => {\r\n              if (type === 'stacked' || type === 'stackedNormalized') {\r\n                  return buildStackData(data, type === 'stackedNormalized');\r\n              }\r\n              else if (type === 'grouped') {\r\n                  return buildNestedChartData(data, true);\r\n              }\r\n              else {\r\n                  return buildShallowChartData(data);\r\n              }\r\n          });\r\n          const zoom = props.zoomPan ? props.zoomPan.props : {};\r\n          const zoomControlled = !zoom.hasOwnProperty('domain');\r\n          this.state = {\r\n              zoomDomain: zoom.domain,\r\n              isZoomed: !!zoom.domain,\r\n              zoomControlled\r\n          };\r\n      }\r\n      static getDerivedStateFromProps(props, state) {\r\n          if (props.zoomPan) {\r\n              const zoom = props.zoomPan.props;\r\n              if (!state.zoomControlled && zoom.domain !== state.zoomDomain) {\r\n                  return {\r\n                      zoomDomain: zoom.domain,\r\n                      isZoomed: !!zoom.domain\r\n                  };\r\n              }\r\n          }\r\n          return null;\r\n      }\r\n      getScales(data, chartWidth, chartHeight, isMultiSeries) {\r\n          const { zoomDomain } = this.state;\r\n          const { yAxis, xAxis } = this.props;\r\n          const xScale = getXScale({\r\n              width: chartWidth,\r\n              type: xAxis.props.type,\r\n              roundDomains: xAxis.props.roundDomains,\r\n              data,\r\n              domain: zoomDomain || xAxis.props.domain,\r\n              isMultiSeries\r\n          });\r\n          const yScale = getYScale({\r\n              roundDomains: yAxis.props.roundDomains,\r\n              type: yAxis.props.type,\r\n              height: chartHeight,\r\n              data,\r\n              domain: yAxis.props.domain,\r\n              isMultiSeries\r\n          });\r\n          return { xScale, yScale };\r\n      }\r\n      onZoomPan(event) {\r\n          if (this.state.zoomControlled) {\r\n              this.setState({\r\n                  zoomDomain: event.domain,\r\n                  isZoomed: event.isZoomed,\r\n                  preventAnimation: true\r\n              });\r\n              clearTimeout(this.timeout);\r\n              this.timeout = setTimeout(() => this.setState({ preventAnimation: false }), 500);\r\n          }\r\n      }\r\n      renderChart(containerProps) {\r\n          const { chartHeight, chartWidth, id, updateAxes } = containerProps;\r\n          const { series, yAxis, xAxis, gridlines, brush, zoomPan, secondaryAxis } = this.props;\r\n          const { zoomDomain, preventAnimation, isZoomed } = this.state;\r\n          const seriesType = series.props.type;\r\n          const isMultiSeries = seriesType === 'stacked' ||\r\n              seriesType === 'stackedNormalized' ||\r\n              seriesType === 'grouped';\r\n          const data = this.getData(this.props.data, seriesType);\r\n          const { xScale, yScale } = this.getScales(data, chartWidth, chartHeight, isMultiSeries);\r\n          const animated = preventAnimation === true ? false : series.props.animated;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              containerProps.chartSized && gridlines && (React__default.createElement(CloneElement, { element: gridlines, height: chartHeight, width: chartWidth, yScale: yScale, xScale: xScale, yAxis: yAxis.props, xAxis: xAxis.props })),\r\n              React__default.createElement(CloneElement, { element: xAxis, height: chartHeight, width: chartWidth, scale: xScale, onDimensionsChange: bind(updateAxes, this, 'horizontal') }),\r\n              React__default.createElement(CloneElement, { element: yAxis, height: chartHeight, width: chartWidth, scale: yScale, onDimensionsChange: bind(updateAxes, this, 'vertical') }),\r\n              secondaryAxis &&\r\n                  secondaryAxis.map((axis, i) => (React__default.createElement(CloneElement, { key: i, element: axis, height: chartHeight, width: chartWidth, onDimensionsChange: bind(updateAxes, this, 'horizontal') }))),\r\n              containerProps.chartSized && (React__default.createElement(CloneElement, { element: brush, height: chartHeight, width: chartWidth, scale: xScale },\r\n                  React__default.createElement(CloneElement, { element: zoomPan, onZoomPan: bind(this.onZoomPan, this), height: chartHeight, width: chartWidth, axisType: xAxis.props.type, roundDomains: xAxis.props.roundDomains, data: data, domain: zoomDomain },\r\n                      React__default.createElement(CloneElement, { element: series, id: `area-series-${id}`, data: data, height: chartHeight, width: chartWidth, yScale: yScale, xScale: xScale, isZoomed: isZoomed, animated: animated }))))));\r\n      }\r\n      render() {\r\n          const { xAxis, yAxis, id, width, height, margins, className, series } = this.props;\r\n          return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, xAxisVisible: isAxisVisible(xAxis.props), yAxisVisible: isAxisVisible(yAxis.props), className: classNames(css$r.areaChart, className, series.type) }, props => this.renderChart(props)));\r\n      }\r\n  }\r\n  AreaChart.defaultProps = {\r\n      data: [],\r\n      xAxis: React__default.createElement(LinearXAxis, { type: \"time\" }),\r\n      yAxis: React__default.createElement(LinearYAxis, { type: \"value\" }),\r\n      series: React__default.createElement(AreaSeries, null),\r\n      gridlines: React__default.createElement(GridlineSeries, null),\r\n      brush: null,\r\n      zoomPan: null\r\n  };\n\n  class StackedAreaChart extends React.Component {\r\n      render() {\r\n          return React__default.createElement(AreaChart, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  StackedAreaChart.defaultProps = {\r\n      series: React__default.createElement(StackedAreaSeries, null)\r\n  };\n\n  class StackedNormalizedAreaChart extends React.Component {\r\n      render() {\r\n          return React__default.createElement(AreaChart, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  StackedNormalizedAreaChart.defaultProps = {\r\n      series: React__default.createElement(StackedNormalizedAreaSeries, null),\r\n      yAxis: (React__default.createElement(LinearYAxis, { type: \"value\", tickSeries: React__default.createElement(LinearYAxisTickSeries, { label: React__default.createElement(LinearYAxisTickLabel, { rotation: false, format: data => `${data * 100}%` }) }) }))\r\n  };\n\n  var css$s = \".Bar-module_rounded__1vgiX.Bar-module_vertical__1kQdZ {\\n  -webkit-clip-path: inset(0 0 0 0 round 2px 2px 0 0);\\n          clip-path: inset(0 0 0 0 round 2px 2px 0 0); }\\n\\n.Bar-module_rounded__1vgiX.Bar-module_horizontal__h7xo- {\\n  -webkit-clip-path: inset(0 0 0 0 round 0 2px 2px 0);\\n          clip-path: inset(0 0 0 0 round 0 2px 2px 0); }\\n\";\n  var css$t = {\"rounded\":\"Bar-module_rounded__1vgiX\",\"vertical\":\"Bar-module_vertical__1kQdZ\",\"horizontal\":\"Bar-module_horizontal__h7xo-\"};\n  styleInject(css$s);\n\n  class Bar extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {};\r\n          this.rect = React.createRef();\r\n      }\r\n      getExit({ x, y, width, height }) {\r\n          const { yScale, xScale, type } = this.props;\r\n          const isVertical = this.getIsVertical();\r\n          let newX = isVertical ? x : Math.min(...xScale.range());\r\n          let newY = isVertical ? Math.max(...yScale.range()) : y;\r\n          const newHeight = isVertical ? 0 : height;\r\n          const newWidth = isVertical ? width : 0;\r\n          if (type === 'stackedDiverging') {\r\n              if (isVertical) {\r\n                  newY = newY / 2;\r\n              }\r\n              else {\r\n                  newX = newX / 2;\r\n              }\r\n          }\r\n          return {\r\n              x: newX,\r\n              y: newY,\r\n              height: newHeight,\r\n              width: newWidth\r\n          };\r\n      }\r\n      getKeyCoords(v, v0, v1, scale, sizeOverride, isCategorical, padding) {\r\n          let offset;\r\n          let size;\r\n          if (isCategorical) {\r\n              if (scale.bandwidth) {\r\n                  offset = scale(v);\r\n                  size = scale.bandwidth();\r\n                  if (sizeOverride) {\r\n                      if (offset) {\r\n                          offset = offset + size / 2 - sizeOverride / 2;\r\n                      }\r\n                      else {\r\n                          // Stacked bar charts don't have offsets...\r\n                          offset = size / 2 - sizeOverride / 2;\r\n                      }\r\n                      size = sizeOverride;\r\n                  }\r\n              }\r\n              else {\r\n                  if (sizeOverride) {\r\n                      throw new Error('Not a valid option for this scale type');\r\n                  }\r\n                  offset = scale(v0);\r\n                  size = scale(v1 - v0);\r\n                  if (padding) {\r\n                      const calc = this.calculateLinearScalePadding(scale, offset, size);\r\n                      offset = calc.offset;\r\n                      size = calc.size;\r\n                  }\r\n              }\r\n          }\r\n          else {\r\n              if (sizeOverride) {\r\n                  throw new Error('Not a valid option for this scale type');\r\n              }\r\n              const c0 = scale(v0);\r\n              const c1 = scale(v1);\r\n              const delta = c1 - c0;\r\n              offset = c0;\r\n              size = Math.max(delta - 1, 0);\r\n          }\r\n          return { offset, size };\r\n      }\r\n      getValueCoords(v0, v1, scale) {\r\n          const c0 = scale(v0);\r\n          const c1 = scale(v1);\r\n          const size = Math.abs(c0 - c1);\r\n          const minSize = Math.max(this.props.minHeight || 0, size);\r\n          return { offset: Math.min(c0, c1), size: minSize };\r\n      }\r\n      getIsVertical() {\r\n          return this.props.layout === 'vertical';\r\n      }\r\n      getCoords(data) {\r\n          const { isCategorical, width, padding, xScale1 } = this.props;\r\n          const isVertical = this.getIsVertical();\r\n          let yScale = this.props.yScale;\r\n          let xScale = this.props.xScale;\r\n          if (xScale1) {\r\n              if (isVertical) {\r\n                  xScale = xScale1;\r\n              }\r\n              else {\r\n                  yScale = xScale1;\r\n              }\r\n          }\r\n          if (isVertical) {\r\n              const xCoords = this.getKeyCoords(data.x, data.x0, data.x1, xScale, width, isCategorical, padding);\r\n              const yCoords = this.getValueCoords(data.y0, data.y1, yScale);\r\n              return {\r\n                  x: xCoords.offset,\r\n                  width: xCoords.size,\r\n                  y: yCoords.offset,\r\n                  height: yCoords.size\r\n              };\r\n          }\r\n          else {\r\n              const yCoords = this.getKeyCoords(data.y, data.y0, data.y1, yScale, width, isCategorical, padding);\r\n              const xCoords = this.getValueCoords(data.x0, data.x1, xScale);\r\n              return {\r\n                  x: xCoords.offset,\r\n                  width: xCoords.size,\r\n                  y: yCoords.offset,\r\n                  height: yCoords.size\r\n              };\r\n          }\r\n      }\r\n      /**\r\n       * This function calculates the padding on a linear scale used by the marimekko chart.\r\n       */\r\n      calculateLinearScalePadding(scale, offset, size) {\r\n          const { barCount, groupIndex, padding } = this.props;\r\n          const totalSize = scale.range()[1];\r\n          const sizeMinusPadding = totalSize - padding * (barCount - 1);\r\n          const multiplier = sizeMinusPadding / totalSize;\r\n          offset = offset * multiplier + groupIndex * padding;\r\n          size = size * multiplier;\r\n          return { size, offset };\r\n      }\r\n      onMouseEnter(event) {\r\n          const { onMouseEnter, data, tooltip } = this.props;\r\n          // Only tooltip bars rely on this...\r\n          if (tooltip) {\r\n              this.setState({ active: true });\r\n          }\r\n          onMouseEnter({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      onMouseLeave(event) {\r\n          const { onMouseLeave, data, tooltip } = this.props;\r\n          // Only tooltip bars rely on this...\r\n          if (tooltip) {\r\n              this.setState({ active: false });\r\n          }\r\n          onMouseLeave({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      onMouseClick(event) {\r\n          const { onClick, data } = this.props;\r\n          onClick({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      getFill(color) {\r\n          const { mask, id, gradient } = this.props;\r\n          if (mask) {\r\n              return `url(#mask-pattern-${id})`;\r\n          }\r\n          else {\r\n              if (gradient) {\r\n                  return `url(#gradient-${id})`;\r\n              }\r\n              return color;\r\n          }\r\n      }\r\n      getTooltipData() {\r\n          const { data, isCategorical } = this.props;\r\n          const isVertical = this.getIsVertical();\r\n          const xAttr = isCategorical ? 'x' : 'x0';\r\n          let x = data[xAttr];\r\n          // Stacked diverging negative numbers\r\n          // in horizontal layouts need to pull x0\r\n          if (data.x0 < 0) {\r\n              x = data.x0;\r\n          }\r\n          const matches = isVertical\r\n              ? data.key && data.key !== x\r\n              : data.key && data.key !== data.y;\r\n          if (matches) {\r\n              x = `${data.key} ∙ ${x}`;\r\n          }\r\n          return {\r\n              y: data.y,\r\n              x\r\n          };\r\n      }\r\n      getTransition(index) {\r\n          const { animated, barCount, layout } = this.props;\r\n          if (animated) {\r\n              let delay = 0;\r\n              if (layout === 'vertical') {\r\n                  delay = (index / barCount) * 0.5;\r\n              }\r\n              else {\r\n                  delay = ((barCount - index) / barCount) * 0.5;\r\n              }\r\n              return Object.assign(Object.assign({}, DEFAULT_TRANSITION), { delay: delay });\r\n          }\r\n          else {\r\n              return {\r\n                  type: false,\r\n                  delay: 0\r\n              };\r\n          }\r\n      }\r\n      renderBar(currentColorShade, coords, index) {\r\n          const { rounded, cursor, mask, id, data, rx, ry, onMouseMove } = this.props;\r\n          const maskPath = mask ? `url(#mask-${id})` : '';\r\n          const fill = this.getFill(currentColorShade);\r\n          const initialExit = this.getExit(coords);\r\n          const isVertical = this.getIsVertical();\r\n          const extras = constructFunctionProps(this.props, data);\r\n          const transition = this.getTransition(index);\r\n          // UGH: https://github.com/framer/motion/issues/384\r\n          const initial = Object.assign(Object.assign({}, initialExit), { attrX: initialExit.x, attrY: initialExit.y, fill });\r\n          delete initial.x;\r\n          delete initial.y;\r\n          const animate = Object.assign(Object.assign({}, coords), { attrX: coords.x, attrY: coords.y, fill });\r\n          delete animate.x;\r\n          delete animate.y;\r\n          return (React__default.createElement(\"g\", { ref: this.rect },\r\n              React__default.createElement(framerMotion.motion.rect, { className: classNames({\r\n                      [css$t.rounded]: rounded,\r\n                      [css$t.vertical]: isVertical,\r\n                      [css$t.horizontal]: !isVertical\r\n                  }, extras.className), style: Object.assign(Object.assign({}, extras.style), { cursor }), mask: maskPath, rx: rx, ry: ry, initial: initial, animate: animate, exit: initial, transition: transition, onMouseEnter: bind(this.onMouseEnter, this), onMouseLeave: bind(this.onMouseLeave, this), onClick: bind(this.onMouseClick, this), onMouseMove: onMouseMove })));\r\n      }\r\n      renderGuideBar() {\r\n          const { data, yScale, active, barIndex, type, guide, xScale } = this.props;\r\n          if (!guide) {\r\n              return null;\r\n          }\r\n          // If we are stacked, only render the first bar\r\n          if (type === 'stacked' && barIndex !== 0) {\r\n              return null;\r\n          }\r\n          // No reason to show them since they are always 100% tall\r\n          if (type === 'stackedNormalized' || type === 'marimekko') {\r\n              console.error('Guide bars are not supported for these chart types');\r\n              return null;\r\n          }\r\n          const vertical = this.getIsVertical();\r\n          const valueScale = vertical ? yScale : xScale;\r\n          const [start, end] = valueScale.domain();\r\n          const attr = vertical ? 'y' : 'x';\r\n          // For stacked diverging we need to flip the points for positive / negative bars\r\n          const attrStart = type === 'stackedDiverging' ? '0' : '1';\r\n          const endPoint = type === 'stackedDiverging' ? start : end;\r\n          const startPoint = type === 'stackedDiverging' && data[attr] > 0 ? end : endPoint;\r\n          const coords = this.getCoords(Object.assign(Object.assign({}, data), { [attr]: endPoint, [`${attr}${attrStart}`]: startPoint }));\r\n          return (React__default.createElement(CloneElement, Object.assign({ element: guide }, coords, { active: active })));\r\n      }\r\n      render() {\r\n          const { activeBrightness, id, gradient, data, barIndex, color, yScale, barCount, xScale, groupIndex, rangeLines, animated, type, tooltip, layout, mask, label } = this.props;\r\n          const active = tooltip ? this.state.active : this.props.active;\r\n          const stroke = color(data, barIndex);\r\n          const coords = this.getCoords(data);\r\n          const currentColorShade = active\r\n              ? chroma(stroke)\r\n                  .brighten(activeBrightness)\r\n                  .hex()\r\n              : stroke;\r\n          const rangeLineColor = (rangeLines && rangeLines.props.color) || stroke;\r\n          const rangeLineColorShade = active\r\n              ? chroma(rangeLineColor).brighten(activeBrightness)\r\n              : rangeLineColor;\r\n          const index = groupIndex !== undefined ? groupIndex : barIndex;\r\n          const isVertical = this.getIsVertical();\r\n          const scale = isVertical ? yScale : xScale;\r\n          const tooltipData = this.getTooltipData();\r\n          const barLabel = isVertical ? tooltipData.y : tooltipData.x;\r\n          const placement = layout === 'vertical' ? 'top' : 'right';\r\n          return (React__default.createElement(React.Fragment, null,\r\n              this.renderGuideBar(),\r\n              this.renderBar(currentColorShade, coords, index),\r\n              rangeLines && (React__default.createElement(CloneElement, Object.assign({ element: rangeLines }, coords, { index: index, data: data, scale: scale, color: rangeLineColorShade, barCount: barCount, animated: animated, layout: layout, type: type }))),\r\n              mask && (React__default.createElement(React.Fragment, null,\r\n                  React__default.createElement(Mask, { id: `mask-${id}`, fill: `url(#gradient-${id})` }),\r\n                  React__default.createElement(CloneElement, { element: mask, id: `mask-pattern-${id}`, fill: stroke }))),\r\n              gradient && (React__default.createElement(CloneElement, { element: gradient, id: `gradient-${id}`, direction: layout, color: currentColorShade })),\r\n              label && (React__default.createElement(CloneElement, Object.assign({ element: label }, coords, { text: formatValue(barLabel), index: index, data: data, scale: scale, fill: label.props.fill || currentColorShade, barCount: barCount, animated: animated, layout: layout, type: type }))),\r\n              tooltip && (React__default.createElement(CloneElement, { element: tooltip, visible: !!active, reference: this.rect, color: color, value: tooltipData, placement: tooltip.props.placement || placement, data: data }))));\r\n      }\r\n  }\r\n  Bar.defaultProps = {\r\n      activeBrightness: 0.5,\r\n      rounded: true,\r\n      rx: 0,\r\n      ry: 0,\r\n      cursor: 'auto',\r\n      rangeLines: null,\r\n      label: null,\r\n      tooltip: null,\r\n      layout: 'vertical',\r\n      guide: null,\r\n      gradient: React__default.createElement(Gradient, null),\r\n      onClick: () => undefined,\r\n      onMouseEnter: () => undefined,\r\n      onMouseLeave: () => undefined,\r\n      onMouseMove: () => undefined\r\n  };\n\n  class BarSeries extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {};\r\n          this.ref = React.createRef();\r\n      }\r\n      getIsMulti() {\r\n          const { type } = this.props;\r\n          return (type === 'grouped' ||\r\n              type === 'stacked' ||\r\n              type === 'marimekko' ||\r\n              type === 'stackedNormalized' ||\r\n              type === 'stackedDiverging');\r\n      }\r\n      /**\r\n       * Get the translation for the bar group.\r\n       */\r\n      getTransform(data) {\r\n          const { xScale, yScale, type, layout } = this.props;\r\n          let xPos = 0;\r\n          let yPos = 0;\r\n          if (type !== 'marimekko') {\r\n              if (layout === 'vertical') {\r\n                  const val = xScale(data.key);\r\n                  xPos = val;\r\n              }\r\n              else {\r\n                  const val = yScale(data.key);\r\n                  yPos = val;\r\n              }\r\n          }\r\n          return `translate(${xPos}, ${yPos})`;\r\n      }\r\n      getColor(point, index) {\r\n          const { colorScheme, data, layout } = this.props;\r\n          const isMultiSeries = this.getIsMulti();\r\n          let key = 'key';\r\n          if (isMultiSeries) {\r\n              if (layout === 'vertical') {\r\n                  key = 'x';\r\n              }\r\n              else {\r\n                  key = 'y';\r\n              }\r\n          }\r\n          // histograms...\r\n          if (point[key] === undefined) {\r\n              key = 'x0';\r\n          }\r\n          return getColor({\r\n              colorScheme,\r\n              point,\r\n              index,\r\n              data,\r\n              isMultiSeries,\r\n              attribute: key\r\n          });\r\n      }\r\n      onMouseMove(event) {\r\n          var _a;\r\n          // Manuallly call mouse move so we don't have to kill bar pointer events\r\n          (_a = this.ref.current) === null || _a === void 0 ? void 0 : _a.onMouseMove(event);\r\n      }\r\n      renderBar(data, barIndex, barCount, groupIndex) {\r\n          const { xScale1, bar, padding, animated, isCategorical, layout, type, id } = this.props;\r\n          const { activeValues } = this.state;\r\n          const active = activeValues && activeValues.x === data.key;\r\n          const isVertical = layout === 'vertical';\r\n          let yScale = this.props.yScale;\r\n          let xScale = this.props.xScale;\r\n          if (xScale1) {\r\n              if (isVertical) {\r\n                  xScale = xScale1;\r\n              }\r\n              else {\r\n                  yScale = xScale1;\r\n              }\r\n          }\r\n          // Histograms dont have keys\r\n          let key = barIndex.toString();\r\n          if (data.key) {\r\n              key = `${data.key.toString()}-${groupIndex}`;\r\n          }\r\n          let barElements = Array.isArray(bar) ? bar[barIndex] : bar;\r\n          if (!bar) {\r\n              barElements = React__default.createElement(Bar, null);\r\n          }\r\n          return (React__default.createElement(React.Fragment, { key: key },\r\n              React__default.createElement(CloneElement, { element: barElements, id: `${id}-bar-${groupIndex}-${barIndex}`, animated: animated, active: active, xScale: xScale, xScale1: xScale1, yScale: yScale, padding: padding, barCount: barCount, groupIndex: groupIndex, barIndex: barIndex, data: data, isCategorical: isCategorical, color: this.getColor.bind(this), layout: layout, type: type, onMouseMove: this.onMouseMove.bind(this) })));\r\n      }\r\n      /**\r\n       * Get the bar group.\r\n       */\r\n      renderBarGroup(data, barCount, groupIndex) {\r\n          return (React__default.createElement(React.Fragment, null, data.map((barData, barIndex) => this.renderBar(barData, barIndex, barCount, groupIndex))));\r\n      }\r\n      onValueEnter(event) {\r\n          this.setState({\r\n              activeValues: event.value\r\n          });\r\n      }\r\n      onValueLeave() {\r\n          this.setState({\r\n              activeValues: undefined\r\n          });\r\n      }\r\n      render() {\r\n          const { data, tooltip, xScale, yScale, height, width, layout } = this.props;\r\n          const isMulti = this.getIsMulti();\r\n          return (React__default.createElement(CloneElement, { element: tooltip, childRef: this.ref, xScale: xScale, yScale: yScale, data: data, height: height, width: width, inverse: false, isHorizontal: layout === 'horizontal', color: this.getColor.bind(this), onValueEnter: this.onValueEnter.bind(this), onValueLeave: this.onValueLeave.bind(this) },\r\n              isMulti &&\r\n                  data.map((groupData, index) => (React__default.createElement(\"g\", { transform: this.getTransform(groupData), key: `bar-group-${index}` }, this.renderBarGroup(groupData.data, data.length, index)))),\r\n              !isMulti &&\r\n                  this.renderBarGroup(data, data.length)));\r\n      }\r\n  }\r\n  BarSeries.defaultProps = {\r\n      type: 'standard',\r\n      padding: 0.1,\r\n      groupPadding: 16,\r\n      animated: true,\r\n      tooltip: (React__default.createElement(TooltipArea, { tooltip: React__default.createElement(ChartTooltip, { followCursor: true, modifiers: {\r\n                  offset: '5px, 5px'\r\n              } }) })),\r\n      colorScheme: 'cybertron',\r\n      bar: React__default.createElement(Bar, null),\r\n      layout: 'vertical'\r\n  };\n\n  class RangeLines extends React.Component {\r\n      getIsVertical() {\r\n          return this.props.layout === 'vertical';\r\n      }\r\n      getEnter(rangeLineHeight) {\r\n          const { x, y, height, position, width, data } = this.props;\r\n          const isVertical = this.getIsVertical();\r\n          let newY = y;\r\n          let newX = x;\r\n          // If its diverging and the value is negative, we\r\n          // need to reverse the type...\r\n          const isTop = position === 'top';\r\n          const direction = isVertical\r\n              ? data.y < 0 && isTop\r\n                  ? 'bottom'\r\n                  : position\r\n              : data.x0 < 0 && isTop\r\n                  ? 'bottom'\r\n                  : position;\r\n          if (isVertical) {\r\n              if (direction === 'top') {\r\n                  newY = y;\r\n              }\r\n              else {\r\n                  newY = y + height - rangeLineHeight;\r\n              }\r\n          }\r\n          else {\r\n              if (direction === 'top') {\r\n                  newX = x + width - rangeLineHeight;\r\n              }\r\n              else {\r\n                  newX = x;\r\n              }\r\n          }\r\n          return {\r\n              x: newX,\r\n              y: newY,\r\n              opacity: 1\r\n          };\r\n      }\r\n      getExit(rangeLineHeight) {\r\n          const { x, scale, height, width, y, position, type } = this.props;\r\n          const isVertical = this.getIsVertical();\r\n          let newY = y;\r\n          let newX = x;\r\n          if (isVertical) {\r\n              const maxY = Math.max(...scale.range());\r\n              if (position === 'top') {\r\n                  newY = maxY;\r\n              }\r\n              else {\r\n                  newY = maxY + height - rangeLineHeight;\r\n              }\r\n          }\r\n          else {\r\n              const minX = Math.min(...scale.range());\r\n              if (position === 'top') {\r\n                  newX = minX;\r\n              }\r\n              else {\r\n                  newX = minX + width - rangeLineHeight;\r\n              }\r\n          }\r\n          if (type === 'stackedDiverging') {\r\n              if (isVertical) {\r\n                  newY = newY / 2;\r\n              }\r\n              else {\r\n                  newX = newX / 2;\r\n              }\r\n          }\r\n          return {\r\n              y: newY,\r\n              x: newX,\r\n              opacity: 0\r\n          };\r\n      }\r\n      getLineHeight() {\r\n          const { height, width, strokeWidth } = this.props;\r\n          const isVertical = this.getIsVertical();\r\n          return Math.min(strokeWidth, isVertical ? height : width);\r\n      }\r\n      getHeightWidth(rangeLineHeight) {\r\n          const { height, width } = this.props;\r\n          const isVertical = this.getIsVertical();\r\n          return {\r\n              width: isVertical ? width : rangeLineHeight,\r\n              height: isVertical ? rangeLineHeight : height\r\n          };\r\n      }\r\n      getDelay() {\r\n          const { animated, index, barCount, layout } = this.props;\r\n          let delay = 0;\r\n          if (animated) {\r\n              if (layout === 'vertical') {\r\n                  return (index / barCount) * 0.5;\r\n              }\r\n              else {\r\n                  return ((barCount - index) / barCount) * 0.5;\r\n              }\r\n          }\r\n          return delay;\r\n      }\r\n      render() {\r\n          const { color } = this.props;\r\n          const rangeLineHeight = this.getLineHeight();\r\n          const enterProps = this.getEnter(rangeLineHeight);\r\n          const exitProps = this.getExit(rangeLineHeight);\r\n          const { height, width } = this.getHeightWidth(rangeLineHeight);\r\n          const delay = this.getDelay();\r\n          // UGH: https://github.com/framer/motion/issues/384\r\n          const initial = Object.assign(Object.assign({}, exitProps), { attrX: exitProps.x, attrY: exitProps.y });\r\n          delete initial.x;\r\n          delete initial.y;\r\n          const animate = Object.assign(Object.assign({}, enterProps), { attrX: enterProps.x, attrY: enterProps.y });\r\n          delete animate.x;\r\n          delete animate.y;\r\n          return (React__default.createElement(framerMotion.motion.rect, { pointerEvents: \"none\", fill: color, width: width, height: height, initial: initial, animate: animate, exit: initial, transition: Object.assign(Object.assign({}, DEFAULT_TRANSITION), { delay }) }));\r\n      }\r\n  }\r\n  RangeLines.defaultProps = {\r\n      position: 'top',\r\n      strokeWidth: 1,\r\n      layout: 'vertical'\r\n  };\n\n  class StackedBarSeries extends React.Component {\r\n      render() {\r\n          const _a = this.props, { type } = _a, rest = __rest(_a, [\"type\"]);\r\n          return React__default.createElement(BarSeries, Object.assign({ type: type }, rest));\r\n      }\r\n  }\r\n  StackedBarSeries.defaultProps = Object.assign(Object.assign({}, BarSeries.defaultProps), { type: 'stacked', bar: (React__default.createElement(Bar, { rounded: false, gradient: React__default.createElement(Gradient, { stops: [\r\n                  React__default.createElement(GradientStop, { offset: \"5%\", stopOpacity: 0.1, key: \"start\" }),\r\n                  React__default.createElement(GradientStop, { offset: \"90%\", stopOpacity: 0.7, key: \"stop\" })\r\n              ] }), rangeLines: React__default.createElement(RangeLines, { position: \"top\", strokeWidth: 3 }) })) });\n\n  class StackedNormalizedBarSeries extends React.Component {\r\n      render() {\r\n          const _a = this.props, rest = __rest(_a, [\"type\"]);\r\n          return React__default.createElement(BarSeries, Object.assign({ type: \"stackedNormalized\" }, rest));\r\n      }\r\n  }\r\n  StackedNormalizedBarSeries.defaultProps = Object.assign(Object.assign({}, BarSeries.defaultProps), { type: 'stackedNormalized', tooltip: (React__default.createElement(TooltipArea, { tooltip: React__default.createElement(ChartTooltip, { followCursor: true, modifiers: {\r\n                  offset: '5px, 5px'\r\n              }, content: (point, color) => {\r\n                  point.data = point.data.map(d => {\r\n                      // Handle horz case\r\n                      const start = isNaN(d.y0) ? d.x0 : d.y0;\r\n                      const end = isNaN(d.y1) ? d.x1 : d.y1;\r\n                      return Object.assign(Object.assign({}, d), { value: `${formatValue(Math.floor((end - start) * 100))}%` });\r\n                  });\r\n                  return React__default.createElement(TooltipTemplate, { value: point, color: color });\r\n              } }) })), bar: (React__default.createElement(Bar, { rounded: false, gradient: React__default.createElement(Gradient, { stops: [\r\n                  React__default.createElement(GradientStop, { offset: \"5%\", stopOpacity: 0.1, key: \"start\" }),\r\n                  React__default.createElement(GradientStop, { offset: \"90%\", stopOpacity: 0.7, key: \"stop\" })\r\n              ] }), rangeLines: React__default.createElement(RangeLines, { position: \"top\", strokeWidth: 3 }) })) });\n\n  class MarimekkoBarSeries extends React.Component {\r\n      render() {\r\n          const _a = this.props, rest = __rest(_a, [\"type\"]);\r\n          return React__default.createElement(BarSeries, Object.assign({ type: \"marimekko\" }, rest));\r\n      }\r\n  }\r\n  MarimekkoBarSeries.defaultProps = Object.assign(Object.assign({}, BarSeries.defaultProps), { type: 'marimekko', padding: 10, tooltip: (React__default.createElement(TooltipArea, { tooltip: React__default.createElement(ChartTooltip, { followCursor: true, modifiers: {\r\n                  offset: '5px, 5px'\r\n              }, content: (point, color) => {\r\n                  const data = Object.assign(Object.assign({}, point), { data: point.data.map(d => (Object.assign(Object.assign({}, d), { value: `${formatValue(d.value)} ∙ ${formatValue(Math.floor((d.y1 - d.y0) * 100))}%` }))) });\r\n                  return React__default.createElement(TooltipTemplate, { value: data, color: color });\r\n              } }) })), bar: (React__default.createElement(Bar, { rounded: false, padding: 10, gradient: React__default.createElement(Gradient, { stops: [\r\n                  React__default.createElement(GradientStop, { offset: \"5%\", stopOpacity: 0.1, key: \"start\" }),\r\n                  React__default.createElement(GradientStop, { offset: \"90%\", stopOpacity: 0.7, key: \"stop\" })\r\n              ] }), rangeLines: React__default.createElement(RangeLines, { position: \"top\", strokeWidth: 3 }) })) });\n\n  class BarLabel extends React.PureComponent {\r\n      getIsVertical() {\r\n          return this.props.layout === 'vertical';\r\n      }\r\n      getEnter() {\r\n          const { x, y, height, position, width, data, padding } = this.props;\r\n          const isVertical = this.getIsVertical();\r\n          let newY = y;\r\n          let newX = x;\r\n          // If its diverging and the value is negative, we\r\n          // need to reverse the type...\r\n          const isTop = position === 'top';\r\n          const direction = isVertical\r\n              ? data.y < 0 && isTop\r\n                  ? 'bottom'\r\n                  : position\r\n              : data.x0 < 0 && isTop\r\n                  ? 'bottom'\r\n                  : position;\r\n          if (isVertical) {\r\n              if (direction === 'top') {\r\n                  newY = y - padding;\r\n              }\r\n              else if (direction === 'center') {\r\n                  newY = y + height / 2;\r\n              }\r\n              else if (direction === 'bottom') {\r\n                  newY = y + height - padding;\r\n              }\r\n              newX = newX + width / 2;\r\n          }\r\n          else {\r\n              if (direction === 'top') {\r\n                  newX = x + width + padding;\r\n              }\r\n              else if (direction === 'center') {\r\n                  newX = x + width / 2;\r\n              }\r\n              else if (direction === 'bottom') {\r\n                  newX = x + padding;\r\n              }\r\n              newY = newY + height / 2;\r\n          }\r\n          return {\r\n              translateX: newX,\r\n              translateY: newY,\r\n              opacity: 1\r\n          };\r\n      }\r\n      getExit() {\r\n          const { x, scale, height, width, y, position, type, padding } = this.props;\r\n          const isVertical = this.getIsVertical();\r\n          let newY = y;\r\n          let newX = x;\r\n          if (isVertical) {\r\n              const maxY = Math.max(...scale.range());\r\n              if (position === 'top') {\r\n                  newY = maxY;\r\n              }\r\n              else {\r\n                  newY = maxY + height + padding;\r\n              }\r\n              newX = newX + width / 2;\r\n          }\r\n          else {\r\n              const minX = Math.min(...scale.range());\r\n              if (position === 'top') {\r\n                  newX = minX;\r\n              }\r\n              else {\r\n                  newX = minX + width + padding;\r\n              }\r\n              newY = newY + height / 2;\r\n          }\r\n          if (type === 'stackedDiverging') {\r\n              if (isVertical) {\r\n                  newY = newY / 2;\r\n              }\r\n              else {\r\n                  newX = newX / 2;\r\n              }\r\n          }\r\n          return {\r\n              translateY: newY,\r\n              translateX: newX,\r\n              opacity: 0\r\n          };\r\n      }\r\n      getDelay() {\r\n          const { animated, index, barCount, layout } = this.props;\r\n          let delay = 0;\r\n          if (animated) {\r\n              if (layout === 'vertical') {\r\n                  return (index / barCount) * 0.5;\r\n              }\r\n              else {\r\n                  return ((barCount - index) / barCount) * 0.5;\r\n              }\r\n          }\r\n          return delay;\r\n      }\r\n      render() {\r\n          const { fontSize, fontFamily, fill, className, text } = this.props;\r\n          const enterProps = this.getEnter();\r\n          const exitProps = this.getExit();\r\n          const delay = this.getDelay();\r\n          const textAnchor = this.getIsVertical() ? 'middle' : 'start';\r\n          return (React__default.createElement(framerMotion.motion.g, { initial: exitProps, animate: enterProps, exit: exitProps, transition: Object.assign(Object.assign({}, DEFAULT_TRANSITION), { delay }), fontSize: fontSize, fontFamily: fontFamily },\r\n              React__default.createElement(\"text\", { fill: fill, className: className, textAnchor: textAnchor }, text)));\r\n      }\r\n  }\r\n  BarLabel.defaultProps = {\r\n      position: 'top',\r\n      layout: 'vertical',\r\n      fontSize: 13,\r\n      padding: 5,\r\n      fontFamily: 'sans-serif',\r\n      fill: '#000'\r\n  };\n\n  class HistogramBarSeries extends React.Component {\r\n      render() {\r\n          const _a = this.props, rest = __rest(_a, [\"type\"]);\r\n          return React__default.createElement(BarSeries, Object.assign({}, rest));\r\n      }\r\n  }\r\n  HistogramBarSeries.defaultProps = Object.assign(Object.assign({}, BarSeries.defaultProps), { colorScheme: schemes.cybertron[0], tooltip: (React__default.createElement(TooltipArea, { tooltip: React__default.createElement(ChartTooltip, { followCursor: true, modifiers: {\r\n                  offset: '5px, 5px'\r\n              }, content: (point, color) => {\r\n                  const data = Object.assign(Object.assign({}, point), { x: `${formatValue(point.x0)} - ${formatValue(point.x1)}`, value: point.y });\r\n                  return React__default.createElement(TooltipTemplate, { value: data, color: color });\r\n              } }) })) });\n\n  const GuideBar = (_a) => {\r\n      var { active, fill = '#eee', opacity = 0.15 } = _a, rest = __rest(_a, [\"active\", \"fill\", \"opacity\"]);\r\n      const { x, y } = rest, other = __rest(rest, [\"x\", \"y\"]);\r\n      return (React__default.createElement(framerMotion.motion.rect, Object.assign({}, other, { fill: fill, pointerEvents: \"none\", initial: \"hidden\", animate: active ? 'visible' : 'hidden', variants: {\r\n              hidden: { opacity: 0, attrX: x, attrY: y },\r\n              visible: { opacity, attrX: x, attrY: y }\r\n          } })));\r\n  };\n\n  var css$u = \".BarChart-module_barChart__1TypA {\\n  overflow: visible; }\\n  .BarChart-module_barChart__1TypA.BarChart-module_stackedNormalized__2uegt .bar, .BarChart-module_barChart__1TypA.BarChart-module_stacked__3ZLYq .bar, .BarChart-module_barChart__1TypA.BarChart-module_marimekko__-hOhA .bar {\\n    stroke: var(--color-background);\\n    stroke-width: 0.2; }\\n\";\n  var css$v = {\"barChart\":\"BarChart-module_barChart__1TypA\",\"stackedNormalized\":\"BarChart-module_stackedNormalized__2uegt\",\"stacked\":\"BarChart-module_stacked__3ZLYq\",\"marimekko\":\"BarChart-module_marimekko__-hOhA\"};\n  styleInject(css$u);\n\n  class BarChart extends React.Component {\r\n      getScalesAndData(chartHeight, chartWidth) {\r\n          const { yAxis, xAxis, series } = this.props;\r\n          const { type, layout } = series.props;\r\n          const isVertical = this.getIsVertical();\r\n          const isMarimekko = type === 'marimekko';\r\n          const isGrouped = type === 'grouped';\r\n          const isStacked = type === 'stacked' ||\r\n              type === 'stackedNormalized' ||\r\n              type === 'stackedDiverging';\r\n          const isMultiSeries = isGrouped || isStacked;\r\n          let data;\r\n          if (isStacked) {\r\n              let distroType = 'default';\r\n              if (type === 'stackedNormalized') {\r\n                  distroType = 'expand';\r\n              }\r\n              else if (type === 'stackedDiverging') {\r\n                  distroType = 'diverging';\r\n              }\r\n              data = buildBarStackData(this.props.data, distroType, layout);\r\n          }\r\n          else if (type === 'waterfall') {\r\n              data = buildWaterfall(this.props.data, layout, this.props.series.props.binSize);\r\n          }\r\n          else if (isMarimekko) {\r\n              data = buildMarimekkoData(this.props.data);\r\n          }\r\n          else if (isGrouped) {\r\n              data = buildNestedChartData(this.props.data, false, layout);\r\n          }\r\n          else {\r\n              data = buildShallowChartData(this.props.data, layout, this.props.series.props.binSize);\r\n          }\r\n          let yScale;\r\n          let xScale;\r\n          let xScale1;\r\n          if (isVertical) {\r\n              if (isGrouped) {\r\n                  const { keyScale, groupScale } = this.getMultiGroupScales(data, chartHeight, chartWidth);\r\n                  xScale = groupScale;\r\n                  xScale1 = keyScale;\r\n              }\r\n              else if (isMarimekko) {\r\n                  const { keyScale, groupScale } = this.getMarimekkoGroupScales(data, xAxis, chartWidth);\r\n                  xScale = groupScale;\r\n                  xScale1 = keyScale;\r\n              }\r\n              else {\r\n                  xScale = this.getKeyScale(data, xAxis, isMultiSeries, chartWidth);\r\n              }\r\n              yScale = this.getValueScale(data, yAxis, isMultiSeries, chartHeight);\r\n          }\r\n          else {\r\n              if (isGrouped) {\r\n                  const { keyScale, groupScale } = this.getMultiGroupScales(data, chartHeight, chartWidth);\r\n                  yScale = groupScale;\r\n                  xScale1 = keyScale;\r\n                  xScale = this.getKeyScale(data, xAxis, isMultiSeries, chartWidth);\r\n              }\r\n              else if (isMarimekko) {\r\n                  throw new Error('Marimekko is currently not supported for horizontal layouts');\r\n              }\r\n              else {\r\n                  xScale = this.getKeyScale(data, xAxis, isMultiSeries, chartWidth);\r\n                  yScale = this.getValueScale(data, yAxis, isMultiSeries, chartHeight);\r\n              }\r\n          }\r\n          return { xScale, xScale1, yScale, data };\r\n      }\r\n      getKeyAxis() {\r\n          const { yAxis, xAxis } = this.props;\r\n          const isVertical = this.getIsVertical();\r\n          return isVertical ? xAxis : yAxis;\r\n      }\r\n      getIsDiverging() {\r\n          return this.props.series.props.type === 'stackedDiverging';\r\n      }\r\n      getIsVertical() {\r\n          return this.props.series.props.layout === 'vertical';\r\n      }\r\n      getMarimekkoGroupScales(data, axis, width) {\r\n          const { series } = this.props;\r\n          const keyScale = getMarimekkoScale(width, axis.props.roundDomains);\r\n          const groupScale = getMarimekkoGroupScale({\r\n              width,\r\n              padding: series.props.padding,\r\n              data,\r\n              valueScale: keyScale\r\n          });\r\n          return {\r\n              keyScale,\r\n              groupScale\r\n          };\r\n      }\r\n      getMultiGroupScales(data, height, width) {\r\n          const { series } = this.props;\r\n          const isVertical = this.getIsVertical();\r\n          const { groupPadding, layout } = series.props;\r\n          const groupScale = getGroupScale({\r\n              dimension: isVertical ? width : height,\r\n              direction: layout,\r\n              padding: groupPadding,\r\n              data\r\n          });\r\n          const keyScale = getInnerScale({\r\n              groupScale: groupScale,\r\n              padding: series.props.padding,\r\n              data,\r\n              prop: isVertical ? 'x' : 'y'\r\n          });\r\n          return {\r\n              groupScale,\r\n              keyScale\r\n          };\r\n      }\r\n      getKeyScale(data, axis, isMultiSeries, width) {\r\n          const { series } = this.props;\r\n          return getXScale({\r\n              width,\r\n              type: axis.props.type,\r\n              roundDomains: axis.props.roundDomains,\r\n              data,\r\n              padding: series.props.padding,\r\n              domain: axis.props.domain,\r\n              isMultiSeries,\r\n              isDiverging: this.getIsDiverging()\r\n          });\r\n      }\r\n      getValueScale(data, axis, isMultiSeries, height) {\r\n          const { series } = this.props;\r\n          return getYScale({\r\n              roundDomains: axis.props.roundDomains,\r\n              padding: series.props.padding,\r\n              type: axis.props.type,\r\n              height,\r\n              data,\r\n              domain: axis.props.domain,\r\n              isMultiSeries,\r\n              isDiverging: this.getIsDiverging()\r\n          });\r\n      }\r\n      renderChart(containerProps) {\r\n          const { chartHeight, chartWidth, id, updateAxes } = containerProps;\r\n          const { series, xAxis, yAxis, brush, gridlines, secondaryAxis } = this.props;\r\n          const { xScale, xScale1, yScale, data } = this.getScalesAndData(chartHeight, chartWidth);\r\n          const isVertical = this.getIsVertical();\r\n          const keyAxis = this.getKeyAxis();\r\n          const isCategorical = keyAxis.props.type === 'category';\r\n          return (React__default.createElement(React.Fragment, null,\r\n              containerProps.chartSized && gridlines && (React__default.createElement(CloneElement, { element: gridlines, height: chartHeight, width: chartWidth, yScale: yScale, xScale: xScale, yAxis: yAxis.props, xAxis: xAxis.props })),\r\n              React__default.createElement(CloneElement, { element: xAxis, height: chartHeight, width: chartWidth, scale: xScale, onDimensionsChange: bind(updateAxes, this, isVertical ? 'horizontal' : 'vertical') }),\r\n              React__default.createElement(CloneElement, { element: yAxis, height: chartHeight, width: chartWidth, scale: yScale, onDimensionsChange: bind(updateAxes, this, isVertical ? 'vertical' : 'horizontal') }),\r\n              secondaryAxis &&\r\n                  secondaryAxis.map((axis, i) => (React__default.createElement(CloneElement, { key: i, element: axis, height: chartHeight, width: chartWidth, onDimensionsChange: bind(updateAxes, this, 'horizontal') }))),\r\n              containerProps.chartSized && (React__default.createElement(CloneElement, { element: brush, height: chartHeight, width: chartWidth, scale: xScale },\r\n                  React__default.createElement(CloneElement, { element: series, id: `bar-series-${id}`, data: data, height: chartHeight, width: chartWidth, isCategorical: isCategorical, xScale: xScale, xScale1: xScale1, yScale: yScale })))));\r\n      }\r\n      render() {\r\n          const { id, width, height, margins, className, series, xAxis, yAxis } = this.props;\r\n          return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, xAxisVisible: isAxisVisible(xAxis.props), yAxisVisible: isAxisVisible(yAxis.props), className: classNames(css$v.barChart, className, css$v[series.props.type]) }, props => this.renderChart(props)));\r\n      }\r\n  }\r\n  BarChart.defaultProps = {\r\n      data: [],\r\n      xAxis: (React__default.createElement(LinearXAxis, { type: \"category\", tickSeries: React__default.createElement(LinearXAxisTickSeries, { tickSize: 20 }) })),\r\n      yAxis: React__default.createElement(LinearYAxis, { type: \"value\" }),\r\n      series: React__default.createElement(BarSeries, null),\r\n      gridlines: React__default.createElement(GridlineSeries, null),\r\n      brush: null\r\n  };\n\n  const MarimekkoChart = (_a) => {\r\n      var { series = React__default.createElement(MarimekkoBarSeries, null), xAxis = (React__default.createElement(LinearXAxis, { type: \"category\", tickSeries: React__default.createElement(LinearXAxisTickSeries, { tickSize: 15 }) })), yAxis = (React__default.createElement(LinearYAxis, { type: \"value\", tickSeries: React__default.createElement(LinearYAxisTickSeries, { label: React__default.createElement(LinearYAxisTickLabel, { rotation: false, format: data => `${data * 100}%` }) }) })) } = _a, rest = __rest(_a, [\"series\", \"xAxis\", \"yAxis\"]);\r\n      return React__default.createElement(BarChart, Object.assign({}, rest, { series: series, xAxis: xAxis, yAxis: yAxis }));\r\n  };\n\n  const StackedBarChart = (_a) => {\r\n      var { series = React__default.createElement(StackedBarSeries, null) } = _a, rest = __rest(_a, [\"series\"]);\r\n      return React__default.createElement(BarChart, Object.assign({}, rest, { series: series }));\r\n  };\n\n  const StackedNormalizedBarChart = (_a) => {\r\n      var { series = React__default.createElement(StackedNormalizedBarSeries, null), yAxis = (React__default.createElement(LinearYAxis, { type: \"value\", tickSeries: React__default.createElement(LinearYAxisTickSeries, { label: React__default.createElement(LinearYAxisTickLabel, { rotation: false, format: data => `${data * 100}%` }) }) })) } = _a, rest = __rest(_a, [\"series\", \"yAxis\"]);\r\n      return React__default.createElement(BarChart, Object.assign({}, rest, { series: series, yAxis: yAxis }));\r\n  };\n\n  const HistogramBarChart = (_a) => {\r\n      var { series = React__default.createElement(HistogramBarSeries, null) } = _a, rest = __rest(_a, [\"series\"]);\r\n      return React__default.createElement(BarChart, Object.assign({}, rest, { series: series }));\r\n  };\n\n  var css$w = \".HiveNode-module_node__3erj2 {\\n  transition: opacity 100ms ease-in-out;\\n  cursor: pointer; }\\n\\n.HiveNode-module_inactive__3qXzC {\\n  opacity: 0.2; }\\n\";\n  var css$x = {\"node\":\"HiveNode-module_node__3erj2\",\"inactive\":\"HiveNode-module_inactive__3qXzC\"};\n  styleInject(css$w);\n\n  class HiveNode extends React.Component {\r\n      render() {\r\n          const { angle, radius, node, color, onClick, onMouseOver, onMouseOut, active, disabled } = this.props;\r\n          // If the size exists on the node, use it to specify the node size.\r\n          // Otherwise, calculate a relative size using the node count.\r\n          let size = node.size;\r\n          if (size === undefined) {\r\n              size = node.count || 0;\r\n          }\r\n          return (React__default.createElement(\"circle\", { className: classNames(css$x.node, {\r\n                  [css$x.inactive]: !active\r\n              }), transform: `rotate(${getDegrees(angle(node.x))})`, cx: radius(node.y), r: size, style: { cursor: disabled ? 'initial' : 'cursor' }, fill: color(node.x), onClick: onClick, onMouseOver: onMouseOver, onMouseOut: onMouseOut }));\r\n      }\r\n  }\n\n  var css$y = \".HiveAxis-module_axis__30gBf {\\n  stroke: #575f67;\\n  stroke-width: 1.5px; }\\n\";\n  var css$z = {\"axis\":\"HiveAxis-module_axis__30gBf\"};\n  styleInject(css$y);\n\n  class HiveAxis extends React.Component {\r\n      render() {\r\n          const { radius, index, angle, color } = this.props;\r\n          const [axisStart, axisEnd] = radius.range();\r\n          const axisLength = axisEnd - axisStart;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              React__default.createElement(\"line\", { className: css$z.axis, style: { stroke: color(index) }, transform: `rotate(${getDegrees(angle(index))})`, x1: axisStart, x2: axisEnd }),\r\n              React__default.createElement(\"line\", { className: css$z.axis, style: { stroke: color(index) }, transform: `rotate(${getDegrees(angle(index)) + 90})`, x1: -axisLength / 20, x2: axisLength / 20, y1: -axisEnd, y2: -axisEnd }),\r\n              React__default.createElement(\"line\", { className: css$z.axis, style: { stroke: color(index) }, transform: `rotate(${getDegrees(angle(index)) + 90})`, x1: -axisStart / 3, x2: 0, y1: axisStart * -0.8, y2: axisStart * -1 }),\r\n              React__default.createElement(\"line\", { className: css$z.axis, style: { stroke: color(index) }, transform: `rotate(${getDegrees(angle(index)) + 90})`, x1: 0, x2: axisStart / 3, y1: -axisStart, y2: axisStart * -0.8 })));\r\n      }\r\n  }\n\n  /**\r\n   * Hive layout\r\n   * Original: https://github.com/d3/d3-plugins/tree/master/hive\r\n   */\r\n  function hiveLayout() {\r\n      let source = d => d.source;\r\n      let target = d => d.target;\r\n      let angle = d => d.angle;\r\n      let startRadius = d => d.radius;\r\n      let endRadius = startRadius;\r\n      const arcOffset = -Math.PI / 2;\r\n      const link = (d, i) => {\r\n          let s = node(source, this, d, i);\r\n          let t = node(target, this, d, i);\r\n          let x;\r\n          if (t.a < s.a) {\r\n              x = t;\r\n              t = s;\r\n              s = x;\r\n          }\r\n          if (t.a - s.a > Math.PI) {\r\n              s.a += 2 * Math.PI;\r\n          }\r\n          const a1 = s.a + (t.a - s.a) / 3;\r\n          const a2 = t.a - (t.a - s.a) / 3;\r\n          return s.r0 - s.r1 || t.r0 - t.r1\r\n              ? 'M' +\r\n                  Math.cos(s.a) * s.r0 +\r\n                  ',' +\r\n                  Math.sin(s.a) * s.r0 +\r\n                  'L' +\r\n                  Math.cos(s.a) * s.r1 +\r\n                  ',' +\r\n                  Math.sin(s.a) * s.r1 +\r\n                  'C' +\r\n                  Math.cos(a1) * s.r1 +\r\n                  ',' +\r\n                  Math.sin(a1) * s.r1 +\r\n                  ' ' +\r\n                  Math.cos(a2) * t.r1 +\r\n                  ',' +\r\n                  Math.sin(a2) * t.r1 +\r\n                  ' ' +\r\n                  Math.cos(t.a) * t.r1 +\r\n                  ',' +\r\n                  Math.sin(t.a) * t.r1 +\r\n                  'L' +\r\n                  Math.cos(t.a) * t.r0 +\r\n                  ',' +\r\n                  Math.sin(t.a) * t.r0 +\r\n                  'C' +\r\n                  Math.cos(a2) * t.r0 +\r\n                  ',' +\r\n                  Math.sin(a2) * t.r0 +\r\n                  ' ' +\r\n                  Math.cos(a1) * s.r0 +\r\n                  ',' +\r\n                  Math.sin(a1) * s.r0 +\r\n                  ' ' +\r\n                  Math.cos(s.a) * s.r0 +\r\n                  ',' +\r\n                  Math.sin(s.a) * s.r0\r\n              : 'M' +\r\n                  Math.cos(s.a) * s.r0 +\r\n                  ',' +\r\n                  Math.sin(s.a) * s.r0 +\r\n                  'C' +\r\n                  Math.cos(a1) * s.r1 +\r\n                  ',' +\r\n                  Math.sin(a1) * s.r1 +\r\n                  ' ' +\r\n                  Math.cos(a2) * t.r1 +\r\n                  ',' +\r\n                  Math.sin(a2) * t.r1 +\r\n                  ' ' +\r\n                  Math.cos(t.a) * t.r1 +\r\n                  ',' +\r\n                  Math.sin(t.a) * t.r1;\r\n      };\r\n      const node = (method, thiz, d, i) => {\r\n          const n = method.call(thiz, d, i);\r\n          const a = +(typeof angle === 'function' ? angle.call(thiz, n, i) : angle) +\r\n              arcOffset;\r\n          const r0 = +(typeof startRadius === 'function'\r\n              ? startRadius.call(thiz, n, i)\r\n              : startRadius);\r\n          const r1 = startRadius === endRadius\r\n              ? r0\r\n              : +(typeof endRadius === 'function'\r\n                  ? endRadius.call(thiz, n, i)\r\n                  : endRadius);\r\n          return { r0, r1, a };\r\n      };\r\n      link.source = s => {\r\n          if (!s) {\r\n              return source;\r\n          }\r\n          source = s;\r\n          return link;\r\n      };\r\n      link.target = t => {\r\n          if (!t) {\r\n              return target;\r\n          }\r\n          target = t;\r\n          return link;\r\n      };\r\n      link.angle = a => {\r\n          if (!a) {\r\n              return angle;\r\n          }\r\n          angle = a;\r\n          return link;\r\n      };\r\n      link.radius = r => {\r\n          if (!r) {\r\n              return startRadius;\r\n          }\r\n          startRadius = endRadius = r;\r\n          return link;\r\n      };\r\n      link.startRadius = r => {\r\n          if (!r) {\r\n              return startRadius;\r\n          }\r\n          startRadius = r;\r\n          return link;\r\n      };\r\n      link.endRadius = r => {\r\n          if (!r) {\r\n              return endRadius;\r\n          }\r\n          endRadius = r;\r\n          return link;\r\n      };\r\n      return link;\r\n  }\n\n  var css$A = \".HiveLink-module_link__3c55e {\\n  fill: none;\\n  stroke-width: 1.5px;\\n  stroke-opacity: 0.5;\\n  transition: opacity 100ms ease-in-out; }\\n\\n.HiveLink-module_inactive__3ZmVV {\\n  opacity: 0.7; }\\n\";\n  var css$B = {\"link\":\"HiveLink-module_link__3c55e\",\"inactive\":\"HiveLink-module_inactive__3ZmVV\"};\n  styleInject(css$A);\n\n  class HiveLink extends React.Component {\r\n      prepareData() {\r\n          const { angle, radius } = this.props;\r\n          const hive = hiveLayout();\r\n          return {\r\n              angle: hive.angle(d => angle(d.x)),\r\n              radius: hive.radius(d => radius(d.y))\r\n          };\r\n      }\r\n      render() {\r\n          const { link, color, active, onMouseOver, onMouseOut } = this.props;\r\n          const { angle, radius } = this.prepareData();\r\n          const stroke = typeof color === 'string' ? color : color(link.source.x);\r\n          return (React__default.createElement(\"path\", { className: classNames(css$B.link, {\r\n                  [css$B.inactive]: !active\r\n              }), d: `${angle(link)} ${radius(link)}`, stroke: stroke, onMouseOver: onMouseOver, onMouseOut: onMouseOut }));\r\n      }\r\n  }\n\n  var css$C = \".HiveLabel-module_label__1tbC6 {\\n  fill: rgba(255, 255, 255, 0.5);\\n  font-size: 12px;\\n  text-transform: uppercase; }\\n\";\n  var css$D = {\"label\":\"HiveLabel-module_label__1tbC6\"};\n  styleInject(css$C);\n\n  const degrees = (radians) => {\r\n      const res = (radians / Math.PI) * 180;\r\n      return res > 90 ? res + 180 : res;\r\n  };\r\n  const translate = (d, outerRadius, padding) => d > 90 ? outerRadius + 8 + padding : -(outerRadius + padding);\r\n  class HiveLabel extends React.Component {\r\n      render() {\r\n          const { index, text, angle, outerRadius, label } = this.props;\r\n          const transform = degrees(angle(index));\r\n          return (React__default.createElement(\"text\", { dy: translate(transform, outerRadius, label.padding), className: css$D.label, strokeWidth: \"0.01\", textAnchor: \"middle\", transform: `rotate(${transform})` }, text));\r\n      }\r\n  }\n\n  var css$E = \".HiveTooltip-module_label__1gfVp {\\n  font-size: 16px;\\n  margin-bottom: 3px; }\\n\\n.HiveTooltip-module_value__36Qwn {\\n  font-size: 13px;\\n  color: rgba(255, 255, 255, 0.7); }\\n\";\n  var css$F = {\"label\":\"HiveTooltip-module_label__1gfVp\",\"value\":\"HiveTooltip-module_value__36Qwn\"};\n  styleInject(css$E);\n\n  class HiveTooltip extends React.Component {\r\n      render() {\r\n          const { axis, nodes, node: { x, value } } = this.props;\r\n          const { label } = axis[x];\r\n          const count = nodes.filter(n => n.value === value).length;\r\n          return (React__default.createElement(\"div\", null,\r\n              React__default.createElement(\"div\", { className: css$F.label },\r\n                  label,\r\n                  \" - \",\r\n                  formatValue(value)),\r\n              React__default.createElement(\"div\", { className: css$F.value },\r\n                  formatValue(count),\r\n                  \" Total\")));\r\n      }\r\n  }\n\n  class HivePlot extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {};\r\n      }\r\n      onNodeMouseOver(node, event) {\r\n          const { links, nodes, onNodeMouseOver, disabled } = this.props;\r\n          if (!disabled) {\r\n              const activeNodeIndex = nodes.indexOf(node);\r\n              const activeNodes = {};\r\n              for (const link of links) {\r\n                  const { source, target } = link;\r\n                  if (source.value === node.value || target.value === node.value) {\r\n                      const next = target.value === node.value ? source : target;\r\n                      const idx = nodes.indexOf(next);\r\n                      activeNodes[`node-${idx}`] = true;\r\n                  }\r\n              }\r\n              this.setState({\r\n                  tooltipReference: event.target,\r\n                  nodeTooltipData: node,\r\n                  active: Object.assign(Object.assign({ [`node-${activeNodeIndex}`]: true }, activeNodes), links.reduce((accumulator, link, i) => {\r\n                      if (link.source.value === node.value ||\r\n                          link.target.value === node.value) {\r\n                          accumulator[`link-${i}`] = true;\r\n                      }\r\n                      return accumulator;\r\n                  }, {}))\r\n              });\r\n          }\r\n          onNodeMouseOver({\r\n              nativeEvent: event,\r\n              node,\r\n              links: this.getLinksForNode(node)\r\n          });\r\n      }\r\n      onLinkMouseOver(link, event) {\r\n          const { onLinkMouseOver, disabled } = this.props;\r\n          if (!disabled) {\r\n              this.setState({\r\n                  tooltipReference: event.target,\r\n                  linkTooltipData: link\r\n              });\r\n              this.activateLink(link);\r\n          }\r\n          onLinkMouseOver({\r\n              nativeEvent: event,\r\n              link\r\n          });\r\n      }\r\n      activateLink(link) {\r\n          const { nodes, links } = this.props;\r\n          const activeLinkIndex = links.indexOf(link);\r\n          const activeLinksMap = {\r\n              [`link-${activeLinkIndex}`]: true\r\n          };\r\n          const activeLinks = [\r\n              link,\r\n              ...this.activateAdjacentLinks(links, link.target, activeLinksMap)\r\n          ];\r\n          this.setState({\r\n              active: Object.assign(Object.assign({}, activeLinksMap), nodes.reduce((accumulator, node, i) => {\r\n                  for (const activeLink of activeLinks) {\r\n                      const { source, target } = activeLink;\r\n                      if (node === source || node === target) {\r\n                          accumulator[`node-${i}`] = true;\r\n                      }\r\n                  }\r\n                  return accumulator;\r\n              }, {}))\r\n          });\r\n      }\r\n      activateAdjacentLinks(links, target, accumulator) {\r\n          const activeLinks = [];\r\n          links.forEach((childLink, index) => {\r\n              if (target === childLink.source) {\r\n                  if (!accumulator[`link-${index}`]) {\r\n                      accumulator[`link-${index}`] = true;\r\n                      activeLinks.push(childLink, ...this.activateAdjacentLinks(links, childLink.target, accumulator));\r\n                  }\r\n              }\r\n          });\r\n          return activeLinks;\r\n      }\r\n      onNodeMouseOut(node, event) {\r\n          const { onNodeMouseOut } = this.props;\r\n          this.resetActive();\r\n          onNodeMouseOut({\r\n              nativeEvent: event,\r\n              node,\r\n              links: this.getLinksForNode(node)\r\n          });\r\n      }\r\n      onLinkMouseOut(link, event) {\r\n          const { onLinkMouseOut } = this.props;\r\n          this.resetActive();\r\n          onLinkMouseOut({\r\n              nativeEvent: event,\r\n              link\r\n          });\r\n      }\r\n      onNodeClick(node, event) {\r\n          const { disabled } = this.props;\r\n          if (!disabled) {\r\n              const { onNodeClick } = this.props;\r\n              onNodeClick({\r\n                  nativeEvent: event,\r\n                  node,\r\n                  links: this.getLinksForNode(node)\r\n              });\r\n          }\r\n      }\r\n      getLinksForNode(node) {\r\n          const { links } = this.props;\r\n          return links.filter(link => link.source.value === node.value || link.target.value === node.value);\r\n      }\r\n      resetActive() {\r\n          this.setState({\r\n              active: undefined,\r\n              linkTooltipData: undefined,\r\n              nodeTooltipData: undefined,\r\n              tooltipReference: undefined\r\n          });\r\n      }\r\n      prepareData({ dimension, innerRadius, colorScheme, axis, label }) {\r\n          let outerRadius = dimension / 2;\r\n          if (label.show) {\r\n              outerRadius = outerRadius - (10 + label.padding);\r\n          }\r\n          return {\r\n              angle: d3Scale.scalePoint()\r\n                  .domain(d3Array.range(axis.length + 1))\r\n                  .range([0, 2 * Math.PI]),\r\n              radius: d3Scale.scaleLinear().range([innerRadius, outerRadius]),\r\n              axisColor: d3Scale.scaleOrdinal(colorScheme.axis).domain(d3Array.range(20)),\r\n              domainColor: d3Scale.scaleOrdinal(colorScheme.domain).domain(d3Array.range(20)),\r\n              outerRadius\r\n          };\r\n      }\r\n      renderAxis({ angle, radius, axisColor, outerRadius }) {\r\n          const { axis, label } = this.props;\r\n          return (React__default.createElement(React.Fragment, null, axis.map((a, i) => (React__default.createElement(\"g\", { key: `axis-${a.attribute}` },\r\n              React__default.createElement(HiveAxis, { angle: angle, index: i, color: axisColor, radius: radius }),\r\n              label.show && (React__default.createElement(HiveLabel, { index: i, text: a.label, label: label, outerRadius: outerRadius, angle: angle })))))));\r\n      }\r\n      isActive(nodeOrLink, index, type) {\r\n          const { activeIds } = this.props;\r\n          const { active } = this.state;\r\n          // If no there is nothing active, then everything is active.\r\n          if (!active && !activeIds.length) {\r\n              return true;\r\n          }\r\n          // If this node is active because it is being hovered\r\n          if (active && active[`${type}-${index}`]) {\r\n              return true;\r\n          }\r\n          // If the ID matches one of the active IDs passed in the props\r\n          if (!!activeIds.length &&\r\n              !!nodeOrLink.id &&\r\n              activeIds.includes(nodeOrLink.id)) {\r\n              return true;\r\n          }\r\n          return false;\r\n      }\r\n      renderLinks({ angle, radius, domainColor }) {\r\n          const { links } = this.props;\r\n          return (React__default.createElement(React.Fragment, null, links.map((link, i) => {\r\n              return (React__default.createElement(HiveLink, { key: `${link.value}-${i}`, color: link.color || domainColor, active: this.isActive(link, i, 'link'), angle: angle, radius: radius, link: link, onMouseOver: bind(this.onLinkMouseOver, this, link), onMouseOut: bind(this.onLinkMouseOut, this, link) }));\r\n          })));\r\n      }\r\n      renderNodes({ angle, radius, domainColor }) {\r\n          const { nodes, disabled } = this.props;\r\n          return (React__default.createElement(React.Fragment, null, nodes.map((node, i) => (React__default.createElement(HiveNode, { node: node, key: `${node.value}-${i}`, active: this.isActive(node, i, 'node'), color: domainColor, radius: radius, angle: angle, disabled: disabled, onMouseOver: bind(this.onNodeMouseOver, this, node), onMouseOut: bind(this.onNodeMouseOut, this, node), onClick: bind(this.onNodeClick, this, node) })))));\r\n      }\r\n      renderTooltip() {\r\n          const { tooltip, disabled, axis, nodes } = this.props;\r\n          const { active, tooltipReference, linkTooltipData: link, nodeTooltipData: node } = this.state;\r\n          const { formatter, placement, show } = tooltip;\r\n          return (React__default.createElement(React.Fragment, null, !disabled && show && (React__default.createElement(realayers.Tooltip, { visible: !!active, reference: tooltipReference, placement: placement, content: () => formatter(axis, nodes, link, node) ||\r\n                  (node ? (React__default.createElement(HiveTooltip, { node: node, nodes: nodes, axis: axis })) : null) }))));\r\n      }\r\n      renderChart({ height, width }) {\r\n          const { innerRadius, axis, colorScheme, label, className } = this.props;\r\n          const data = this.prepareData({\r\n              dimension: Math.min(height, width),\r\n              innerRadius,\r\n              colorScheme,\r\n              axis,\r\n              label\r\n          });\r\n          return (React__default.createElement(React.Fragment, null,\r\n              React__default.createElement(\"svg\", { width: width, height: height, className: classNames(className) },\r\n                  React__default.createElement(\"g\", { transform: `translate(${width / 2}, ${height / 2 +\r\n                        innerRadius})` },\r\n                      this.renderAxis(data),\r\n                      this.renderLinks(data),\r\n                      this.renderNodes(data))),\r\n              this.renderTooltip()));\r\n      }\r\n      render() {\r\n          return (React__default.createElement(ChartContainer, { height: this.props.height, width: this.props.width }, this.renderChart.bind(this)));\r\n      }\r\n  }\r\n  HivePlot.defaultProps = {\r\n      innerRadius: 20,\r\n      disabled: false,\r\n      axis: [],\r\n      nodes: [],\r\n      links: [],\r\n      label: {\r\n          show: true,\r\n          padding: 10\r\n      },\r\n      activeIds: [],\r\n      onNodeClick: () => undefined,\r\n      onNodeMouseOver: () => undefined,\r\n      onNodeMouseOut: () => undefined,\r\n      onLinkMouseOver: () => undefined,\r\n      onLinkMouseOut: () => undefined,\r\n      tooltip: {\r\n          show: true,\r\n          placement: 'top',\r\n          formatter: attr => attr.value\r\n      },\r\n      colorScheme: {\r\n          axis: ['#b1b2b6'],\r\n          domain: ['#b1b2b6']\r\n      }\r\n  };\n\n  class LineSeries extends React.Component {\r\n      render() {\r\n          return React__default.createElement(AreaSeries, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  LineSeries.defaultProps = Object.assign(Object.assign({}, AreaSeries.defaultProps), { area: null, line: React__default.createElement(Line, { strokeWidth: 3 }) });\r\n  class LineChart extends React.Component {\r\n      render() {\r\n          return React__default.createElement(AreaChart, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  LineChart.defaultProps = Object.assign(Object.assign({}, AreaChart.defaultProps), { series: React__default.createElement(LineSeries, null) });\n\n  const Map$1 = ({ id, width, height, margins, className, markers, data, fill = 'rgba(255, 255, 255, 0.3)' }) => {\r\n      const getProjection = React.useCallback(({ chartWidth, chartHeight }) => d3Geo.geoMercator()\r\n          .fitSize([chartWidth, chartHeight], data)\r\n          .center([0, 35]), [data]);\r\n      const renderMarker = React.useCallback((marker, index, projection) => {\r\n          const position = projection(marker.props.coordinates);\r\n          if (!position) {\r\n              console.warn(`Position for ${marker.props.coordinates.toString()} not found.`);\r\n              return null;\r\n          }\r\n          return (React__default.createElement(CloneElement, { element: marker, cx: position[0], cy: position[1], index: index }));\r\n      }, []);\r\n      const renderCountry = React.useCallback((point, index, path) => {\r\n          // Exclude ATA\r\n          if (point.id === '010') {\r\n              return null;\r\n          }\r\n          return React__default.createElement(\"path\", { key: `path-${index}`, d: path(point), fill: fill });\r\n      }, [fill]);\r\n      const renderChart = React.useCallback((containerProps) => {\r\n          if (!data) {\r\n              return null;\r\n          }\r\n          const projection = getProjection(containerProps);\r\n          const path = d3Geo.geoPath().projection(projection);\r\n          return (React__default.createElement(framerMotion.motion.g, { initial: {\r\n                  opacity: 0\r\n              }, animate: {\r\n                  opacity: 1\r\n              } },\r\n              data.features.map((point, index) => renderCountry(point, index, path)),\r\n              markers &&\r\n                  markers.map((marker, index) => (React__default.createElement(React.Fragment, { key: `marker-${index}` }, renderMarker(marker, index, projection))))));\r\n      }, [data, markers]);\r\n      return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, xAxisVisible: false, yAxisVisible: false, className: className }, props => renderChart(props)));\r\n  };\n\n  var css$G = \".MapMarker-module_marker__1OAhA {\\n  fill: var(--color-primary);\\n  cursor: pointer; }\\n\";\n  var css$H = {\"marker\":\"MapMarker-module_marker__1OAhA\"};\n  styleInject(css$G);\n\n  // Set padding modifier for the tooltips\r\n  const modifiers = {\r\n      offset: {\r\n          offset: '0, 3px'\r\n      }\r\n  };\r\n  const MapMarker = ({ size = 3, index, tooltip, cx, cy, onClick = () => undefined }) => {\r\n      const ref = React.useRef(null);\r\n      const [active, setActive] = React.useState(false);\r\n      return (React__default.createElement(React.Fragment, null,\r\n          React__default.createElement(framerMotion.motion.circle, { initial: {\r\n                  opacity: 0,\r\n                  scale: 0.02\r\n              }, animate: {\r\n                  opacity: 1,\r\n                  scale: 1\r\n              }, transition: {\r\n                  delay: index * 0.3\r\n              }, ref: ref, className: css$H.marker, cx: cx, cy: cy, r: size, onMouseEnter: () => setActive(true), onMouseLeave: () => setActive(false), onClick: onClick }),\r\n          tooltip && (React__default.createElement(realayers.Tooltip, { visible: active, reference: ref, modifiers: modifiers, content: tooltip }))));\r\n  };\n\n  const PieArc = ({ color, data, innerArc, cursor = 'initial', animated = true, disabled = false, onClick = () => undefined, onMouseEnter = () => undefined, onMouseLeave = () => undefined, tooltip = React__default.createElement(ChartTooltip, null) }) => {\r\n      const arcRef = React.useRef(null);\r\n      const prevEnter = React.useRef(null);\r\n      const [active, setActive] = React.useState(false);\r\n      const fill = React.useMemo(() => active ? chroma(color).brighten(0.5) : color, [color, active]);\r\n      const exit = React.useMemo(() => {\r\n          const startAngle = data.startAngle;\r\n          const endAngle = animated ? startAngle : data.endAngle;\r\n          return Object.assign(Object.assign({}, data), { startAngle,\r\n              endAngle });\r\n      }, [data, animated]);\r\n      const transition = React.useMemo(() => animated ? Object.assign({}, DEFAULT_TRANSITION) :\r\n          {\r\n              delay: 0\r\n          }, [animated]);\r\n      // Cache the previous for transition use later\r\n      const previousEnter = prevEnter.current\r\n          ? Object.assign({}, prevEnter.current) : undefined;\r\n      prevEnter.current = Object.assign({}, data);\r\n      const d = framerMotion.useMotionValue('');\r\n      const prevPath = framerMotion.useMotionValue(exit);\r\n      const spring = framerMotion.useSpring(prevPath, Object.assign(Object.assign({}, DEFAULT_TRANSITION), { from: 0, to: 1 }));\r\n      React.useEffect(() => {\r\n          const from = previousEnter || prevPath.get();\r\n          const interpolator = d3Interpolate.interpolate(from, data);\r\n          const unsub = spring.onChange(v => d.set(innerArc(interpolator(v))));\r\n          prevPath.set(data);\r\n          return unsub;\r\n      }, [innerArc, data]);\r\n      return (React__default.createElement(\"g\", { ref: arcRef },\r\n          React__default.createElement(framerMotion.motion.path, { transition: transition, d: d, style: { cursor }, fill: fill, onMouseEnter: event => {\r\n                  if (!disabled) {\r\n                      setActive(true);\r\n                      onMouseEnter({\r\n                          value: data.data,\r\n                          nativeEvent: event\r\n                      });\r\n                  }\r\n              }, onMouseLeave: event => {\r\n                  if (!disabled) {\r\n                      setActive(false);\r\n                      onMouseLeave({\r\n                          value: data.data,\r\n                          nativeEvent: event\r\n                      });\r\n                  }\r\n              }, onClick: event => {\r\n                  if (!disabled) {\r\n                      onClick({\r\n                          value: data.data,\r\n                          nativeEvent: event\r\n                      });\r\n                  }\r\n              } }),\r\n          tooltip && !tooltip.props.disabled && (React__default.createElement(CloneElement, { element: tooltip, visible: !!active, reference: arcRef, value: { y: data.data.data, x: data.data.key } }))));\r\n  };\n\n  const getTextAnchor = ({ startAngle, endAngle }) => startAngle + (endAngle - startAngle) / 2 < Math.PI ? 'start' : 'end';\r\n  class PieArcLabel extends React.PureComponent {\r\n      render() {\r\n          const { centroid, data, lineStroke, padding, fontSize, fontFill, format, fontFamily, position } = this.props;\r\n          const text = format ? format(data.data) : formatValue(data.data.key);\r\n          const textAnchor = getTextAnchor(data);\r\n          const [posX, posY] = position;\r\n          const innerLinePos = centroid(data);\r\n          let scale = posY / innerLinePos[1];\r\n          if (posY === 0 || innerLinePos[1] === 0) {\r\n              scale = 1;\r\n          }\r\n          const outerPos = [scale * innerLinePos[0], scale * innerLinePos[1]];\r\n          return (React__default.createElement(framerMotion.motion.g, { initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 }, transition: {\r\n                  duration: 0.1\r\n              } },\r\n              React__default.createElement(\"title\", null, text),\r\n              React__default.createElement(\"text\", { dy: padding, fill: fontFill, fontSize: fontSize, fontFamily: fontFamily, textAnchor: textAnchor, style: {\r\n                      shapeRendering: 'crispEdges',\r\n                      transform: `translate3d(${posX}px,${posY}px, 0)`\r\n                  } }, text),\r\n              React__default.createElement(\"polyline\", { fill: \"none\", stroke: lineStroke, points: `${innerLinePos},${outerPos},${posX} ${posY}` })));\r\n      }\r\n  }\r\n  PieArcLabel.defaultProps = {\r\n      format: undefined,\r\n      lineStroke: 'rgba(127,127,127,0.5)',\r\n      fontFill: '#8F979F',\r\n      fontSize: 11,\r\n      fontFamily: 'sans-serif',\r\n      padding: '.35em'\r\n  };\n\n  const factor = 1.2;\r\n  const midAngle = d => d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n  const labelVisible = arc => arc.endAngle - arc.startAngle > Math.PI / 30;\r\n  class PieArcSeries extends React.Component {\r\n      calculateRadius() {\r\n          const { doughnut, arcWidth, label, width, height } = this.props;\r\n          const outerRadius = Math.min(width, height) / (label ? 3 : 2);\r\n          const innerRadius = doughnut ? outerRadius * (1 - arcWidth) : 0;\r\n          return {\r\n              outerRadius,\r\n              innerRadius\r\n          };\r\n      }\r\n      shouldDisplayLabel(arcData) {\r\n          const { displayAllLabels } = this.props;\r\n          return displayAllLabels || labelVisible(arcData);\r\n      }\r\n      calculateLabelPositions(outerArc, outerRadius) {\r\n          const { label, data } = this.props;\r\n          const positions = data.map(d => {\r\n              const pos = outerArc.centroid(d);\r\n              pos[0] = factor * outerRadius * (midAngle(d) < Math.PI ? 1 : -1);\r\n              return pos;\r\n          });\r\n          if (label) {\r\n              const minDistance = 15;\r\n              for (let i = 0; i < data.length - 1; i++) {\r\n                  const a = data[i];\r\n                  if (!this.shouldDisplayLabel(a)) {\r\n                      continue;\r\n                  }\r\n                  const [aPosX, aPosY] = positions[i];\r\n                  for (let j = i + 1; j < data.length; j++) {\r\n                      const b = data[j];\r\n                      if (!this.shouldDisplayLabel(b)) {\r\n                          continue;\r\n                      }\r\n                      // if they're on the same side\r\n                      const [bPosX, bPosY] = positions[j];\r\n                      if (bPosX * aPosX > 0) {\r\n                          // if they're overlapping\r\n                          const o = minDistance - Math.abs(bPosY - aPosY);\r\n                          if (o > 0) {\r\n                              // push the second up or down\r\n                              positions[j][1] += Math.sign(bPosX) * o;\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          return positions;\r\n      }\r\n      innerArc(innerRadius, outerRadius) {\r\n          return point => {\r\n              const newOuter = this.calculateOuterRadius(outerRadius, point);\r\n              return d3Shape.arc()\r\n                  .innerRadius(innerRadius)\r\n                  .outerRadius(newOuter)(point);\r\n          };\r\n      }\r\n      calculateOuterRadius(outerRadius, point) {\r\n          const { explode, data } = this.props;\r\n          if (!explode) {\r\n              return outerRadius;\r\n          }\r\n          const maxVal = d3Array.max(data, d => d.value);\r\n          let newOuter = outerRadius;\r\n          if (explode && data !== undefined) {\r\n              newOuter = (outerRadius * point.value) / maxVal;\r\n          }\r\n          return newOuter;\r\n      }\r\n      centroid(innerRadius, outerRadius) {\r\n          return data => {\r\n              const newOuter = this.calculateOuterRadius(outerRadius, data);\r\n              return d3Shape.arc()\r\n                  .innerRadius(innerRadius)\r\n                  .outerRadius(newOuter)\r\n                  .centroid(data);\r\n          };\r\n      }\r\n      outerArc(outerRadius) {\r\n          return d3Shape.arc()\r\n              .innerRadius(outerRadius * factor)\r\n              .outerRadius(outerRadius * factor);\r\n      }\r\n      render() {\r\n          const { animated, label, arc, data } = this.props;\r\n          const { outerRadius, innerRadius } = this.calculateRadius();\r\n          const innerArc = this.innerArc(innerRadius, outerRadius);\r\n          const outerArc = this.outerArc(outerRadius);\r\n          const positions = this.calculateLabelPositions(outerArc, outerRadius);\r\n          const centroid = this.centroid(innerRadius, outerRadius);\r\n          return (React__default.createElement(React.Fragment, null, data.map((arcData, index) => (React__default.createElement(React.Fragment, { key: arcData.data.key.toString() },\r\n              label && this.shouldDisplayLabel(arcData) && (React__default.createElement(CloneElement, { element: label, data: arcData, centroid: centroid, position: positions[index] })),\r\n              React__default.createElement(CloneElement, { element: arc, data: arcData, animated: animated, innerArc: innerArc, color: getColor({\r\n                      data: this.props.data,\r\n                      colorScheme: this.props.colorScheme,\r\n                      point: arcData.data,\r\n                      index\r\n                  }) }))))));\r\n      }\r\n  }\r\n  PieArcSeries.defaultProps = {\r\n      animated: true,\r\n      colorScheme: 'cybertron',\r\n      innerRadius: 0,\r\n      explode: false,\r\n      displayAllLabels: false,\r\n      arcWidth: 0.25,\r\n      label: React__default.createElement(PieArcLabel, null),\r\n      arc: React__default.createElement(PieArc, null)\r\n  };\n\n  class PieChart extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.getData = memoize((data, explode) => {\r\n              const pieLayout = d3Shape.pie().value((d) => d.data);\r\n              // Explode sort doesn't work right...\r\n              if (!explode) {\r\n                  pieLayout.sort(null);\r\n              }\r\n              return pieLayout(data);\r\n          });\r\n      }\r\n      renderChart(containerProps) {\r\n          const { chartWidth, chartHeight } = containerProps;\r\n          const { series, displayAllLabels } = this.props;\r\n          const data = this.getData(this.props.data, this.props.series.props.explode);\r\n          return (React__default.createElement(CloneElement, { element: series, data: data, height: chartHeight, width: chartWidth, displayAllLabels: displayAllLabels }));\r\n      }\r\n      render() {\r\n          const { id, width, height, margins, className } = this.props;\r\n          return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, xAxisVisible: false, yAxisVisible: false, center: true, className: classNames(className) }, props => this.renderChart(props)));\r\n      }\r\n  }\r\n  PieChart.defaultProps = {\r\n      disabled: false,\r\n      displayAllLabels: false,\r\n      data: [],\r\n      margins: 10,\r\n      series: (React__default.createElement(PieArcSeries, { animated: true, doughnut: false, innerRadius: 0, arcWidth: 0.25, displayAllLabels: false }))\r\n  };\n\n  const JUSTIFICATION = {\r\n      justify: d3Sankey.sankeyJustify,\r\n      center: d3Sankey.sankeyCenter,\r\n      left: d3Sankey.sankeyLeft,\r\n      right: d3Sankey.sankeyRight\r\n  };\r\n  class Sankey extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = { activeNodes: [], activeLinks: [] };\r\n      }\r\n      getNodeColor(node, index) {\r\n          const { colorScheme, nodes } = this.props;\r\n          if (colorScheme) {\r\n              return getColor({\r\n                  data: nodes,\r\n                  colorScheme,\r\n                  point: nodes[index],\r\n                  index\r\n              });\r\n          }\r\n          else {\r\n              return node.props.color;\r\n          }\r\n      }\r\n      onNodeActive(node) {\r\n          const activeNodes = [node];\r\n          const activeLinks = [];\r\n          if (node.sourceLinks) {\r\n              activeLinks.push(...node.sourceLinks);\r\n              node.sourceLinks.forEach(sourceLink => {\r\n                  const sourceLinkTarget = sourceLink.target;\r\n                  if (sourceLinkTarget.index !== node.index) {\r\n                      activeNodes.push(sourceLinkTarget);\r\n                  }\r\n              });\r\n          }\r\n          if (node.targetLinks) {\r\n              activeLinks.push(...node.targetLinks);\r\n              node.targetLinks.forEach(targetLink => {\r\n                  const targetLinkSource = targetLink.source;\r\n                  if (targetLinkSource.index !== node.index) {\r\n                      activeNodes.push(targetLinkSource);\r\n                  }\r\n              });\r\n          }\r\n          this.setState({ activeNodes, activeLinks });\r\n      }\r\n      onLinkActive(link) {\r\n          const activeNodes = [link.source, link.target];\r\n          const activeLinks = [link];\r\n          this.setState({ activeNodes, activeLinks });\r\n      }\r\n      onInactive() {\r\n          this.setState({ activeNodes: [], activeLinks: [] });\r\n      }\r\n      renderNode(computedNode, index, chartWidth, node) {\r\n          const { animated } = this.props;\r\n          const { activeNodes } = this.state;\r\n          const active = activeNodes.some(node => node.index === computedNode.index);\r\n          const disabled = activeNodes.length > 0 && !active;\r\n          return (React__default.createElement(CloneElement, Object.assign({ element: node, key: `node-${index}`, active: active, animated: animated, disabled: disabled, chartWidth: chartWidth, onMouseEnter: bind(this.onNodeActive, this, computedNode), onMouseLeave: bind(this.onInactive, this, computedNode) }, computedNode)));\r\n      }\r\n      renderNodes(nodes, chartWidth) {\r\n          const nodeMap = new Map();\r\n          this.props.nodes.forEach(node => node && nodeMap.set(node.props.title, node));\r\n          nodes.sort((a, b) => {\r\n              const aX0 = a && a.x0 ? a.x0 : 0;\r\n              const aY0 = a && a.y0 ? a.y0 : 0;\r\n              const bX0 = b && b.x0 ? b.x0 : 0;\r\n              const bY0 = b && b.y0 ? b.y0 : 0;\r\n              return aX0 - bX0 || aY0 - bY0;\r\n          });\r\n          return (React__default.createElement(React.Fragment, null, nodes.map((node, index) => this.renderNode(node, index, chartWidth, nodeMap.get(node.title)))));\r\n      }\r\n      renderLink(computedLink, index, chartId) {\r\n          const { animated, links } = this.props;\r\n          const { activeLinks } = this.state;\r\n          const active = activeLinks.some(link => link.index === computedLink.index);\r\n          const disabled = activeLinks.length > 0 && !active;\r\n          return (React__default.createElement(CloneElement, Object.assign({ element: links[index], active: active, animated: animated, key: `link-${index}`, chartId: chartId, disabled: disabled }, computedLink, { onMouseEnter: bind(this.onLinkActive, this, computedLink), onMouseLeave: bind(this.onInactive, this, computedLink) })));\r\n      }\r\n      renderChart(containerProps) {\r\n          const { id, chartWidth, chartHeight } = containerProps;\r\n          const { justification, nodeWidth, nodePadding } = this.props;\r\n          const nodesCopy = this.props.nodes.map((node, index) => ({\r\n              id: node.props.id,\r\n              title: node.props.title,\r\n              color: this.getNodeColor(node, index)\r\n          }));\r\n          const linksCopy = this.props.links.map(link => ({\r\n              source: link.props.source,\r\n              target: link.props.target,\r\n              value: link.props.value\r\n          }));\r\n          const sankeyChart = d3Sankey.sankey()\r\n              .extent([[1, 1], [chartWidth, chartHeight]])\r\n              .nodeWidth(nodeWidth)\r\n              .nodePadding(nodePadding)\r\n              .nodeAlign(JUSTIFICATION[justification])\r\n              .nodeId((node) => node.id || node.index);\r\n          const { nodes, links } = sankeyChart({\r\n              nodes: nodesCopy,\r\n              links: linksCopy\r\n          });\r\n          return (containerProps.chartSized && (React__default.createElement(React.Fragment, { key: \"group\" },\r\n              links.map((link, index) => this.renderLink(link, index, `sankey-${id}`)),\r\n              this.renderNodes(nodes, chartWidth))));\r\n      }\r\n      render() {\r\n          const { id, width, height, margins, className } = this.props;\r\n          return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, className: className }, props => this.renderChart(props)));\r\n      }\r\n  }\r\n  Sankey.defaultProps = {\r\n      animated: true,\r\n      justification: 'justify',\r\n      nodeWidth: 15,\r\n      nodePadding: 10\r\n  };\n\n  var css$I = \".SankeyLabel-module_label__3--L3 {\\n  font-size: 12px;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  pointer-events: none; }\\n\";\n  var css$J = {\"label\":\"SankeyLabel-module_label__3--L3\"};\n  styleInject(css$I);\n\n  class SankeyLabel extends React.Component {\r\n      render() {\r\n          const { active, chartWidth, className, fill, node, opacity, padding, visible } = this.props;\r\n          const nodePositions = {\r\n              x0: node && node.x0 ? node.x0 : 0,\r\n              y0: node && node.y0 ? node.y0 : 0,\r\n              x1: node && node.x1 ? node.x1 : 0,\r\n              y1: node && node.y1 ? node.y1 : 0\r\n          };\r\n          const width = chartWidth || 0;\r\n          const showRightSide = nodePositions.x0 < width / 2;\r\n          const textAnchor = showRightSide ? 'start' : 'end';\r\n          return (visible &&\r\n              node && (React__default.createElement(\"text\", { className: classNames(css$J.label, className), x: showRightSide ? nodePositions.x1 + 6 : nodePositions.x0 - 6, y: (nodePositions.y1 + nodePositions.y0) / 2, dy: \"0.35em\", textAnchor: textAnchor, fill: fill, opacity: opacity(active), style: { padding } }, node.title)));\r\n      }\r\n  }\r\n  SankeyLabel.defaultProps = {\r\n      active: false,\r\n      fill: '#fff',\r\n      location: 'outside',\r\n      opacity: active => (active ? 1 : 0.5),\r\n      visible: true\r\n  };\n\n  const DEFAULT_COLOR = 'rgba(255, 255, 255, 0.2)';\n\n  var css$K = \".SankeyLink-module_link__1C-v0 {\\n  fill: none;\\n  transition: stroke-opacity 100ms ease-in-out, stroke 100ms ease-in-out;\\n  mix-blend-mode: screen; }\\n\\n.SankeyLink-module_tooltip__2dubX {\\n  text-align: center;\\n  pointer-events: none; }\\n  .SankeyLink-module_tooltip__2dubX .SankeyLink-module_tooltipLabel__2SWlT {\\n    font-size: 16px;\\n    margin-bottom: 3px;\\n    color: white;\\n    text-align: center; }\\n  .SankeyLink-module_tooltip__2dubX .SankeyLink-module_tooltipValue__2a0NJ {\\n    font-size: 13px;\\n    color: rgba(255, 255, 255, 0.7);\\n    text-align: center; }\\n\";\n  var css$L = {\"link\":\"SankeyLink-module_link__1C-v0\",\"tooltip\":\"SankeyLink-module_tooltip__2dubX\",\"tooltipLabel\":\"SankeyLink-module_tooltipLabel__2SWlT\",\"tooltipValue\":\"SankeyLink-module_tooltipValue__2a0NJ\"};\n  styleInject(css$K);\n\n  class SankeyLink extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.link = React.createRef();\r\n          this.state = {};\r\n      }\r\n      getEnter() {\r\n          const path = d3Sankey.sankeyLinkHorizontal();\r\n          const d = path(this.getLink());\r\n          const strokeWidth = Math.max(1, this.props.width);\r\n          return { d, strokeWidth };\r\n      }\r\n      getExit() {\r\n          const path = d3Sankey.sankeyLinkHorizontal();\r\n          const d = path(Object.assign(Object.assign({}, this.getLink()), { width: 0 }));\r\n          return { d, strokeWidth: 0 };\r\n      }\r\n      getLink() {\r\n          const { index, value, y0, y1, source, target, width } = this.props;\r\n          return { index, y0, y1, value, width, source, target };\r\n      }\r\n      getStroke() {\r\n          const { color, index, gradient, chartId } = this.props;\r\n          return gradient ? `url(#${chartId}-gradient-${index})` : color;\r\n      }\r\n      onMouseEnter(event) {\r\n          this.setState({ hovered: true });\r\n          this.props.onMouseEnter(event);\r\n      }\r\n      onMouseLeave(event) {\r\n          this.setState({ hovered: false });\r\n          this.props.onMouseLeave(event);\r\n      }\r\n      renderLink() {\r\n          const { active, className, disabled, index, opacity, style, onClick } = this.props;\r\n          const enterProps = this.getEnter();\r\n          const exitProps = this.getExit();\r\n          return (React__default.createElement(\"g\", { ref: this.link },\r\n              React__default.createElement(framerMotion.motion.path, { key: `sankey-link-${enterProps.d}-${index}`, className: classNames(css$L.link, className), style: style, initial: exitProps, animate: enterProps, exit: exitProps, transition: {\r\n                      duration: 0.5\r\n                  }, stroke: this.getStroke(), strokeOpacity: opacity(active, disabled), onClick: onClick, onMouseEnter: bind(this.onMouseEnter, this), onMouseLeave: bind(this.onMouseLeave, this) })));\r\n      }\r\n      renderTooltipContent() {\r\n          const { source, target, value } = this.props;\r\n          return (React__default.createElement(\"div\", { className: css$L.tooltip },\r\n              React__default.createElement(\"div\", { className: css$L.tooltipLabel }, `${source.title} → ${target.title}`),\r\n              React__default.createElement(\"div\", { className: css$L.tooltipValue }, formatValue(value))));\r\n      }\r\n      render() {\r\n          const { gradient, index, source, target, tooltip, chartId } = this.props;\r\n          const linkSource = source;\r\n          const linkTarget = target;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              gradient && (React__default.createElement(\"linearGradient\", { id: `${chartId}-gradient-${index}`, gradientUnits: \"userSpaceOnUse\", x1: linkSource.x1, x2: linkTarget.x0 },\r\n                  React__default.createElement(\"stop\", { offset: \"0%\", stopColor: linkSource.color }),\r\n                  React__default.createElement(\"stop\", { offset: \"100%\", stopColor: linkTarget.color }))),\r\n              this.renderLink(),\r\n              !tooltip.props.disabled && (React__default.createElement(CloneElement, { content: this.renderTooltipContent.bind(this), element: tooltip, visible: this.state.hovered, reference: this.link }))));\r\n      }\r\n  }\r\n  SankeyLink.defaultProps = {\r\n      active: false,\r\n      animated: true,\r\n      color: DEFAULT_COLOR,\r\n      disabled: false,\r\n      gradient: true,\r\n      opacity: (active, disabled) => (active ? 0.5 : disabled ? 0.1 : 0.35),\r\n      tooltip: (React__default.createElement(realayers.Tooltip, { followCursor: true, modifiers: {\r\n              offset: {\r\n                  offset: '0, 5px'\r\n              }\r\n          } })),\r\n      width: 0,\r\n      onClick: () => undefined,\r\n      onMouseEnter: () => undefined,\r\n      onMouseLeave: () => undefined\r\n  };\n\n  var css$M = \".SankeyNode-module_node__2SPsh {\\n  transition: opacity 100ms ease-in-out, fill-opacity 100ms ease-in-out; }\\n\\n.SankeyNode-module_tooltip__1VhLz {\\n  text-align: center;\\n  padding: 0 8px;\\n  pointer-events: none; }\\n  .SankeyNode-module_tooltip__1VhLz .SankeyNode-module_tooltipLabel__1mNmp {\\n    font-size: 16px;\\n    margin-bottom: 3px;\\n    color: white;\\n    text-align: center; }\\n  .SankeyNode-module_tooltip__1VhLz .SankeyNode-module_tooltipValue__1Hirb {\\n    font-size: 13px;\\n    color: rgba(255, 255, 255, 0.7);\\n    text-align: center; }\\n\";\n  var css$N = {\"node\":\"SankeyNode-module_node__2SPsh\",\"tooltip\":\"SankeyNode-module_tooltip__1VhLz\",\"tooltipLabel\":\"SankeyNode-module_tooltipLabel__1mNmp\",\"tooltipValue\":\"SankeyNode-module_tooltipValue__1Hirb\"};\n  styleInject(css$M);\n\n  class SankeyNode extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {};\r\n          this.rect = React.createRef();\r\n      }\r\n      getNode() {\r\n          const { id, title, color, sourceLinks, targetLinks, value, index, x0, x1, y0, y1 } = this.props;\r\n          return {\r\n              id,\r\n              title,\r\n              color,\r\n              sourceLinks,\r\n              targetLinks,\r\n              value,\r\n              index,\r\n              x0,\r\n              x1,\r\n              y0,\r\n              y1\r\n          };\r\n      }\r\n      onMouseEnter(event) {\r\n          this.setState({ hovered: true });\r\n          this.props.onMouseEnter(event);\r\n      }\r\n      onMouseLeave(event) {\r\n          this.setState({ hovered: false });\r\n          this.props.onMouseLeave(event);\r\n      }\r\n      renderNode() {\r\n          const { active, className, color, disabled, index, opacity, style, width, x0, x1, y0, y1, onClick } = this.props;\r\n          const nodeWidth = width || (x1 && x0 && x1 - x0 > 0 ? x1 - x0 : 0);\r\n          const nodeHeight = y1 && y0 && y1 - y0 > 0 ? y1 - y0 : 0;\r\n          return (React__default.createElement(framerMotion.motion.g, { ref: this.rect, x: x0, y: y0 },\r\n              React__default.createElement(framerMotion.motion.rect, { key: `sankey-node-${x0}-${x1}-${y0}-${y1}-${index}`, className: classNames(css$N.node, className), fillOpacity: opacity(active, disabled), style: style, width: nodeWidth, height: nodeHeight, fill: color, initial: {\r\n                      opacity: 0\r\n                  }, animate: {\r\n                      opacity: 1\r\n                  }, exit: {\r\n                      opacity: 0\r\n                  }, transition: {\r\n                      duration: 0.1\r\n                  }, onClick: onClick, onMouseEnter: bind(this.onMouseEnter, this), onMouseLeave: bind(this.onMouseLeave, this) })));\r\n      }\r\n      renderTooltipContent() {\r\n          const { title, value } = this.props;\r\n          return (React__default.createElement(\"div\", { className: css$N.tooltip },\r\n              React__default.createElement(\"div\", { className: css$N.tooltipLabel }, title),\r\n              React__default.createElement(\"div\", { className: css$N.tooltipValue }, formatValue(value))));\r\n      }\r\n      render() {\r\n          const { active, chartWidth, label, tooltip, showLabel } = this.props;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              this.renderNode(),\r\n              showLabel && (React__default.createElement(CloneElement, { active: active, element: label, chartWidth: chartWidth, node: this.getNode() })),\r\n              !tooltip.props.disabled && (React__default.createElement(CloneElement, { content: this.renderTooltipContent.bind(this), element: tooltip, visible: this.state.hovered, reference: this.rect }))));\r\n      }\r\n  }\r\n  SankeyNode.defaultProps = {\r\n      active: false,\r\n      animated: true,\r\n      color: DEFAULT_COLOR,\r\n      disabled: false,\r\n      label: React__default.createElement(SankeyLabel, null),\r\n      opacity: (active, disabled) => (active ? 1 : disabled ? 0.2 : 0.9),\r\n      showLabel: true,\r\n      tooltip: (React__default.createElement(realayers.Tooltip, { followCursor: true, modifiers: {\r\n              offset: {\r\n                  offset: '0, 5px'\r\n              }\r\n          } })),\r\n      onClick: () => undefined,\r\n      onMouseEnter: () => undefined,\r\n      onMouseLeave: () => undefined\r\n  };\n\n  class SparklineChart extends React.Component {\r\n      render() {\r\n          return React__default.createElement(LineChart, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  SparklineChart.defaultProps = {\r\n      gridlines: null,\r\n      series: (React__default.createElement(AreaSeries, { symbols: React__default.createElement(PointSeries, { show: \"hover\" }), interpolation: \"smooth\", markLine: null, area: null, line: React__default.createElement(Line, { strokeWidth: 2 }) })),\r\n      yAxis: (React__default.createElement(LinearYAxis, { scaled: true, type: \"value\", axisLine: null, tickSeries: React__default.createElement(LinearYAxisTickSeries, { line: null, label: null }) })),\r\n      xAxis: (React__default.createElement(LinearXAxis, { type: \"time\", scaled: true, axisLine: null, tickSeries: React__default.createElement(LinearXAxisTickSeries, { line: null, label: null }) }))\r\n  };\n\n  class AreaSparklineChart extends React.Component {\r\n      render() {\r\n          return React__default.createElement(AreaChart, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  AreaSparklineChart.defaultProps = {\r\n      gridlines: null,\r\n      series: (React__default.createElement(AreaSeries, { symbols: React__default.createElement(PointSeries, { show: \"hover\" }), interpolation: \"smooth\", markLine: null, area: React__default.createElement(Area, { mask: React__default.createElement(Stripes, null), gradient: React__default.createElement(Gradient, { stops: [\r\n                      React__default.createElement(GradientStop, { offset: \"10%\", stopOpacity: 0, key: \"start\" }),\r\n                      React__default.createElement(GradientStop, { offset: \"80%\", stopOpacity: 1, key: \"stop\" })\r\n                  ] }) }), line: React__default.createElement(Line, { strokeWidth: 3 }) })),\r\n      yAxis: (React__default.createElement(LinearYAxis, { type: \"value\", scaled: true, axisLine: null, tickSeries: React__default.createElement(LinearYAxisTickSeries, { line: null, label: null }) })),\r\n      xAxis: (React__default.createElement(LinearXAxis, { type: \"time\", scaled: true, axisLine: null, tickSeries: React__default.createElement(LinearXAxisTickSeries, { line: null, label: null }) }))\r\n  };\n\n  class BarSparklineChart extends React.Component {\r\n      render() {\r\n          return React__default.createElement(BarChart, Object.assign({}, this.props));\r\n      }\r\n  }\r\n  BarSparklineChart.defaultProps = {\r\n      gridlines: null,\r\n      series: React__default.createElement(BarSeries, { colorScheme: schemes.cybertron[0] }),\r\n      yAxis: (React__default.createElement(LinearYAxis, { type: \"value\", axisLine: null, tickSeries: React__default.createElement(LinearYAxisTickSeries, { line: null, label: null }) })),\r\n      xAxis: (React__default.createElement(LinearXAxis, { type: \"category\", axisLine: null, tickSeries: React__default.createElement(LinearXAxisTickSeries, { line: null, label: null }) }))\r\n  };\n\n  const SonarChart = props => (React__default.createElement(StackedBarChart, Object.assign({}, props, { margins: 0, gridlines: null, series: React__default.createElement(StackedBarSeries, { type: \"stackedDiverging\", colorScheme: \"rgb(17, 207, 247)\", tooltip: React__default.createElement(TooltipArea, { tooltip: React__default.createElement(ChartTooltip, { followCursor: true, modifiers: {\r\n                      offset: '5px, 5px'\r\n                  }, content: (data, color) => (React__default.createElement(TooltipTemplate, { color: color, value: {\r\n                          x: formatValue(data.x),\r\n                          y: `${formatValue(Math.abs(data.data[0].y))}`\r\n                      } })) }) }), bar: [\r\n              React__default.createElement(Bar, { rounded: false, width: 1, rangeLines: null, minHeight: 1, gradient: React__default.createElement(Gradient, { stops: [\r\n                          React__default.createElement(GradientStop, { offset: \"5%\", stopOpacity: 0.7, key: \"start\" }),\r\n                          React__default.createElement(GradientStop, { offset: \"90%\", stopOpacity: 1, key: \"stop\" })\r\n                      ] }) }),\r\n              React__default.createElement(Bar, { rounded: false, width: 1, rangeLines: null, minHeight: 1, gradient: React__default.createElement(Gradient, { stops: [\r\n                          React__default.createElement(GradientStop, { offset: \"5%\", stopOpacity: 1, key: \"stop\" }),\r\n                          React__default.createElement(GradientStop, { offset: \"90%\", stopOpacity: 0.7, key: \"start\" })\r\n                      ] }) })\r\n          ] }), yAxis: React__default.createElement(LinearYAxis, { type: \"value\", axisLine: null, tickSeries: React__default.createElement(LinearYAxisTickSeries, { line: null, label: null }) }), xAxis: React__default.createElement(LinearXAxis, { type: \"category\", axisLine: null, tickSeries: React__default.createElement(LinearXAxisTickSeries, { line: null, label: null }) }) })));\n\n  const RadialArea = ({ id, data, className, yScale, color, animated, outerRadius, xScale, innerRadius, interpolation, gradient = React__default.createElement(RadialGradient, null) }) => {\r\n      const transition = React.useMemo(() => animated ? Object.assign({}, DEFAULT_TRANSITION) :\r\n          {\r\n              type: false,\r\n              delay: 0\r\n          }, [animated]);\r\n      const getFill = React.useCallback((c) => {\r\n          if (!gradient) {\r\n              return c;\r\n          }\r\n          return `url(#${id}-gradient)`;\r\n      }, [id, gradient]);\r\n      const getPath = React.useCallback((d) => {\r\n          const curve = interpolation === 'smooth' ? d3Shape.curveCardinalClosed : d3Shape.curveLinearClosed;\r\n          const radialFn = d3Shape.radialArea()\r\n              .angle((dd) => xScale(dd.x))\r\n              .innerRadius(_ => innerRadius)\r\n              .outerRadius((d) => yScale(d.y))\r\n              .curve(curve);\r\n          return radialFn(d);\r\n      }, [xScale, yScale, interpolation, innerRadius]);\r\n      const enter = React.useMemo(() => ({\r\n          d: getPath(data),\r\n          opacity: 1\r\n      }), [data, getPath]);\r\n      const exit = React.useMemo(() => {\r\n          const [yStart] = yScale.domain();\r\n          return {\r\n              d: getPath(data.map(d => (Object.assign(Object.assign({}, d), { y: yStart })))),\r\n              opacity: 0\r\n          };\r\n      }, [data, getPath, yScale]);\r\n      const fill = color(data, 0);\r\n      return (React__default.createElement(React.Fragment, null,\r\n          React__default.createElement(MotionPath, { custom: {\r\n                  enter,\r\n                  exit\r\n              }, transition: transition, pointerEvents: \"none\", className: className, fill: getFill(color) }),\r\n          gradient && (React__default.createElement(CloneElement, { element: gradient, id: `${id}-gradient`, radius: outerRadius, color: fill }))));\r\n  };\n\n  const RadialLine = ({ xScale, yScale, className, color, data, interpolation, strokeWidth = 2, animated = true }) => {\r\n      const getPath = React.useCallback((preData) => {\r\n          const curve = interpolation === 'smooth' ? d3Shape.curveCardinalClosed : d3Shape.curveLinearClosed;\r\n          const radialFn = d3Shape.radialLine()\r\n              .angle((d) => xScale(d.x))\r\n              .radius((d) => yScale(d.y))\r\n              .curve(curve);\r\n          return radialFn(preData);\r\n      }, [xScale, yScale, interpolation]);\r\n      const transition = React.useMemo(() => animated ? Object.assign({}, DEFAULT_TRANSITION) :\r\n          {\r\n              type: false,\r\n              delay: 0\r\n          }, [animated]);\r\n      const fill = color(data, 0);\r\n      const enter = React.useMemo(() => ({\r\n          d: getPath(data),\r\n          opacity: 1\r\n      }), [data, getPath]);\r\n      const exit = React.useMemo(() => {\r\n          const [yStart] = yScale.domain();\r\n          return {\r\n              d: getPath(data.map(d => (Object.assign(Object.assign({}, d), { y: yStart })))),\r\n              opacity: 0\r\n          };\r\n      }, [data, yScale, getPath]);\r\n      return (React__default.createElement(MotionPath, { custom: {\r\n              enter,\r\n              exit\r\n          }, transition: transition, className: className, pointerEvents: \"none\", stroke: fill, fill: \"none\", strokeWidth: strokeWidth }));\r\n  };\n\n  var css$O = \".RadialScatterPoint-module_inactive__3cq4W {\\n  opacity: 0.4;\\n  transition: opacity 200ms ease-in-out; }\\n\";\n  var css$P = {\"inactive\":\"RadialScatterPoint-module_inactive__3cq4W\"};\n  styleInject(css$O);\n\n  class RadialScatterPoint extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.ref = React.createRef();\r\n          this.state = {\r\n              hovered: false\r\n          };\r\n      }\r\n      onMouseEnter(event) {\r\n          this.setState({ hovered: true });\r\n          const { onMouseEnter, data } = this.props;\r\n          onMouseEnter({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      onMouseLeave(event) {\r\n          this.setState({ hovered: false });\r\n          const { onMouseLeave, data } = this.props;\r\n          onMouseLeave({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      onClick(event) {\r\n          const { onClick, data } = this.props;\r\n          onClick({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      getTranslate(data) {\r\n          const { xScale, yScale } = this.props;\r\n          const fn = d3Shape.radialLine()\r\n              .radius((d) => yScale(d.y))\r\n              .angle((d) => xScale(d.x));\r\n          // Parse the generated path to get point coordinates\r\n          // Ref: https://bit.ly/2CnZcPl\r\n          const path = fn([data]);\r\n          if (path) {\r\n              const [translateX, translateY] = path\r\n                  .slice(1)\r\n                  .slice(0, -1)\r\n                  .split(',');\r\n              return {\r\n                  translateX: parseFloat(translateX),\r\n                  translateY: parseFloat(translateY)\r\n              };\r\n          }\r\n      }\r\n      getTransition() {\r\n          const { animated, index } = this.props;\r\n          if (animated) {\r\n              return Object.assign(Object.assign({}, DEFAULT_TRANSITION), { delay: index * 0.005 });\r\n          }\r\n          else {\r\n              return {\r\n                  type: false,\r\n                  delay: 0\r\n              };\r\n          }\r\n      }\r\n      render() {\r\n          const { size, data, color, index, symbol, active, tooltip, yScale, className } = this.props;\r\n          const { hovered } = this.state;\r\n          const fill = typeof color === 'function' ? color(data, index) : color;\r\n          const transform = this.getTranslate(data);\r\n          const sizeVal = typeof size === 'function' ? size(data) : size;\r\n          const transition = this.getTransition();\r\n          const [yStart] = yScale.domain();\r\n          const exitTransform = this.getTranslate(Object.assign(Object.assign({}, data), { y: yStart }));\r\n          return (React__default.createElement(React.Fragment, null,\r\n              React__default.createElement(framerMotion.motion.g, { initial: Object.assign(Object.assign({}, exitTransform), { opacity: 0 }), animate: Object.assign(Object.assign({}, transform), { opacity: 1 }), exit: Object.assign(Object.assign({}, exitTransform), { opacity: 0 }), transition: transition, ref: this.ref, onMouseEnter: bind(this.onMouseEnter, this), onMouseLeave: bind(this.onMouseLeave, this), onClick: bind(this.onClick, this), className: classNames(className, {\r\n                      [css$P.inactive]: !active\r\n                  }) },\r\n                  symbol && symbol(data),\r\n                  !symbol && React__default.createElement(\"circle\", { r: sizeVal, fill: fill })),\r\n              tooltip && (React__default.createElement(CloneElement, { element: tooltip, visible: hovered, reference: this.ref, value: data }))));\r\n      }\r\n  }\r\n  RadialScatterPoint.defaultProps = {\r\n      size: 3,\r\n      color: schemes.cybertron[0],\r\n      tooltip: React__default.createElement(ChartTooltip, null),\r\n      active: true,\r\n      onClick: () => undefined,\r\n      onMouseEnter: () => undefined,\r\n      onMouseLeave: () => undefined\r\n  };\n\n  class RadialScatterSeries extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {\r\n              activeIds: []\r\n          };\r\n      }\r\n      onMouseEnter({ value }) {\r\n          // Only perform this on unmanaged activations\r\n          if (!this.props.activeIds) {\r\n              this.setState({\r\n                  activeIds: [value.id]\r\n              });\r\n          }\r\n      }\r\n      onMouseLeave() {\r\n          // Only perform this on unmanaged activations\r\n          if (!this.props.activeIds) {\r\n              this.setState({\r\n                  activeIds: []\r\n              });\r\n          }\r\n      }\r\n      renderPoint(data, index) {\r\n          const { point, xScale, yScale, animated } = this.props;\r\n          let dataId;\r\n          if (data.id) {\r\n              dataId = data.id;\r\n          }\r\n          else {\r\n              console.warn(`No 'id' property provided for scatter point; provide one via 'id'.`);\r\n          }\r\n          const key = dataId || index;\r\n          const activeIds = this.props.activeIds || this.state.activeIds;\r\n          const active = !(activeIds && activeIds.length) || activeIds.includes(dataId);\r\n          const visible = point.props.visible;\r\n          if (visible && !visible(data, index)) {\r\n              return React__default.createElement(React.Fragment, { key: key });\r\n          }\r\n          return (React__default.createElement(CloneElement, { element: point, key: key, data: data, index: index, active: active, xScale: xScale, yScale: yScale, animated: animated, onMouseEnter: bind(this.onMouseEnter, this), onMouseLeave: bind(this.onMouseLeave, this) }));\r\n      }\r\n      render() {\r\n          const { data } = this.props;\r\n          return React__default.createElement(React.Fragment, null, data.map((d, i) => this.renderPoint(d, i)));\r\n      }\r\n  }\r\n  RadialScatterSeries.defaultProps = {\r\n      point: React__default.createElement(RadialScatterPoint, null),\r\n      animated: true\r\n  };\n\n  class RadialScatterPlot extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.getScales = memoize((preData, outerRadius, innerRadius) => {\r\n              const data = buildShallowChartData(preData);\r\n              const yDomain = getYDomain({ data, scaled: false });\r\n              const xDomain = getXDomain({ data });\r\n              const xScale = d3Scale.scaleTime()\r\n                  .range([0, 2 * Math.PI])\r\n                  .domain(xDomain);\r\n              const yScale = getRadialYScale(innerRadius, outerRadius, yDomain);\r\n              return {\r\n                  yScale,\r\n                  xScale,\r\n                  data\r\n              };\r\n          });\r\n      }\r\n      renderChart(containerProps) {\r\n          const { chartWidth, chartHeight, id } = containerProps;\r\n          const { innerRadius, series, axis } = this.props;\r\n          const outerRadius = Math.min(chartWidth, chartHeight) / 2;\r\n          const { yScale, xScale, data } = this.getScales(this.props.data, outerRadius, innerRadius);\r\n          return (React__default.createElement(React.Fragment, null,\r\n              axis && (React__default.createElement(CloneElement, { element: axis, xScale: xScale, height: chartHeight, width: chartWidth, innerRadius: innerRadius })),\r\n              React__default.createElement(CloneElement, { element: series, id: id, data: data, xScale: xScale, yScale: yScale })));\r\n      }\r\n      render() {\r\n          const { id, width, height, margins, className } = this.props;\r\n          return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, xAxisVisible: false, yAxisVisible: false, center: true, className: className }, this.renderChart.bind(this)));\r\n      }\r\n  }\r\n  RadialScatterPlot.defaultProps = {\r\n      innerRadius: 80,\r\n      margins: 75,\r\n      axis: React__default.createElement(RadialAxis, null),\r\n      series: React__default.createElement(RadialScatterSeries, null)\r\n  };\n\n  const RadialPointSeries = ({ data, xScale, yScale, animated, color, activeValues, show = 'hover', point = React__default.createElement(RadialScatterPoint, null) }) => {\r\n      const isVisible = React.useCallback((point, index) => {\r\n          const isActive = activeValues && point && isEqual(activeValues.x, point.x);\r\n          if (show === 'hover') {\r\n              return isActive;\r\n          }\r\n          else if (show === 'first') {\r\n              if (activeValues) {\r\n                  return isActive;\r\n              }\r\n              else {\r\n                  return index === 0;\r\n              }\r\n          }\r\n          else if (show === 'last') {\r\n              if (activeValues) {\r\n                  return isActive;\r\n              }\r\n              else {\r\n                  return index === data.length - 1;\r\n              }\r\n          }\r\n          return show;\r\n      }, [data, activeValues, point, show]);\r\n      return (React__default.createElement(RadialScatterSeries, { animated: animated, data: data, xScale: xScale, yScale: yScale, point: React__default.createElement(CloneElement, { element: point, color: color, tooltip: null, visible: isVisible }) }));\r\n  };\n\n  class RadialAreaSeries extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {};\r\n      }\r\n      getColor(point, index) {\r\n          const { colorScheme, data } = this.props;\r\n          return getColor({\r\n              colorScheme,\r\n              data,\r\n              index,\r\n              point\r\n          });\r\n      }\r\n      onValueEnter(event) {\r\n          this.setState({\r\n              activeValues: event.value\r\n          });\r\n      }\r\n      onValueLeave() {\r\n          this.setState({\r\n              activeValues: undefined\r\n          });\r\n      }\r\n      renderArea() {\r\n          const { area, id, xScale, yScale, data, interpolation, animated, innerRadius, outerRadius } = this.props;\r\n          return (React__default.createElement(CloneElement, { element: area, id: `${id}-radial-area`, xScale: xScale, yScale: yScale, animated: animated, color: this.getColor.bind(this), data: data, interpolation: interpolation, outerRadius: outerRadius, innerRadius: innerRadius }));\r\n      }\r\n      renderLine() {\r\n          const { line, xScale, yScale, data, animated, interpolation } = this.props;\r\n          return (React__default.createElement(CloneElement, { element: line, xScale: xScale, yScale: yScale, animated: animated, interpolation: interpolation, color: this.getColor.bind(this), data: data }));\r\n      }\r\n      renderSymbols() {\r\n          const { xScale, yScale, animated, area, symbols, data } = this.props;\r\n          const { activeValues } = this.state;\r\n          // Animations are only valid for Area\r\n          const activeSymbols = (symbols && symbols.props.activeValues) || activeValues;\r\n          const isAnimated = area !== undefined && animated && !activeSymbols;\r\n          return (React__default.createElement(CloneElement, { element: symbols, activeValues: activeValues, xScale: xScale, yScale: yScale, data: data, animated: isAnimated, color: this.getColor.bind(this) }));\r\n      }\r\n      render() {\r\n          const { area, line, symbols, tooltip, xScale, yScale, data, id, width, height, innerRadius, outerRadius } = this.props;\r\n          return (React__default.createElement(CloneElement, { element: tooltip, xScale: xScale, yScale: yScale, data: data, height: height, width: width, isRadial: true, innerRadius: innerRadius, outerRadius: outerRadius, color: this.getColor.bind(this), onValueEnter: bind(this.onValueEnter, this), onValueLeave: bind(this.onValueLeave, this) },\r\n              React__default.createElement(\"g\", { clipPath: `url(#${id}-path)` },\r\n                  area && this.renderArea(),\r\n                  line && this.renderLine(),\r\n                  symbols && this.renderSymbols())));\r\n      }\r\n  }\r\n  RadialAreaSeries.defaultProps = {\r\n      colorScheme: schemes.cybertron[0],\r\n      interpolation: 'smooth',\r\n      animated: true,\r\n      area: React__default.createElement(RadialArea, null),\r\n      line: React__default.createElement(RadialLine, null),\r\n      symbols: React__default.createElement(RadialPointSeries, null),\r\n      tooltip: React__default.createElement(TooltipArea, null)\r\n  };\n\n  const RadialAreaChart = ({ id, width, height, className, data, innerRadius = 0.1, series = React__default.createElement(RadialAreaSeries, null), axis = React__default.createElement(RadialAxis, null), margins = 75 }) => {\r\n      const getScales = React.useCallback(((preData, outerRadius, innerRadius) => {\r\n          const d = buildShallowChartData(preData);\r\n          const yDomain = getYDomain({ data: d, scaled: false });\r\n          let xScale;\r\n          if ((axis === null || axis === void 0 ? void 0 : axis.props.type) === 'category') {\r\n              const xDomain = uniqueBy(d, dd => dd.x);\r\n              xScale = d3Scale.scaleBand()\r\n                  .range([0, 2 * Math.PI])\r\n                  .domain(xDomain);\r\n          }\r\n          else {\r\n              const xDomain = getXDomain({ data: d });\r\n              xScale = d3Scale.scaleTime()\r\n                  .range([0, 2 * Math.PI])\r\n                  .domain(xDomain);\r\n          }\r\n          const yScale = getRadialYScale(innerRadius, outerRadius, yDomain);\r\n          return {\r\n              yScale,\r\n              xScale,\r\n              result: d\r\n          };\r\n      }), []);\r\n      const renderChart = React.useCallback((containerProps) => {\r\n          const { chartWidth, chartHeight, id } = containerProps;\r\n          const outerRadius = Math.min(chartWidth, chartHeight) / 2;\r\n          const { yScale, xScale, result } = getScales(data, outerRadius, innerRadius);\r\n          return (React__default.createElement(React.Fragment, null,\r\n              axis && (React__default.createElement(CloneElement, { element: axis, xScale: xScale, height: chartHeight, width: chartWidth, innerRadius: innerRadius })),\r\n              React__default.createElement(CloneElement, { element: series, id: id, data: result, xScale: xScale, yScale: yScale, height: chartHeight, width: chartWidth, outerRadius: outerRadius, innerRadius: innerRadius })));\r\n      }, [data, series, id, innerRadius, axis]);\r\n      return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, xAxisVisible: false, yAxisVisible: false, center: true, className: className }, renderChart));\r\n  };\n\n  var pi = Math.PI,\n      tau = 2 * pi,\n      epsilon = 1e-6,\n      tauEpsilon = tau - epsilon;\n\n  function Path() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n\n  function path() {\n    return new Path;\n  }\n\n  Path.prototype = path.prototype = {\n    constructor: Path,\n    moveTo: function(x, y) {\n      this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n    },\n    closePath: function() {\n      if (this._x1 !== null) {\n        this._x1 = this._x0, this._y1 = this._y0;\n        this._ += \"Z\";\n      }\n    },\n    lineTo: function(x, y) {\n      this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    quadraticCurveTo: function(x1, y1, x, y) {\n      this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n      this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    arcTo: function(x1, y1, x2, y2, r) {\n      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n      var x0 = this._x1,\n          y0 = this._y1,\n          x21 = x2 - x1,\n          y21 = y2 - y1,\n          x01 = x0 - x1,\n          y01 = y0 - y1,\n          l01_2 = x01 * x01 + y01 * y01;\n\n      // Is the radius negative? Error.\n      if (r < 0) throw new Error(\"negative radius: \" + r);\n\n      // Is this path empty? Move to (x1,y1).\n      if (this._x1 === null) {\n        this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n      }\n\n      // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n      else if (!(l01_2 > epsilon));\n\n      // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n      // Equivalently, is (x1,y1) coincident with (x2,y2)?\n      // Or, is the radius zero? Line to (x1,y1).\n      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n        this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n      }\n\n      // Otherwise, draw an arc!\n      else {\n        var x20 = x2 - x0,\n            y20 = y2 - y0,\n            l21_2 = x21 * x21 + y21 * y21,\n            l20_2 = x20 * x20 + y20 * y20,\n            l21 = Math.sqrt(l21_2),\n            l01 = Math.sqrt(l01_2),\n            l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n            t01 = l / l01,\n            t21 = l / l21;\n\n        // If the start tangent is not coincident with (x0,y0), line to.\n        if (Math.abs(t01 - 1) > epsilon) {\n          this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n        }\n\n        this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n      }\n    },\n    arc: function(x, y, r, a0, a1, ccw) {\n      x = +x, y = +y, r = +r, ccw = !!ccw;\n      var dx = r * Math.cos(a0),\n          dy = r * Math.sin(a0),\n          x0 = x + dx,\n          y0 = y + dy,\n          cw = 1 ^ ccw,\n          da = ccw ? a0 - a1 : a1 - a0;\n\n      // Is the radius negative? Error.\n      if (r < 0) throw new Error(\"negative radius: \" + r);\n\n      // Is this path empty? Move to (x0,y0).\n      if (this._x1 === null) {\n        this._ += \"M\" + x0 + \",\" + y0;\n      }\n\n      // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n      else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n        this._ += \"L\" + x0 + \",\" + y0;\n      }\n\n      // Is this arc empty? We’re done.\n      if (!r) return;\n\n      // Does the angle go the wrong way? Flip the direction.\n      if (da < 0) da = da % tau + tau;\n\n      // Is this a complete circle? Draw two arcs to complete the circle.\n      if (da > tauEpsilon) {\n        this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n      }\n\n      // Is this arc non-empty? Draw an arc!\n      else if (da > epsilon) {\n        this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n      }\n    },\n    rect: function(x, y, w, h) {\n      this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  const MotionBar = (_a) => {\r\n      var { custom, transition, arc } = _a, rest = __rest(_a, [\"custom\", \"transition\", \"arc\"]);\r\n      const d = framerMotion.useMotionValue('');\r\n      const prevPath = framerMotion.useMotionValue(custom.exit);\r\n      const spring = framerMotion.useSpring(prevPath, Object.assign(Object.assign({}, DEFAULT_TRANSITION), { from: 0, to: 1 }));\r\n      React.useEffect(() => {\r\n          const from = custom.previousEnter\r\n              ? custom.previousEnter.y\r\n              : prevPath.get().y;\r\n          const interpolator = d3Interpolate.interpolate(from, custom.enter.y);\r\n          const unsub = spring.onChange(v => d.set(arc(Object.assign(Object.assign({}, custom.enter), { y: interpolator(v) }))));\r\n          prevPath.set(custom.enter);\r\n          return unsub;\r\n      });\r\n      const _b = custom.enter, { d: enterD } = _b, enterRest = __rest(_b, [\"d\"]);\r\n      const _c = custom.exit, exitRest = __rest(_c, [\"d\"]);\r\n      return (React__default.createElement(framerMotion.motion.path, Object.assign({}, rest, { initial: exitRest, exit: exitRest, animate: enterRest, transition: transition, d: transition.type !== false ? d : enterD })));\r\n  };\n\n  const RadialGuideBar = ({ active, path, fill = '#eee', opacity = 0.2 }) => (React__default.createElement(framerMotion.motion.path, { d: path, fill: fill, pointerEvents: \"none\", initial: \"hidden\", animate: active ? 'visible' : 'hidden', variants: {\r\n          hidden: { opacity: 0 },\r\n          visible: { opacity }\r\n      } }));\n\n  class RadialBar extends React.Component {\r\n      getFill(color) {\r\n          const { id, gradient } = this.props;\r\n          if (!gradient) {\r\n              return color;\r\n          }\r\n          return `url(#${id}-gradient)`;\r\n      }\r\n      onMouseEnter(event) {\r\n          const { onMouseEnter, data } = this.props;\r\n          onMouseEnter({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      onMouseLeave(event) {\r\n          const { onMouseLeave, data } = this.props;\r\n          onMouseLeave({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      onMouseClick(event) {\r\n          const { onClick, data } = this.props;\r\n          onClick({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      getArc(data) {\r\n          const { innerRadius, xScale, yScale, curved } = this.props;\r\n          const outerRadius = yScale(data.y);\r\n          if (curved) {\r\n              const startAngle = xScale(data.x);\r\n              const endAngle = startAngle + xScale.bandwidth();\r\n              const arcFn = d3Shape.arc()\r\n                  .innerRadius(innerRadius)\r\n                  .outerRadius(outerRadius)\r\n                  .startAngle(startAngle)\r\n                  .endAngle(endAngle)\r\n                  .padAngle(0.01)\r\n                  .padRadius(innerRadius);\r\n              return arcFn(data);\r\n          }\r\n          else {\r\n              const startAngle = xScale(data.x) - Math.PI * 0.5;\r\n              const endAngle = startAngle + xScale.bandwidth();\r\n              const innerAngleDistance = endAngle - startAngle;\r\n              const arcLength = innerRadius * innerAngleDistance;\r\n              const outerAngleDistance = arcLength / outerRadius;\r\n              const halfAngleDistanceDelta = (innerAngleDistance - outerAngleDistance) / 2;\r\n              const pathFn = path();\r\n              pathFn.arc(0, 0, innerRadius, startAngle, endAngle);\r\n              pathFn.arc(0, 0, outerRadius, endAngle - halfAngleDistanceDelta, startAngle + halfAngleDistanceDelta, true);\r\n              return pathFn.toString();\r\n          }\r\n      }\r\n      getTransition() {\r\n          const { animated, barCount, index } = this.props;\r\n          if (animated) {\r\n              return Object.assign(Object.assign({}, DEFAULT_TRANSITION), { delay: (index / barCount) * 0.5 });\r\n          }\r\n          else {\r\n              return {\r\n                  type: false,\r\n                  delay: 0\r\n              };\r\n          }\r\n      }\r\n      renderBar(color) {\r\n          const { className, data, yScale, active, guide } = this.props;\r\n          const fill = this.getFill(color);\r\n          const transition = this.getTransition();\r\n          // Track previous props\r\n          const previousEnter = this.previousEnter\r\n              ? Object.assign({}, this.previousEnter) : undefined;\r\n          this.previousEnter = Object.assign({}, data);\r\n          const [yStart, yEnd] = yScale.domain();\r\n          const exit = Object.assign(Object.assign({}, data), { y: yStart });\r\n          const guidePath = this.getArc(Object.assign(Object.assign({}, data), { y: yEnd }));\r\n          return (React__default.createElement(React.Fragment, null,\r\n              guide && (React__default.createElement(CloneElement, { element: guide, active: active, path: guidePath })),\r\n              React__default.createElement(MotionBar, { arc: this.getArc.bind(this), custom: {\r\n                      enter: data,\r\n                      exit,\r\n                      previousEnter\r\n                  }, transition: transition, fill: fill, className: className, onMouseEnter: bind(this.onMouseEnter, this), onMouseLeave: bind(this.onMouseLeave, this), onClick: bind(this.onMouseClick, this) })));\r\n      }\r\n      render() {\r\n          const { data, index, color, gradient, id, active } = this.props;\r\n          const fill = color(data, index);\r\n          const currentColorShade = active ? chroma(fill).brighten(0.5) : fill;\r\n          return (React__default.createElement(React.Fragment, null,\r\n              this.renderBar(currentColorShade),\r\n              gradient && (React__default.createElement(Gradient, { id: `${id}-gradient`, color: currentColorShade }))));\r\n      }\r\n  }\r\n  RadialBar.defaultProps = {\r\n      gradient: true,\r\n      curved: false,\r\n      guide: React__default.createElement(RadialGuideBar, null),\r\n      onClick: () => undefined,\r\n      onMouseEnter: () => undefined,\r\n      onMouseLeave: () => undefined\r\n  };\n\n  class RadialBarSeries extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {};\r\n      }\r\n      onValueEnter(event) {\r\n          this.setState({\r\n              activeValues: event.value\r\n          });\r\n      }\r\n      onValueLeave() {\r\n          this.setState({\r\n              activeValues: undefined\r\n          });\r\n      }\r\n      renderBar(point, index) {\r\n          const { innerRadius, xScale, yScale, bar, id, data, animated, colorScheme } = this.props;\r\n          const { activeValues } = this.state;\r\n          const active = activeValues && data && isEqual(activeValues.x, point.x);\r\n          return (React__default.createElement(React.Fragment, { key: index },\r\n              React__default.createElement(CloneElement, { element: bar, id: `radialbar-${id}-${index}`, index: index, data: point, xScale: xScale, active: active, yScale: yScale, innerRadius: innerRadius, color: point => getColor({ data, point, index: 0, colorScheme }), barCount: data.length, animated: animated })));\r\n      }\r\n      render() {\r\n          const { data, id, innerRadius, outerRadius, xScale, yScale, height, width, tooltip, colorScheme } = this.props;\r\n          return (React__default.createElement(CloneElement, { element: tooltip, xScale: xScale, yScale: yScale, data: data, height: height, width: width, isRadial: true, innerRadius: innerRadius, outerRadius: outerRadius, onValueEnter: this.onValueEnter.bind(this), onValueLeave: this.onValueLeave.bind(this), color: (point, index) => getColor({ data, point, index, colorScheme }) },\r\n              React__default.createElement(\"g\", { clipPath: `url(#${id}-path)` }, data.map(this.renderBar.bind(this)))));\r\n      }\r\n  }\r\n  RadialBarSeries.defaultProps = {\r\n      colorScheme: schemes.cybertron[0],\r\n      tooltip: React__default.createElement(TooltipArea, { tooltip: React__default.createElement(ChartTooltip, { followCursor: true }) }),\r\n      bar: React__default.createElement(RadialBar, null),\r\n      animated: true\r\n  };\n\n  class RadialBarChart extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.getScales = memoize((preData, innerRadius, outerRadius) => {\r\n              const data = buildShallowChartData(preData);\r\n              const xDomain = uniqueBy(data, d => d.x);\r\n              const yDomain = getYDomain({ data, scaled: false });\r\n              const xScale = d3Scale.scaleBand()\r\n                  .range([0, 2 * Math.PI])\r\n                  .domain(xDomain);\r\n              const yScale = getRadialYScale(innerRadius, outerRadius, yDomain);\r\n              return {\r\n                  xScale,\r\n                  yScale,\r\n                  data\r\n              };\r\n          });\r\n      }\r\n      renderChart(containerProps) {\r\n          const { chartWidth, chartHeight, id } = containerProps;\r\n          const { innerRadius, series, axis } = this.props;\r\n          const outerRadius = Math.min(chartWidth, chartHeight) / 2;\r\n          const { yScale, xScale, data } = this.getScales(this.props.data, innerRadius, outerRadius);\r\n          return (React__default.createElement(React.Fragment, null,\r\n              axis && (React__default.createElement(CloneElement, { element: axis, xScale: xScale, height: chartHeight, width: chartWidth, innerRadius: innerRadius })),\r\n              React__default.createElement(CloneElement, { element: series, id: id, data: data, height: chartHeight, width: chartWidth, xScale: xScale, yScale: yScale, innerRadius: innerRadius, outerRadius: outerRadius })));\r\n      }\r\n      render() {\r\n          const { id, width, height, margins, className } = this.props;\r\n          return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, xAxisVisible: false, yAxisVisible: false, center: true, className: className }, props => this.renderChart(props)));\r\n      }\r\n  }\r\n  RadialBarChart.defaultProps = {\r\n      innerRadius: 0.1,\r\n      margins: 75,\r\n      axis: React__default.createElement(RadialAxis, null),\r\n      series: React__default.createElement(RadialBarSeries, null)\r\n  };\n\n  class RadialGaugeArc extends React.Component {\r\n      getPaths() {\r\n          const { outerRadius, startAngle, endAngle, width, data } = this.props;\r\n          // Calculate the inner rad based on the width\r\n          // and the outer rad which is height/width / 2\r\n          const innerRadius = outerRadius - width;\r\n          // Center arcs so inner/outer align nicely\r\n          const delta = (outerRadius - innerRadius) / 2;\r\n          const newInnerRad = innerRadius + delta;\r\n          const newOuterRad = outerRadius + delta;\r\n          // Create the arc fn to pass to the pie arc\r\n          const innerArc = d3Shape.arc()\r\n              .innerRadius(newInnerRad)\r\n              .outerRadius(newOuterRad);\r\n          return {\r\n              data: {\r\n                  startAngle,\r\n                  endAngle,\r\n                  // Data must be passed\r\n                  data: data || {}\r\n              },\r\n              innerArc\r\n          };\r\n      }\r\n      render() {\r\n          const { color, animated, disabled, tooltip, onClick, onMouseEnter, onMouseLeave } = this.props;\r\n          const data = this.getPaths();\r\n          return (React__default.createElement(PieArc, Object.assign({}, data, { animated: animated, color: color, disabled: disabled, tooltip: tooltip, onClick: onClick, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave })));\r\n      }\r\n  }\r\n  RadialGaugeArc.defaultProps = {\r\n      width: 5,\r\n      color: '#353d44',\r\n      animated: true,\r\n      disabled: false,\r\n      onClick: () => undefined,\r\n      onMouseEnter: () => undefined,\r\n      onMouseLeave: () => undefined,\r\n      tooltip: React__default.createElement(ChartTooltip, null)\r\n  };\n\n  var css$Q = \".RadialGaugeLabel-module_valueLabel__1s1YY {\\n  font-size: 14px;\\n  font-weight: 400;\\n  fill: var(--color-on-surface);\\n  opacity: .6; }\\n\";\n  var css$R = {\"valueLabel\":\"RadialGaugeLabel-module_valueLabel__1s1YY\"};\n  styleInject(css$Q);\n\n  class RadialGaugeLabel extends React.PureComponent {\r\n      render() {\r\n          const { data, className, offset, onClick } = this.props;\r\n          const label = formatValue(data.key);\r\n          return (React__default.createElement(\"text\", { dy: \"1.23em\", x: \"0\", y: offset, textAnchor: \"middle\", onClick: nativeEvent => onClick({ data, nativeEvent }), className: classNames(className, css$R.valueLabel) }, label));\r\n      }\r\n  }\r\n  RadialGaugeLabel.defaultProps = {\r\n      onClick: () => undefined\r\n  };\n\n  var css$S = \".RadialGaugeValueLabel-module_valueLabel__1tkTL {\\n  font-size: 18px;\\n  font-weight: 400;\\n  fill: var(--color-on-surface); }\\n\";\n  var css$T = {\"valueLabel\":\"RadialGaugeValueLabel-module_valueLabel__1tkTL\"};\n  styleInject(css$S);\n\n  class RadialGaugeValueLabel extends React.PureComponent {\r\n      render() {\r\n          const { data, className } = this.props;\r\n          // TODO: Get seperator based on locale\r\n          return (React__default.createElement(CountUp, { start: 0, end: data.data, delay: 0, duration: 1, separator: \",\" }, ({ countUpRef }) => (React__default.createElement(\"text\", { dy: \"-0.5em\", x: \"0\", y: \"15\", textAnchor: \"middle\", className: classNames(className, css$T.valueLabel), ref: countUpRef }))));\r\n      }\r\n  }\r\n  RadialGaugeValueLabel.defaultProps = {};\n\n  class RadialGaugeSeries extends React.Component {\r\n      getWidths() {\r\n          const { data, width, height, minGaugeWidth } = this.props;\r\n          let rows = 1;\r\n          let columns = data.length;\r\n          if (width / data.length < minGaugeWidth) {\r\n              while (width / columns < minGaugeWidth) {\r\n                  rows += 1;\r\n                  columns = Math.ceil(data.length / rows);\r\n              }\r\n          }\r\n          const xScale = d3Scale.scaleBand();\r\n          xScale.domain(d3Array.range(columns));\r\n          xScale.rangeRound([0, width], 0.1);\r\n          const yScale = d3Scale.scaleBand();\r\n          yScale.domain(d3Array.range(rows));\r\n          yScale.rangeRound([0, height], 0.1);\r\n          return {\r\n              columns,\r\n              xScale,\r\n              yScale,\r\n              width: xScale.bandwidth(),\r\n              height: yScale.bandwidth()\r\n          };\r\n      }\r\n      renderGauge(point, index, columns, height, width, xScale, yScale) {\r\n          const { scale, innerArc, outerArc, startAngle, data, endAngle, label, valueLabel, padding, colorScheme } = this.props;\r\n          const dataEndAngle = scale(point.data);\r\n          const baselineLabelHeight = 20;\r\n          const outerRadius = d3Array.min([\r\n              width - padding,\r\n              height - baselineLabelHeight - padding\r\n          ]) /\r\n              2 -\r\n              10;\r\n          const labelOffset = height / 2 - baselineLabelHeight;\r\n          const x = xScale(index % columns);\r\n          const y = yScale(Math.floor(index / columns));\r\n          const xOffset = x + (width - padding) / 2;\r\n          const yOffset = y + (height - baselineLabelHeight) / 2;\r\n          return (React__default.createElement(\"g\", { transform: `translate(${xOffset}, ${yOffset})`, key: point.key.toLocaleString() },\r\n              outerArc && (React__default.createElement(CloneElement, { element: outerArc, outerRadius: outerRadius, startAngle: startAngle, endAngle: endAngle })),\r\n              React__default.createElement(CloneElement, { element: innerArc, outerRadius: outerRadius, startAngle: startAngle, endAngle: dataEndAngle, data: point, color: getColor({\r\n                      data,\r\n                      colorScheme,\r\n                      point,\r\n                      index\r\n                  }) }),\r\n              valueLabel && (React__default.createElement(CloneElement, { element: valueLabel, data: point })),\r\n              label && (React__default.createElement(CloneElement, { element: label, data: point, offset: labelOffset }))));\r\n      }\r\n      render() {\r\n          const { data } = this.props;\r\n          const { columns, width, height, xScale, yScale } = this.getWidths();\r\n          return (React__default.createElement(React.Fragment, null, data.map((d, i) => this.renderGauge(d, i, columns, height, width, xScale, yScale))));\r\n      }\r\n  }\r\n  RadialGaugeSeries.defaultProps = {\r\n      outerArc: React__default.createElement(RadialGaugeArc, { disabled: true }),\r\n      innerArc: React__default.createElement(RadialGaugeArc, { width: 10, animated: true }),\r\n      label: React__default.createElement(RadialGaugeLabel, null),\r\n      valueLabel: React__default.createElement(RadialGaugeValueLabel, null),\r\n      colorScheme: ['#00ECB1'],\r\n      padding: 10,\r\n      minGaugeWidth: 50\r\n  };\n\n  class RadialGauge extends React.Component {\r\n      renderChart(containerProps) {\r\n          const { chartWidth, chartHeight } = containerProps;\r\n          const { startAngle, endAngle, minValue, maxValue, data, series } = this.props;\r\n          const scale = d3Scale.scaleLinear()\r\n              .domain([minValue, maxValue])\r\n              .range([startAngle, endAngle]);\r\n          return (React__default.createElement(CloneElement, { element: series, scale: scale, data: data, startAngle: startAngle, endAngle: endAngle, width: chartWidth, height: chartHeight }));\r\n      }\r\n      render() {\r\n          const { id, width, height, margins, className } = this.props;\r\n          return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, xAxisVisible: false, yAxisVisible: false, className: className }, this.renderChart.bind(this)));\r\n      }\r\n  }\r\n  RadialGauge.defaultProps = {\r\n      minValue: 0,\r\n      maxValue: 100,\r\n      startAngle: 0,\r\n      endAngle: Math.PI * 2,\r\n      series: React__default.createElement(RadialGaugeSeries, null)\r\n  };\n\n  var css$U = \".HeatmapCell-module_cell__1SlIg {\\n  transition: stroke 150ms ease-in-out; }\\n\";\n  var css$V = {\"cell\":\"HeatmapCell-module_cell__1SlIg\"};\n  styleInject(css$U);\n\n  // Set padding modifier for the tooltips\r\n  const modifiers$1 = {\r\n      offset: {\r\n          offset: '0, 3px'\r\n      }\r\n  };\r\n  class HeatmapCell extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.state = {};\r\n          this.rect = React.createRef();\r\n      }\r\n      onMouseEnter(event) {\r\n          this.setState({ active: true });\r\n          const { onMouseEnter, data } = this.props;\r\n          onMouseEnter({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      onMouseLeave(event) {\r\n          this.setState({ active: false });\r\n          const { onMouseLeave, data } = this.props;\r\n          onMouseLeave({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      onMouseClick(event) {\r\n          const { onClick, data } = this.props;\r\n          onClick({\r\n              value: data,\r\n              nativeEvent: event\r\n          });\r\n      }\r\n      getTooltipData() {\r\n          const { data } = this.props;\r\n          return {\r\n              y: data.value,\r\n              x: `${data.key} ∙ ${data.x}`,\r\n              data\r\n          };\r\n      }\r\n      getTransition() {\r\n          const { animated, cellIndex, cellCount } = this.props;\r\n          if (animated) {\r\n              return Object.assign(Object.assign({}, DEFAULT_TRANSITION), { delay: (cellIndex / cellCount) * 0.005 });\r\n          }\r\n          else {\r\n              return {\r\n                  type: false,\r\n                  delay: 0\r\n              };\r\n          }\r\n      }\r\n      render() {\r\n          const _a = this.props, { tooltip, onMouseEnter, onMouseLeave, onClick, cellIndex, data, cursor, fill, x, y } = _a, rest = __rest(_a, [\"tooltip\", \"onMouseEnter\", \"onMouseLeave\", \"onClick\", \"cellIndex\", \"data\", \"cursor\", \"fill\", \"x\", \"y\"]);\r\n          const { active } = this.state;\r\n          const extras = constructFunctionProps(this.props, data);\r\n          const isTransparent = fill === 'transparent';\r\n          const stroke = active && !isTransparent ? chroma(fill).brighten(1) : fill;\r\n          const transition = this.getTransition();\r\n          return (React__default.createElement(React.Fragment, null,\r\n              React__default.createElement(framerMotion.motion.g, { ref: this.rect, x: x, y: y },\r\n                  React__default.createElement(framerMotion.motion.rect, Object.assign({}, rest, { fill: fill, stroke: stroke, style: Object.assign(Object.assign({}, extras.style), { cursor }), className: classNames(css$V.cell, extras.className), initial: {\r\n                          opacity: 0\r\n                      }, animate: {\r\n                          opacity: 1\r\n                      }, exit: {\r\n                          opacity: 0\r\n                      }, transition: transition, onMouseEnter: bind(this.onMouseEnter, this), onMouseLeave: bind(this.onMouseLeave, this), onClick: bind(this.onMouseClick, this) }))),\r\n              tooltip && !tooltip.props.disabled && !isTransparent && (React__default.createElement(CloneElement, { element: tooltip, visible: !!active, modifiers: tooltip.props.modifiers || modifiers$1, reference: this.rect, value: this.getTooltipData() }))));\r\n      }\r\n  }\r\n  HeatmapCell.defaultProps = {\r\n      rx: 2,\r\n      ry: 2,\r\n      cursor: 'auto',\r\n      tooltip: React__default.createElement(ChartTooltip, null),\r\n      onClick: () => undefined,\r\n      onMouseEnter: () => undefined,\r\n      onMouseLeave: () => undefined\r\n  };\n\n  class HeatmapSeries extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.getValueScale = memoize((data, colorScheme, emptyColor) => {\r\n              const valueDomain = d3Array.extent(uniqueBy(data, d => d.data, d => d.value));\r\n              return point => {\r\n                  // For 0 values, lets show a placeholder fill\r\n                  if (point === undefined || point === null) {\r\n                      return emptyColor;\r\n                  }\r\n                  return getColor({\r\n                      scale: d3Scale.scaleQuantile,\r\n                      domain: valueDomain,\r\n                      key: point,\r\n                      colorScheme\r\n                  });\r\n              };\r\n          });\r\n      }\r\n      renderCell({ row, cell, rowIndex, cellIndex, valueScale, width, height, cellCount }) {\r\n          const { xScale, yScale, id, animated, cell: cellElement } = this.props;\r\n          const x = xScale(row.key);\r\n          const y = yScale(cell.x);\r\n          const fill = valueScale(cell.value);\r\n          return (React__default.createElement(CloneElement, { key: `${id}-${rowIndex}-${cellIndex}`, element: cellElement, animated: animated, cellIndex: rowIndex + cellIndex, cellCount: cellCount, x: x, y: y, fill: fill, width: width, height: height, data: cell }));\r\n      }\r\n      render() {\r\n          const { xScale, yScale, data, colorScheme, emptyColor } = this.props;\r\n          const valueScale = this.getValueScale(data, colorScheme, emptyColor);\r\n          const height = yScale.bandwidth();\r\n          const width = xScale.bandwidth();\r\n          const cellCount = d3Array.sum([...yScale.domain(), ...xScale.domain()]);\r\n          return (React__default.createElement(React.Fragment, null, data.map((row, rowIndex) => row.data.map((cell, cellIndex) => this.renderCell({\r\n              height,\r\n              width,\r\n              valueScale,\r\n              cellCount,\r\n              row,\r\n              cell,\r\n              rowIndex,\r\n              cellIndex\r\n          })))));\r\n      }\r\n  }\r\n  HeatmapSeries.defaultProps = {\r\n      padding: 0.1,\r\n      animated: true,\r\n      emptyColor: 'rgba(200,200,200,0.08)',\r\n      colorScheme: ['rgba(28, 107, 86, 0.5)', '#2da283'],\r\n      cell: React__default.createElement(HeatmapCell, null)\r\n  };\n\n  class Heatmap extends React.Component {\r\n      getScalesData(chartHeight, chartWidth) {\r\n          const { xAxis, yAxis, series, data: prevData } = this.props;\r\n          const data = buildNestedChartData(prevData);\r\n          const xDomain = xAxis.props.domain ||\r\n              uniqueBy(data, d => d.key);\r\n          const xScale = d3Scale.scaleBand()\r\n              .range([0, chartWidth])\r\n              .domain(xDomain)\r\n              .paddingInner(series.props.padding);\r\n          const yDomain = yAxis.props.domain ||\r\n              uniqueBy(data, d => d.data, d => d.x);\r\n          const yScale = d3Scale.scaleBand()\r\n              .domain(yDomain)\r\n              .range([chartHeight, 0])\r\n              .paddingInner(series.props.padding);\r\n          return {\r\n              yScale,\r\n              xScale,\r\n              data\r\n          };\r\n      }\r\n      renderChart(containerProps) {\r\n          const { chartWidth, chartHeight, updateAxes, id } = containerProps;\r\n          const { yAxis, xAxis, series, secondaryAxis } = this.props;\r\n          const { xScale, yScale, data } = this.getScalesData(chartHeight, chartWidth);\r\n          return (React__default.createElement(React.Fragment, null,\r\n              React__default.createElement(CloneElement, { element: xAxis, height: chartHeight, width: chartWidth, scale: xScale, onDimensionsChange: bind(updateAxes, this, 'horizontal') }),\r\n              React__default.createElement(CloneElement, { element: yAxis, height: chartHeight, width: chartWidth, scale: yScale, onDimensionsChange: bind(updateAxes, this, 'vertical') }),\r\n              secondaryAxis &&\r\n                  secondaryAxis.map((axis, i) => (React__default.createElement(CloneElement, { key: i, element: axis, height: chartHeight, width: chartWidth, onDimensionsChange: bind(updateAxes, this, 'horizontal') }))),\r\n              React__default.createElement(CloneElement, { element: series, id: `heat-series-${id}`, data: data, xScale: xScale, yScale: yScale })));\r\n      }\r\n      render() {\r\n          const { id, width, height, margins, className, xAxis, yAxis } = this.props;\r\n          return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, xAxisVisible: isAxisVisible(xAxis.props), yAxisVisible: isAxisVisible(yAxis.props), className: classNames(className) }, props => this.renderChart(props)));\r\n      }\r\n  }\r\n  Heatmap.defaultProps = {\r\n      data: [],\r\n      margins: 10,\r\n      series: React__default.createElement(HeatmapSeries, null),\r\n      yAxis: (React__default.createElement(LinearYAxis, { type: \"category\", axisLine: null, tickSeries: React__default.createElement(LinearYAxisTickSeries, { line: null, label: React__default.createElement(LinearYAxisTickLabel, { padding: 5 }) }) })),\r\n      xAxis: (React__default.createElement(LinearXAxis, { type: \"category\", axisLine: null, tickSeries: React__default.createElement(LinearXAxisTickSeries, { line: null, label: React__default.createElement(LinearXAxisTickLabel, { padding: 5 }) }) }))\r\n  };\n\n  const getFirstOfMonth = (date) => new Date(date.getFullYear(), date.getMonth(), 1);\r\n  const addWeeksToDate = (date, weeks) => {\r\n      let d = new Date(date.getTime());\r\n      d.setDate(d.getDate() + weeks * 7);\r\n      return d;\r\n  };\r\n  const getStartOfDay = (date) => {\r\n      const d = new Date(date.getTime());\r\n      d.setHours(0, 0, 0, 0);\r\n      return d;\r\n  };\r\n  const getNewDayFromDay = (date, num) => {\r\n      const d = new Date(date.getTime());\r\n      d.setDate(d.getDate() + num);\r\n      return d;\r\n  };\r\n  const weekDays = (() => {\r\n      const base = new Date(Date.UTC(2017, 0, 2));\r\n      return d3Array.range(7).map(() => {\r\n          const name = base.toLocaleDateString('default', { weekday: 'short' });\r\n          base.setDate(base.getDate() + 1);\r\n          return name;\r\n      });\r\n  })();\r\n  const buildDataScales = (rawData, view) => {\r\n      // Get the most recent date to get the range from\r\n      // From the end date, lets find the start year/month of that\r\n      // From that start year/month, lets find the end year/month for our bounds\r\n      const startDate = d3Array.min(rawData, d => d.key);\r\n      const start = getFirstOfMonth(startDate);\r\n      const endDomain = view === 'year' ? 53 : 5;\r\n      const end = addWeeksToDate(start, endDomain);\r\n      // Base on the view type, swap out some ranges\r\n      const xDomainRange = view === 'year' ? 53 : 5;\r\n      // Build our x/y domains for days of week + number of weeks in year\r\n      const yDomain = d3Array.range(7).reverse();\r\n      const xDomain = d3Array.range(xDomainRange);\r\n      // Filter out dates that are not in the start/end ranges\r\n      // and turn them into something our chart can read\r\n      const dates = rawData\r\n          .filter(d => d.key.getTime() > start.getTime() ||\r\n          d.key.getTime() < end.getTime())\r\n          .map(d => ({\r\n          key: getStartOfDay(d.key),\r\n          data: d.data\r\n      }));\r\n      // Find the first day of the duration and subtract the delta\r\n      const firstDayOfStart = start.getDay();\r\n      const curDate = getNewDayFromDay(start, -firstDayOfStart);\r\n      const rows = [];\r\n      // Build out the dataset for the n duration\r\n      for (let week = 0; week < xDomainRange; week++) {\r\n          const row = {\r\n              key: week,\r\n              data: []\r\n          };\r\n          for (let day = 0; day <= 6; day++) {\r\n              const dayValue = dates.find(d => d.key.getTime() === curDate.getTime());\r\n              row.data.push({\r\n                  key: day,\r\n                  data: dayValue ? dayValue.data : undefined,\r\n                  metadata: {\r\n                      date: new Date(curDate.getTime()),\r\n                      start: start,\r\n                      end: end\r\n                  }\r\n              });\r\n              curDate.setDate(curDate.getDate() + 1);\r\n          }\r\n          rows.push(row);\r\n      }\r\n      return {\r\n          data: rows,\r\n          yDomain,\r\n          xDomain,\r\n          start\r\n      };\r\n  };\n\n  class CalendarHeatmap extends React.Component {\r\n      constructor() {\r\n          super(...arguments);\r\n          this.getDataDomains = memoize((rawData, view) => buildDataScales(rawData, view));\r\n      }\r\n      render() {\r\n          const _a = this.props, { data: rawData, view } = _a, rest = __rest(_a, [\"data\", \"view\"]);\r\n          const { data, yDomain, xDomain, start } = this.getDataDomains(rawData, view);\r\n          // For month, only pass 1 tick value\r\n          const xTickValues = view === 'year' ? undefined : [1];\r\n          // Get the yAxis label formatting based on view type\r\n          const yAxisLabelFormat = view === 'year' ? d => weekDays[d] : () => null;\r\n          // Format the xAxis label for the start + n week\r\n          const xAxisLabelFormat = d => addWeeksToDate(start, d).toLocaleString('default', { month: 'long' });\r\n          return (React__default.createElement(Heatmap, Object.assign({}, rest, { data: data, yAxis: React__default.createElement(LinearYAxis, { type: \"category\", axisLine: null, domain: yDomain, tickSeries: React__default.createElement(LinearYAxisTickSeries, { tickSize: 20, line: null, label: React__default.createElement(LinearYAxisTickLabel, { padding: 5, format: yAxisLabelFormat }) }) }), xAxis: React__default.createElement(LinearXAxis, { type: \"category\", axisLine: null, domain: xDomain, tickSeries: React__default.createElement(LinearXAxisTickSeries, { line: null, tickValues: xTickValues, label: React__default.createElement(LinearXAxisTickLabel, { padding: 5, align: \"end\", format: xAxisLabelFormat }) }) }) })));\r\n      }\r\n  }\r\n  CalendarHeatmap.defaultProps = {\r\n      view: 'year',\r\n      series: (React__default.createElement(HeatmapSeries, { padding: 0.3, emptyColor: 'transparent', cell: React__default.createElement(HeatmapCell, { tooltip: React__default.createElement(ChartTooltip, { content: d => `${formatValue(d.data.metadata.date)} ∙ ${formatValue(d.data.value)}` }) }) }))\r\n  };\n\n  const LinearGaugeBar = props => (React__default.createElement(Bar, Object.assign({}, props, { rounded: false, tooltip: React__default.createElement(ChartTooltip, { placement: \"top\", content: data => (React__default.createElement(TooltipTemplate, { value: { y: data.value, x: data.y } })) }) })));\n\n  const LinearGaugeOuterBar = (_a) => {\r\n      var { height, width, fill } = _a, rest = __rest(_a, [\"height\", \"width\", \"fill\"]);\r\n      return React__default.createElement(\"rect\", Object.assign({}, rest, { fill: fill || '#484848', width: Math.max(width, 0), height: Math.max(height, 0) }));\r\n  };\n\n  const defaultProps = {\r\n      outerBar: React__default.createElement(LinearGaugeOuterBar, null),\r\n      bar: React__default.createElement(LinearGaugeBar, null)\r\n  };\r\n  const LinearGaugeSeries = (_a) => {\r\n      var { height, width, bar, outerBar, isMultiSeries } = _a, rest = __rest(_a, [\"height\", \"width\", \"bar\", \"outerBar\", \"isMultiSeries\"]);\r\n      return (React__default.createElement(React.Fragment, null,\r\n          !isMultiSeries && (React__default.createElement(CloneElement, { element: outerBar || defaultProps.outerBar, height: height, width: width })),\r\n          React__default.createElement(BarSeries, Object.assign({}, rest, { layout: \"horizontal\", tooltip: null, bar: React__default.createElement(CloneElement, { element: bar || defaultProps.bar }) }))));\r\n  };\n\n  class LinearGauge extends React.Component {\r\n      getData(data) {\r\n          if (Array.isArray(data)) {\r\n              return buildBarStackData([\r\n                  {\r\n                      key: 'default',\r\n                      data\r\n                  }\r\n              ], 'expand', 'horizontal');\r\n          }\r\n          else {\r\n              return buildShallowChartData([data], 'horizontal');\r\n          }\r\n      }\r\n      getScales(isMultiSeries, data, width, height, minValue, maxValue) {\r\n          const domain = !isMultiSeries ? [minValue, maxValue] : undefined;\r\n          const keyScale = getXScale({\r\n              width,\r\n              type: 'value',\r\n              data,\r\n              domain,\r\n              isMultiSeries\r\n          });\r\n          const valueScale = getYScale({\r\n              type: 'category',\r\n              height,\r\n              data,\r\n              isMultiSeries\r\n          });\r\n          return {\r\n              keyScale,\r\n              valueScale\r\n          };\r\n      }\r\n      renderChart({ chartHeight, chartWidth, id, chartSized }) {\r\n          const { series, data, minValue, maxValue } = this.props;\r\n          const isMultiSeries = Array.isArray(data);\r\n          const type = isMultiSeries ? 'stackedNormalized' : 'standard';\r\n          const transformedData = this.getData(data);\r\n          const { keyScale, valueScale } = this.getScales(isMultiSeries, transformedData, chartWidth, chartHeight, minValue, maxValue);\r\n          return (React__default.createElement(React.Fragment, null, chartSized && (React__default.createElement(CloneElement, { element: series, id: `linear-gauge-series-${id}`, data: transformedData, isCategorical: true, xScale: keyScale, yScale: valueScale, type: type, height: chartHeight, width: chartWidth, isMultiSeries: isMultiSeries }))));\r\n      }\r\n      render() {\r\n          const { id, width, height, margins, className } = this.props;\r\n          return (React__default.createElement(ChartContainer, { id: id, width: width, height: height, margins: margins, className: className }, props => this.renderChart(props)));\r\n      }\r\n  }\r\n  LinearGauge.defaultProps = {\r\n      minValue: 0,\r\n      maxValue: 100,\r\n      series: React__default.createElement(LinearGaugeSeries, null)\r\n  };\n\n  exports.Area = Area;\n  exports.AreaChart = AreaChart;\n  exports.AreaSeries = AreaSeries;\n  exports.AreaSparklineChart = AreaSparklineChart;\n  exports.Bar = Bar;\n  exports.BarChart = BarChart;\n  exports.BarLabel = BarLabel;\n  exports.BarSeries = BarSeries;\n  exports.BarSparklineChart = BarSparklineChart;\n  exports.Brush = Brush;\n  exports.BrushSlice = BrushSlice;\n  exports.CalendarHeatmap = CalendarHeatmap;\n  exports.ChartBrush = ChartBrush;\n  exports.ChartContainer = ChartContainer;\n  exports.ChartTooltip = ChartTooltip;\n  exports.ChartZoomPan = ChartZoomPan;\n  exports.CloneElement = CloneElement;\n  exports.DEFAULT_TRANSITION = DEFAULT_TRANSITION;\n  exports.DiscreteLegend = DiscreteLegend;\n  exports.DiscreteLegendEntry = DiscreteLegendEntry;\n  exports.DiscreteLegendSymbol = DiscreteLegendSymbol;\n  exports.Gradient = Gradient;\n  exports.GradientStop = GradientStop;\n  exports.GridStripe = GridStripe;\n  exports.Gridline = Gridline;\n  exports.GridlineSeries = GridlineSeries;\n  exports.GuideBar = GuideBar;\n  exports.Heatmap = Heatmap;\n  exports.HeatmapCell = HeatmapCell;\n  exports.HeatmapSeries = HeatmapSeries;\n  exports.HistogramBarChart = HistogramBarChart;\n  exports.HistogramBarSeries = HistogramBarSeries;\n  exports.HivePlot = HivePlot;\n  exports.Line = Line;\n  exports.LineChart = LineChart;\n  exports.LineSeries = LineSeries;\n  exports.LinearAxis = LinearAxis;\n  exports.LinearAxisLine = LinearAxisLine;\n  exports.LinearAxisTickLabel = LinearAxisTickLabel;\n  exports.LinearAxisTickLine = LinearAxisTickLine;\n  exports.LinearAxisTickSeries = LinearAxisTickSeries;\n  exports.LinearGauge = LinearGauge;\n  exports.LinearGaugeBar = LinearGaugeBar;\n  exports.LinearGaugeOuterBar = LinearGaugeOuterBar;\n  exports.LinearGaugeSeries = LinearGaugeSeries;\n  exports.LinearXAxis = LinearXAxis;\n  exports.LinearXAxisTickLabel = LinearXAxisTickLabel;\n  exports.LinearXAxisTickLine = LinearXAxisTickLine;\n  exports.LinearXAxisTickSeries = LinearXAxisTickSeries;\n  exports.LinearYAxis = LinearYAxis;\n  exports.LinearYAxisTickLabel = LinearYAxisTickLabel;\n  exports.LinearYAxisTickLine = LinearYAxisTickLine;\n  exports.LinearYAxisTickSeries = LinearYAxisTickSeries;\n  exports.Map = Map$1;\n  exports.MapMarker = MapMarker;\n  exports.MarimekkoBarSeries = MarimekkoBarSeries;\n  exports.MarimekkoChart = MarimekkoChart;\n  exports.MarkLine = MarkLine;\n  exports.Mask = Mask;\n  exports.MotionPath = MotionPath;\n  exports.Move = Move;\n  exports.Pan = Pan;\n  exports.PieArc = PieArc;\n  exports.PieArcLabel = PieArcLabel;\n  exports.PieArcSeries = PieArcSeries;\n  exports.PieChart = PieChart;\n  exports.PointSeries = PointSeries;\n  exports.RadialArea = RadialArea;\n  exports.RadialAreaChart = RadialAreaChart;\n  exports.RadialAreaSeries = RadialAreaSeries;\n  exports.RadialAxis = RadialAxis;\n  exports.RadialAxisArc = RadialAxisArc;\n  exports.RadialAxisArcSeries = RadialAxisArcSeries;\n  exports.RadialAxisTick = RadialAxisTick;\n  exports.RadialAxisTickLabel = RadialAxisTickLabel;\n  exports.RadialAxisTickLine = RadialAxisTickLine;\n  exports.RadialAxisTickSeries = RadialAxisTickSeries;\n  exports.RadialBar = RadialBar;\n  exports.RadialBarChart = RadialBarChart;\n  exports.RadialBarSeries = RadialBarSeries;\n  exports.RadialGauge = RadialGauge;\n  exports.RadialGaugeArc = RadialGaugeArc;\n  exports.RadialGaugeLabel = RadialGaugeLabel;\n  exports.RadialGaugeSeries = RadialGaugeSeries;\n  exports.RadialGaugeValueLabel = RadialGaugeValueLabel;\n  exports.RadialGradient = RadialGradient;\n  exports.RadialGuideBar = RadialGuideBar;\n  exports.RadialLine = RadialLine;\n  exports.RadialPointSeries = RadialPointSeries;\n  exports.RadialScatterPlot = RadialScatterPlot;\n  exports.RadialScatterPoint = RadialScatterPoint;\n  exports.RadialScatterSeries = RadialScatterSeries;\n  exports.RangeLines = RangeLines;\n  exports.Sankey = Sankey;\n  exports.SankeyLabel = SankeyLabel;\n  exports.SankeyLink = SankeyLink;\n  exports.SankeyNode = SankeyNode;\n  exports.ScatterPlot = ScatterPlot;\n  exports.ScatterPoint = ScatterPoint;\n  exports.ScatterSeries = ScatterSeries;\n  exports.SequentialLegend = SequentialLegend;\n  exports.SonarChart = SonarChart;\n  exports.SparklineChart = SparklineChart;\n  exports.StackedAreaChart = StackedAreaChart;\n  exports.StackedAreaSeries = StackedAreaSeries;\n  exports.StackedBarChart = StackedBarChart;\n  exports.StackedBarSeries = StackedBarSeries;\n  exports.StackedNormalizedAreaChart = StackedNormalizedAreaChart;\n  exports.StackedNormalizedAreaSeries = StackedNormalizedAreaSeries;\n  exports.StackedNormalizedBarChart = StackedNormalizedBarChart;\n  exports.StackedNormalizedBarSeries = StackedNormalizedBarSeries;\n  exports.Stripes = Stripes;\n  exports.TooltipArea = TooltipArea;\n  exports.TooltipTemplate = TooltipTemplate;\n  exports.Zoom = Zoom;\n  exports.ZoomPan = ZoomPan;\n  exports.addWeeksToDate = addWeeksToDate;\n  exports.bigIntegerToLocaleString = bigIntegerToLocaleString;\n  exports.buildBarStackData = buildBarStackData;\n  exports.buildBins = buildBins;\n  exports.buildDataScales = buildDataScales;\n  exports.buildMarimekkoData = buildMarimekkoData;\n  exports.buildNestedChartData = buildNestedChartData;\n  exports.buildShallowChartData = buildShallowChartData;\n  exports.buildStackData = buildStackData;\n  exports.buildWaterfall = buildWaterfall;\n  exports.calculateDimensions = calculateDimensions;\n  exports.calculateShowStroke = calculateShowStroke;\n  exports.constrainMatrix = constrainMatrix;\n  exports.constructFunctionProps = constructFunctionProps;\n  exports.extent = extent;\n  exports.formatValue = formatValue;\n  exports.functionProps = functionProps;\n  exports.getClosestPoint = getClosestPoint;\n  exports.getColor = getColor;\n  exports.getDegrees = getDegrees;\n  exports.getDimension = getDimension;\n  exports.getDurationTicks = getDurationTicks;\n  exports.getLimitMatrix = getLimitMatrix;\n  exports.getMaxBigIntegerForNested = getMaxBigIntegerForNested;\n  exports.getMaxBigIntegerForShallow = getMaxBigIntegerForShallow;\n  exports.getMaxTicks = getMaxTicks;\n  exports.getParentSVG = getParentSVG;\n  exports.getPointFromMatrix = getPointFromMatrix;\n  exports.getPositionForTarget = getPositionForTarget;\n  exports.getTicks = getTicks;\n  exports.getXDomain = getXDomain;\n  exports.getYDomain = getYDomain;\n  exports.humanFormatBigInteger = humanFormatBigInteger;\n  exports.interpolate = interpolate;\n  exports.isAxisVisible = isAxisVisible;\n  exports.isZoomLevelGoingOutOfBounds = isZoomLevelGoingOutOfBounds;\n  exports.normalizeValue = normalizeValue;\n  exports.normalizeValueForFormatting = normalizeValueForFormatting;\n  exports.reduceTicks = reduceTicks;\n  exports.schemes = schemes;\n  exports.toggleTextSelection = toggleTextSelection;\n  exports.uniqueBy = uniqueBy;\n  exports.weekDays = weekDays;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"script"}