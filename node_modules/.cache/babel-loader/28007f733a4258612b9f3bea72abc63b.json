{"ast":null,"code":"var _jsxFileName = \"/Users/ranjanbiswas/Documents/projects/VacZones/vaczones/src/App.js\";\nimport React, { Component } from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { BarChart } from \"reaviz\";\nimport { Zoom } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css';\nimport { Form, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\nimport { Map, TileLayer, Marker, Popup, GeoJSON, Circle, Tooltip } from 'react-leaflet';\nimport './App.css';\nimport data from './data/diplomacy.json';\nimport travel from './data/travel_advisory.json';\nimport worldmap from './data/world_map.json';\nimport virus_data from './data/virus_data.json';\nimport virus_mar_data from './data/virus_mar_data.json';\nimport virus_apr_data from './data/virus_data.json';\nimport virus_may_data from './data/virus_may_data.json';\nimport virus_jun_data from './data/virus_data.json';\nimport virus_jul_data from './data/virus_jul_data.json';\nimport virus_aug_data from './data/virus_data.json';\nimport virus_sep_data from './data/virus_sep_data.json';\nimport virus_oct_data from './data/virus_data.json';\nimport virus_nov_data from './data/virus_nov_data.json';\nimport testing_data from './data/testing_data.json';\nimport ReactPlayer from 'react-player/youtube';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport worldGeoJSON from 'geojson-world-map';\n\nconst googleMapsClient = require('@google/maps').createClient({\n  key: 'add key here',\n  Promise: Promise\n});\n\nvar myGoogleIcon = L.icon({\n  iconUrl: '/images/google_icon.png',\n  iconSize: [25, 41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n});\nvar myIcon = L.icon({\n  iconUrl: './images/building_icon.png',\n  iconSize: [25, 41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n});\nvar mySecondIcon = L.icon({\n  iconUrl: './images/star.png',\n  iconSize: [25, 41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n});\nvar circle = L.circle([51.508, -0.11], {\n  color: 'red',\n  fillColor: '#f03',\n  fillOpacity: 0.5,\n  radius: 50\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getAidCircle = value => {\n      if (isNaN(value) == true || value == null) {\n        return 'white';\n      }\n\n      var color = 'white';\n      value = parseInt(value);\n\n      if (value < 10) {\n        color = 'green';\n      } else if (value >= 10 && value < 1000) {\n        color = 'blue';\n      } else {\n        color = 'red';\n      }\n\n      return color;\n    };\n\n    this.getAidRadius = value => {\n      if (isNaN(value) == true || value == null) {\n        return 100;\n      }\n\n      var radius = 1000;\n      value = parseInt(value);\n\n      if (value >= 0 && value < 10) {\n        radius = 10 * value;\n      } else if (value >= 10 && value < 1000) {\n        radius = 5 * value;\n      } else {\n        radius = 1 * value / 2;\n      }\n\n      return radius;\n    };\n\n    this.onValueChanged = event => {\n      this.setState({\n        value: event.target.value\n      });\n\n      if (event.target.value == 3) {\n        var filter_data = virus_mar_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 4) {\n        var filter_data = virus_apr_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 5) {\n        var filter_data = virus_may_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 6) {\n        var filter_data = virus_jun_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 7) {\n        var filter_data = virus_jul_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 8) {\n        var filter_data = virus_aug_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 9) {\n        var filter_data = virus_sep_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 10) {\n        var filter_data = virus_oct_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else {\n        var filter_data = virus_nov_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      }\n    };\n\n    this.state = {\n      location: {\n        lat: 40.853570,\n        lng: -73.863260\n      },\n      zoom: 10,\n      all_testing_data: [],\n      value: 3,\n      virus_data: virus_data,\n      virus_mar_data: virus_mar_data,\n      virus_apr_data: virus_apr_data,\n      virus_may_data: virus_may_data,\n      virus_jun_data: virus_jun_data,\n      virus_jul_data: virus_jul_data,\n      virus_sep_data: virus_sep_data,\n      virus_oct_data: virus_oct_data,\n      virus_nov_data: virus_nov_data,\n      testing_data: testing_data,\n      show_wildlife: true\n    };\n\n    this.getEmptyIcon = () => {\n      var emptyIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span></span>'\n      });\n      return emptyIcon;\n    };\n\n    this.getDivIcon = score => {\n      score = parseInt(score);\n      var greenIcon = L.divIcon({\n        className: 'div-green-icon',\n        html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaczones/images/google_icon.png\"/></span>'\n      });\n      var yellowIcon = L.divIcon({\n        className: 'div-yellow-icon',\n        html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaczones/images/google_icon.png\"/></span>'\n      });\n      var orangeIcon = L.divIcon({\n        className: 'div-orange-icon',\n        html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaczones/images/google_icon.png\"/></span>'\n      });\n      var redIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaczones/images/google_icon.png\"/></span>'\n      });\n      var emptyIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span></span>'\n      });\n      return greenIcon;\n    };\n  }\n\n  componentDidMount() {\n    var filter_history = testing_data.filter(function (pilot) {\n      return pilot.County == \"Bronx\";\n    });\n    var rows = [];\n\n    for (var i = 0; i < filter_history.length; i++) {\n      rows.push({\n        \"key\": filter_history[i].Test_Date,\n        \"data\": parseInt(filter_history[i].Total_Number_of_Tests_Performed)\n      });\n    }\n\n    ; //console.log(rows);\n\n    this.setState({\n      all_testing_data: rows\n    });\n    /*\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    \n    var raw = JSON.stringify({\"username\":\"testapi1\",\"password\":\"coronavirus19\"});\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://covid19.cloudeya.org/token\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n      */\n\n    var filter_data = virus_mar_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n    this.setState({\n      virus_data: filter_data\n    });\n    /*\n         var filter_data= virus_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n    \n        var filter_may_data= virus_may_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        var filter_sep_data= virus_sep_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        var filter_oct_data= virus_oct_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n    \n        var filter_nov_data= virus_nov_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n    \n        this.setState({virus_data: virus_oct_data});\n    */\n\n    /*\n        var key =  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RhcGkxIiwiaWF0IjoxNjA0ODk2NTAzLCJleHAiOjE2MDUwOTY1MDN9.X0JT6_eWG-gvLEEikOqyrBrPdnvAZcBEYSgG4fSECOI\"\n    \n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"Authorization\", \"Bearer \" + key);\n    \n        var requestOptions = {\n          method: 'GET',\n          headers: myHeaders,\n         redirect: 'follow'\n        };\n    \n    fetch(\"https://covid19.cloudeya.org/MAR2020\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n        */\n  }\n\n  render() {\n    const position = [this.state.location.lat, this.state.location.lng];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(RangeSlider, {\n      min: 3,\n      max: 11,\n      value: this.state.value,\n      step: 2,\n      onChange: this.onValueChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(Map, {\n      id: \"map\",\n      className: \"map\",\n      center: position,\n      zoom: this.state.zoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      noWrap: \"true\",\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }\n    }), this.state.show_wildlife ? this.state.virus_data.map((each, index) => {\n      if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n        var position = [each.latitude, each.longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          position: position,\n          icon: this.getDivIcon(each.deaths),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(Popup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }\n        }), each.combined_key, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 30\n          }\n        })));\n      }\n    }) : '', this.state.show_wildlife ? this.state.virus_data.map((each, index) => {\n      if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n        var position = [each.latitude, each.longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          position: position,\n          icon: this.getEmptyIcon(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(Circle, {\n          center: {\n            lat: each.latitude,\n            lng: each.longitude\n          },\n          fillColor: this.getAidCircle(each.deaths),\n          fillOpacity: 0.5,\n          radius: this.getAidRadius(each.deaths),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 59\n          }\n        }, \"Confirmed:\" + each.confirmed)));\n      }\n    }) : ''), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }\n    }, \"Testing Data\"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"cars\",\n      id: \"cars\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Manhattan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 7\n      }\n    }, \"Manhattan\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"saab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 7\n      }\n    }, \"Bronx\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mercedes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 7\n      }\n    }, \"Mercedes\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"audi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 7\n      }\n    }, \"Audi\")), /*#__PURE__*/React.createElement(BarChart, {\n      width: 1000,\n      height: 250,\n      data: this.state.all_testing_data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ranjanbiswas/Documents/projects/VacZones/vaczones/src/App.js"],"names":["React","Component","Tab","Tabs","L","BarChart","Zoom","Form","Input","Button","Modal","ModalHeader","ModalBody","ModalFooter","Row","Col","Map","TileLayer","Marker","Popup","GeoJSON","Circle","Tooltip","data","travel","worldmap","virus_data","virus_mar_data","virus_apr_data","virus_may_data","virus_jun_data","virus_jul_data","virus_aug_data","virus_sep_data","virus_oct_data","virus_nov_data","testing_data","ReactPlayer","TwitterTimelineEmbed","Footer","Header","RangeSlider","worldGeoJSON","googleMapsClient","require","createClient","key","Promise","myGoogleIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","myIcon","mySecondIcon","circle","color","fillColor","fillOpacity","radius","App","getAidCircle","value","isNaN","parseInt","getAidRadius","onValueChanged","event","setState","target","filter_data","filter","pilot","province_state","state","location","lat","lng","zoom","all_testing_data","show_wildlife","getEmptyIcon","emptyIcon","divIcon","className","html","getDivIcon","score","greenIcon","yellowIcon","orangeIcon","redIcon","componentDidMount","filter_history","County","rows","i","length","push","Test_Date","Total_Number_of_Tests_Performed","render","position","map","each","index","longitude","latitude","deaths","combined_key","confirmed"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Tab from 'react-bootstrap/Tab'\nimport Tabs from 'react-bootstrap/Tabs'\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { BarChart } from \"reaviz\";\nimport { Zoom } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css'\nimport {Form, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col} from 'reactstrap'\nimport { Map, TileLayer, Marker, Popup,GeoJSON,Circle,Tooltip } from 'react-leaflet'\nimport './App.css';\nimport data from './data/diplomacy.json'\nimport travel from './data/travel_advisory.json'\nimport worldmap from './data/world_map.json'\nimport virus_data from './data/virus_data.json'\nimport virus_mar_data from './data/virus_mar_data.json'\nimport virus_apr_data from './data/virus_data.json'\nimport virus_may_data from './data/virus_may_data.json'\nimport virus_jun_data from './data/virus_data.json'\nimport virus_jul_data from './data/virus_jul_data.json'\nimport virus_aug_data from './data/virus_data.json'\nimport virus_sep_data from './data/virus_sep_data.json'\nimport virus_oct_data from './data/virus_data.json'\nimport virus_nov_data from './data/virus_nov_data.json'\nimport testing_data from './data/testing_data.json'\nimport ReactPlayer from 'react-player/youtube'\nimport { TwitterTimelineEmbed} from 'react-twitter-embed';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport worldGeoJSON from 'geojson-world-map';\n\nconst googleMapsClient = require('@google/maps').createClient({\n  key: 'add key here',\n  Promise: Promise\n});\n\nvar myGoogleIcon = L.icon({\n  iconUrl: '/images/google_icon.png',\n  iconSize: [25,41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n  });\n\nvar myIcon = L.icon({\niconUrl: './images/building_icon.png',\niconSize: [25,41],\niconAnchor: [12.5, 41],\npopupAnchor: [0, -41]\n});\n\n\nvar mySecondIcon = L.icon({\n  iconUrl: './images/star.png',\n  iconSize: [25,41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n  });\n\nvar circle = L.circle([51.508, -0.11], {\n  color: 'red',\n  fillColor: '#f03',\n  fillOpacity: 0.5,\n  radius: 50\n});\n\nclass App extends Component {\n\n  getAidCircle = (value) => \n  {\n    if(isNaN(value) == true || value == null)\n    {\n      return 'white';\n    }\n    var color = 'white';\n  \n  value = parseInt(value);\n  \n  if(value < 10)\n  {\n    color = 'green'\n  }\n  else if(value >= 10 && value < 1000)\n  {\n    color = 'blue';\n  }\n  else \n  {\n    color = 'red';\n  }\n  \n  return color\n  \n  }\n\n  getAidRadius = (value) => {\n\n    if(isNaN(value) == true || value == null)\n    {\n      return 100;\n    }\n    var radius = 1000;\n\n    value = parseInt(value);\n    if(value >= 0 && value < 10)\n    {\n      radius = 10 * value;\n    }\n    else if(value >= 10 && value < 1000)\n    {\n      radius = 5 * value;\n    }\n    else\n    {\n      radius = 1 * value/2;\n    }\n    return radius;\n  }\n\n  onValueChanged = (event) => {\n    \n    this.setState({value: event.target.value});\n    if(event.target.value == 3)\n    {\n      var filter_data= virus_mar_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n\n      this.setState({virus_data: filter_data});\n    }\n     else if(event.target.value == 4)\n    {\n      var filter_data= virus_apr_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n         else if(event.target.value == 5)\n    {\n      var filter_data= virus_may_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n            else if(event.target.value == 6)\n    {\n      var filter_data= virus_jun_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n    else if(event.target.value == 7)\n    {\n      var filter_data= virus_jul_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n      else if(event.target.value == 8)\n    {\n      var filter_data= virus_aug_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n        else if(event.target.value == 9)\n    {\n      var filter_data= virus_sep_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n    else if(event.target.value == 10)\n    {\n      var filter_data= virus_oct_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n    else\n    {\n      var filter_data= virus_nov_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n\n  }\n\n  state={\n    location: {\n      lat: 40.853570,\n      lng: -73.863260,\n      },\n    zoom: 10,\n    all_testing_data:[\n      \n    ],\n    value:3,\n    virus_data: virus_data,\n    virus_mar_data: virus_mar_data,\n    virus_apr_data: virus_apr_data,\n    virus_may_data: virus_may_data,\n    virus_jun_data: virus_jun_data,\n    virus_jul_data: virus_jul_data,\n    virus_sep_data: virus_sep_data,\n    virus_oct_data: virus_oct_data,\n    virus_nov_data: virus_nov_data,\n    testing_data: testing_data,\n    show_wildlife: true\n  }\n\n  getEmptyIcon = () =>\n  {\n    var emptyIcon = L.divIcon({\n      className : 'div-red-icon',\n      html: '<span></span>'\n    })\n\n    return emptyIcon;\n  }\n\n  getDivIcon = (score) =>\n {\n\n  score = parseInt(score);\n\n  var greenIcon = L.divIcon({\n    className : 'div-green-icon',\n    html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaczones/images/google_icon.png\"/></span>'\n  })\n\n  var yellowIcon = L.divIcon({\n    className : 'div-yellow-icon',\n    html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaczones/images/google_icon.png\"/></span>'\n  })\n\n  var orangeIcon = L.divIcon({\n    className : 'div-orange-icon',\n    html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaczones/images/google_icon.png\"/></span>'\n  })\n\n  var redIcon = L.divIcon({\n    className : 'div-red-icon',\n    html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaczones/images/google_icon.png\"/></span>'\n  })\n\n  var emptyIcon = L.divIcon({\n    className : 'div-red-icon',\n    html: '<span></span>'\n  })\n\n\n  return greenIcon;\n\n }\n\n  componentDidMount(){\n\n    var filter_history = testing_data.filter(function (pilot) {\n      return (pilot.County) == \"Bronx\";\n    });\n   \n    var rows = [];\n      for (var i = 0; i < filter_history.length; i++) {\n        rows.push({\"key\": filter_history[i].Test_Date,\n          \"data\" : parseInt(filter_history[i].Total_Number_of_Tests_Performed)});\n      };\n      //console.log(rows);\n      this.setState({all_testing_data: rows});\n    /*\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    \n    var raw = JSON.stringify({\"username\":\"testapi1\",\"password\":\"coronavirus19\"});\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://covid19.cloudeya.org/token\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n      */\n\n     var filter_data= virus_mar_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    this.setState({virus_data: filter_data});\n/*\n     var filter_data= virus_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    var filter_may_data= virus_may_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n    var filter_sep_data= virus_sep_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n    var filter_oct_data= virus_oct_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    var filter_nov_data= virus_nov_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    this.setState({virus_data: virus_oct_data});\n*/\n/*\n    var key =  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RhcGkxIiwiaWF0IjoxNjA0ODk2NTAzLCJleHAiOjE2MDUwOTY1MDN9.X0JT6_eWG-gvLEEikOqyrBrPdnvAZcBEYSgG4fSECOI\"\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Authorization\", \"Bearer \" + key);\n\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n     redirect: 'follow'\n    };\n\nfetch(\"https://covid19.cloudeya.org/MAR2020\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n    */\n\n  }\n\n\n  render(){\n\n    const position=[this.state.location.lat, this.state.location.lng]\n  return (\n    <div className=\"App\">\n     <br/>\n   <RangeSlider min={3} max={11}\n   value={this.state.value} step={2}\n   onChange={this.onValueChanged} />\n\n      <Map id=\"map\" className=\"map\" center={position} zoom={this.state.zoom}>\n        <TileLayer noWrap=\"true\"\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {\nthis.state.show_wildlife ? \n\nthis.state.virus_data.map((each, index) => {\n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n  \n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position} icon={this.getDivIcon(each.deaths)}>\n         <Popup><br /> \n          {each.combined_key}<br />  \n          </Popup>\n      </Marker>\n      }})\n: ''\n        }\n      \n        {\n          this.state.show_wildlife ? \n\nthis.state.virus_data.map((each, index) => {\n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n\n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position} icon={this.getEmptyIcon()}>\n        <Circle \n                  center={{lat:each.latitude, lng: each.longitude}}\n                  fillColor={this.getAidCircle(each.deaths)} \n                  fillOpacity = {0.5}\n                  radius={this.getAidRadius(each.deaths)}><Tooltip>{\"Confirmed:\" + each.confirmed}</Tooltip></Circle> \n      </Marker>\n      }})\n: ''\n\n        }\n        </Map>\n        <h3>Testing Data</h3>\n        <select name=\"cars\" id=\"cars\">\n      <option value=\"Manhattan\">Manhattan</option>\n      <option value=\"saab\">Bronx</option>\n      <option value=\"mercedes\">Mercedes</option>\n      <option value=\"audi\">Audi</option>\n</select>\n        <BarChart width={1000} height={250} data={this.state.all_testing_data} />\n        </div>)\n\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}