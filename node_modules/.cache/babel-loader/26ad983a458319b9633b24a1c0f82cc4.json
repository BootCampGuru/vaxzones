{"ast":null,"code":"var _jsxFileName = \"/Users/ranjanbiswas/Documents/projects/VacZones/vaczones/src/App.js\";\nimport React, { Component } from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { BarChart } from \"reaviz\";\nimport { Zoom } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css';\nimport { Form, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\nimport { Map, TileLayer, Marker, Popup, GeoJSON, Circle, Tooltip } from 'react-leaflet';\nimport './App.css';\nimport data from './data/diplomacy.json';\nimport embassies from './data/embassies.json';\nimport travel from './data/travel_advisory.json';\nimport worldmap from './data/world_map.json';\nimport embassyhistorydata from './data/embassy_history.json';\nimport ReactPlayer from 'react-player/youtube';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport worldGeoJSON from 'geojson-world-map';\n\nconst googleMapsClient = require('@google/maps').createClient({\n  key: 'add key here',\n  Promise: Promise\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: {\n        lat: 51.505,\n        lng: -0.09\n      },\n      zoom: 2,\n      embassy_data: embassies,\n      show_wildlife: true\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const position = [this.state.location.lat, this.state.location.lng];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      id: \"map\",\n      className: \"map\",\n      center: position,\n      zoom: this.state.zoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      noWrap: \"true\",\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), this.state.show_wildlife ? this.state.embassy_data.map((each, index) => {\n      if (isNaN(each.Longitude) === false && isNaN(each.Latitude) === false) {\n        var position = [each.Latitude, each.Longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          position: position,\n          icon: this.getDivIcon(each.Air),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(Popup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }\n        }), each.Country, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }\n        })));\n      }\n    }) : ''));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ranjanbiswas/Documents/projects/VacZones/vaczones/src/App.js"],"names":["React","Component","Tab","Tabs","L","BarChart","Zoom","Form","Input","Button","Modal","ModalHeader","ModalBody","ModalFooter","Row","Col","Map","TileLayer","Marker","Popup","GeoJSON","Circle","Tooltip","data","embassies","travel","worldmap","embassyhistorydata","ReactPlayer","TwitterTimelineEmbed","Footer","Header","RangeSlider","worldGeoJSON","googleMapsClient","require","createClient","key","Promise","App","state","location","lat","lng","zoom","embassy_data","show_wildlife","componentDidMount","render","position","map","each","index","isNaN","Longitude","Latitude","getDivIcon","Air","Country"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Tab from 'react-bootstrap/Tab'\nimport Tabs from 'react-bootstrap/Tabs'\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { BarChart } from \"reaviz\";\nimport { Zoom } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css'\nimport {Form, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col} from 'reactstrap'\nimport { Map, TileLayer, Marker, Popup,GeoJSON,Circle,Tooltip } from 'react-leaflet'\nimport './App.css';\nimport data from './data/diplomacy.json'\nimport embassies from './data/embassies.json'\nimport travel from './data/travel_advisory.json'\nimport worldmap from './data/world_map.json'\nimport embassyhistorydata from './data/embassy_history.json'\nimport ReactPlayer from 'react-player/youtube'\nimport { TwitterTimelineEmbed} from 'react-twitter-embed';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport worldGeoJSON from 'geojson-world-map';\n\nconst googleMapsClient = require('@google/maps').createClient({\n  key: 'add key here',\n  Promise: Promise\n});\n\nclass App extends Component {\n\n  state={\n    location: {\n      lat: 51.505,\n      lng: -0.09,\n      },\n    zoom: 2,\n    embassy_data: embassies,\n    show_wildlife: true\n  }\n\n  componentDidMount(){\n\n\n  }\n  render(){\n    const position=[this.state.location.lat, this.state.location.lng]\n  return (\n    <div className=\"App\">\n      <Map id=\"map\" className=\"map\" center={position} zoom={this.state.zoom}>\n        <TileLayer noWrap=\"true\"\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {\n\nthis.state.show_wildlife ? \n\nthis.state.embassy_data.map((each, index) => {\n          if (isNaN(each.Longitude) === false && isNaN(each.Latitude) === false) {\n        var position=[each.Latitude, each.Longitude]\n        return <Marker key={index} position={position}  icon={this.getDivIcon(each.Air)}>\n         <Popup><br /> \n          {each.Country}<br />  \n          </Popup>\n      </Marker>\n      }})\n: ''\n}\n        </Map>\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}