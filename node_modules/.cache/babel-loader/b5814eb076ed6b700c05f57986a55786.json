{"ast":null,"code":"var _jsxFileName = \"/Users/ranjanbiswas/Projects/vaxzones/src/App.js\";\nimport React, { Component } from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { BarChart } from \"reaviz\";\nimport { Zoom } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css';\nimport { Form, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\nimport { Map, TileLayer, Marker, Popup, GeoJSON, Circle, Tooltip } from 'react-leaflet';\nimport './App.css';\nimport data from './data/diplomacy.json';\nimport travel from './data/travel_advisory.json';\nimport worldmap from './data/world_map.json';\nimport virus_data from './data/virus_data.json';\nimport virus_mar_data from './data/virus_mar_data.json';\nimport virus_apr_data from './data/virus_data.json';\nimport virus_may_data from './data/virus_may_data.json';\nimport virus_jun_data from './data/virus_data.json';\nimport virus_jul_data from './data/virus_jul_data.json';\nimport virus_aug_data from './data/virus_data.json';\nimport virus_sep_data from './data/virus_sep_data.json';\nimport virus_oct_data from './data/virus_data.json';\nimport virus_nov_data from './data/virus_nov_data.json';\nimport testing_data from './data/testing_data.json';\nimport hospital_list from './data/hospital_list.json';\nimport nursing_bronx from './data/nursing_bronx.json';\nimport COVID_19_Manhattan from './data/COVID_19_Manhattan.json';\nimport ReactPlayer from 'react-player/youtube';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport worldGeoJSON from 'geojson-world-map';\n\nconst googleMapsClient = require('@google/maps').createClient({\n  key: 'add key here',\n  Promise: Promise\n});\n\nvar myGoogleIcon = L.icon({\n  iconUrl: '/images/google_icon.png',\n  iconSize: [25, 41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n});\nvar myIcon = L.icon({\n  iconUrl: '/images/building_icon.png',\n  iconSize: [25, 41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n});\nvar mySecondIcon = L.icon({\n  iconUrl: './images/star.png',\n  iconSize: [25, 41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n});\nvar circle = L.circle([51.508, -0.11], {\n  color: 'red',\n  fillColor: '#f03',\n  fillOpacity: 0.5,\n  radius: 50\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getNursingAidCircle = value => {\n      if (isNaN(value) == true || value == null) {\n        return 'white';\n      }\n\n      var color = 'white';\n      value = parseInt(value);\n\n      if (value < 1) {\n        color = 'green';\n      } else {\n        color = 'red';\n      }\n\n      return color;\n    };\n\n    this.getNursingAidRadius = value => {\n      var radius = 500;\n\n      if (isNaN(value) == true || value == null) {\n        return 0;\n      }\n\n      return radius;\n    };\n\n    this.getAidCircle = value => {\n      if (isNaN(value) == true || value == null) {\n        return 'white';\n      }\n\n      var color = 'white';\n      value = parseInt(value);\n\n      if (value < 10) {\n        color = 'green';\n      } else if (value >= 10 && value < 1000) {\n        color = 'blue';\n      } else {\n        color = 'red';\n      }\n\n      return color;\n    };\n\n    this.getAidRadius = value => {\n      if (isNaN(value) == true || value == null) {\n        return 100;\n      }\n\n      var radius = 1000;\n      value = parseInt(value);\n\n      if (value >= 0 && value < 10) {\n        radius = 10 * value;\n      } else if (value >= 10 && value < 1000) {\n        radius = 5 * value;\n      } else {\n        radius = 1 * value / 2;\n      }\n\n      return radius;\n    };\n\n    this.onClickedUp = () => {\n      if (parseInt(this.state.value) === 11) return;\n      console.log(this.state.value);\n      this.setState({\n        value: parseInt(this.state.value) + 2\n      });\n      this.onValueChanged();\n    };\n\n    this.onClickedDown = () => {\n      if (parseInt(this.state.value) === 1) return;\n      this.setState({\n        value: parseInt(this.state.value) - 2\n      });\n      this.onValueChanged();\n    };\n\n    this.onSelectionChanged = event => {\n      var value = event.target.value;\n      var filter_history = testing_data.filter(function (pilot) {\n        return pilot.County == value;\n      });\n      var rows = [];\n\n      for (var i = 0; i < filter_history.length; i++) {\n        rows.push({\n          \"key\": filter_history[i].Test_Date,\n          \"data\": parseInt(filter_history[i].Total_Number_of_Tests_Performed)\n        });\n      }\n\n      ;\n      this.setState({\n        all_testing_data: rows\n      });\n    };\n\n    this.onValueChangedButton = value => {\n      if (value == 3) {\n        var filter_data = virus_mar_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (value == 4) {\n        var filter_data = virus_apr_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 5) {\n        var filter_data = virus_may_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 6) {\n        var filter_data = virus_jun_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 7) {\n        var filter_data = virus_jul_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 8) {\n        var filter_data = virus_aug_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 9) {\n        var filter_data = virus_sep_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 10) {\n        var filter_data = virus_oct_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else {\n        var filter_data = virus_nov_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      }\n    };\n\n    this.onValueChanged = event => {\n      this.setState({\n        value: event.target.value\n      });\n\n      if (event.target.value == 3) {\n        var filter_data = virus_mar_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 4) {\n        var filter_data = virus_apr_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 5) {\n        var filter_data = virus_may_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 6) {\n        var filter_data = virus_jun_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 7) {\n        var filter_data = virus_jul_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 8) {\n        var filter_data = virus_aug_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 9) {\n        var filter_data = virus_sep_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else if (event.target.value == 10) {\n        var filter_data = virus_oct_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      } else {\n        var filter_data = virus_nov_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        this.setState({\n          virus_data: filter_data\n        });\n      }\n    };\n\n    this.state = {\n      location: {\n        lat: 40.766505,\n        lng: -73.877285\n      },\n      zoom: 13,\n      all_testing_data: [],\n      value: 3,\n      virus_data: virus_data,\n      virus_mar_data: virus_mar_data,\n      virus_apr_data: virus_apr_data,\n      virus_may_data: virus_may_data,\n      virus_jun_data: virus_jun_data,\n      virus_jul_data: virus_jul_data,\n      virus_sep_data: virus_sep_data,\n      virus_oct_data: virus_oct_data,\n      virus_nov_data: virus_nov_data,\n      testing_data: testing_data,\n      hospital_list: hospital_list,\n      nursing_bronx: nursing_bronx,\n      COVID_19_Manhattan: COVID_19_Manhattan,\n      show_wildlife: true\n    };\n\n    this.getHospitalIcon = score => {\n      if (score == null) score = 0;\n      var greenIcon = L.divIcon({\n        className: 'div-green-icon',\n        html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/building_icon.png\"/></span>'\n      });\n      var yellowIcon = L.divIcon({\n        className: 'div-yellow-icon',\n        html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n      });\n      var orangeIcon = L.divIcon({\n        className: 'div-orange-icon',\n        html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n      });\n      var redIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n      });\n      var emptyIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span></span>'\n      });\n      if (parseInt(score) > 0) return redIcon;\n      return greenIcon;\n    };\n\n    this.getBuildingIcon = score => {\n      if (score == null) score = 0;\n      var greenIcon = L.divIcon({\n        className: 'div-green-icon',\n        html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n      });\n      var yellowIcon = L.divIcon({\n        className: 'div-yellow-icon',\n        html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n      });\n      var orangeIcon = L.divIcon({\n        className: 'div-orange-icon',\n        html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n      });\n      var redIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n      });\n      var emptyIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span></span>'\n      });\n      if (parseInt(score) > 0) return redIcon;\n      return greenIcon;\n    };\n\n    this.getEmptyIcon = () => {\n      var emptyIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span></span>'\n      });\n      return emptyIcon;\n    };\n\n    this.getDivIcon = score => {\n      score = parseInt(score);\n      var greenIcon = L.divIcon({\n        className: 'div-green-icon',\n        html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n      });\n      var yellowIcon = L.divIcon({\n        className: 'div-yellow-icon',\n        html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n      });\n      var orangeIcon = L.divIcon({\n        className: 'div-orange-icon',\n        html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n      });\n      var redIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n      });\n      var emptyIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span></span>'\n      });\n      return greenIcon;\n    };\n  }\n\n  componentDidMount() {\n    var filter_history = testing_data.filter(function (pilot) {\n      return pilot.County == \"New York\";\n    });\n    var rows = [];\n\n    for (var i = 0; i < filter_history.length; i++) {\n      rows.push({\n        \"key\": filter_history[i].Test_Date,\n        \"data\": parseInt(filter_history[i].Total_Number_of_Tests_Performed)\n      });\n    }\n\n    ; //console.log(rows);\n\n    this.setState({\n      all_testing_data: rows\n    });\n    /*\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    \n    var raw = JSON.stringify({\"username\":\"testapi1\",\"password\":\"coronavirus19\"});\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://covid19.cloudeya.org/token\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n      */\n\n    var filter_data = virus_mar_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n    this.setState({\n      virus_data: filter_data\n    });\n    /*\n         var filter_data= virus_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n    \n        var filter_may_data= virus_may_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        var filter_sep_data= virus_sep_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n        var filter_oct_data= virus_oct_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n    \n        var filter_nov_data= virus_nov_data.filter(function (pilot) {\n          return pilot.province_state == \"New York\";\n        });\n    \n        this.setState({virus_data: virus_oct_data});\n    */\n\n    /*\n        var key =  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RhcGkxIiwiaWF0IjoxNjA0ODk2NTAzLCJleHAiOjE2MDUwOTY1MDN9.X0JT6_eWG-gvLEEikOqyrBrPdnvAZcBEYSgG4fSECOI\"\n    \n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"Authorization\", \"Bearer \" + key);\n    \n        var requestOptions = {\n          method: 'GET',\n          headers: myHeaders,\n         redirect: 'follow'\n        };\n    \n    fetch(\"https://covid19.cloudeya.org/MAR2020\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n        */\n  }\n\n  render() {\n    const position = [this.state.location.lat, this.state.location.lng];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 6\n      }\n    }, \"Covid-19 Detection over Time\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickedUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 6\n      }\n    }, \"Up\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickedDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 54\n      }\n    }, \"Down\"), /*#__PURE__*/React.createElement(RangeSlider, {\n      min: 3,\n      max: 11,\n      value: this.state.value,\n      step: 2,\n      onChange: this.onValueChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(Map, {\n      id: \"map\",\n      className: \"map\",\n      center: position,\n      zoom: this.state.zoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      noWrap: \"true\",\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }\n    }), this.state.show_wildlife ? this.state.virus_data.map((each, index) => {\n      if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n        var position = [each.latitude, each.longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          position: position,\n          icon: this.getDivIcon(each.deaths),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(Popup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 17\n          }\n        }), each.combined_key, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 30\n          }\n        })));\n      }\n    }) : '', this.state.show_wildlife ? this.state.nursing_bronx.map((each, index) => {\n      if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n        var position = [each.latitude, each.longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          position: position,\n          icon: this.getBuildingIcon(each.Total_Staff_Confirmed),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(Circle, {\n          center: {\n            lat: each.latitude,\n            lng: each.longitude\n          },\n          fillColor: this.getNursingAidCircle(each.Staff_Total_COVID_19_Deaths),\n          fillOpacity: 1,\n          radius: this.getNursingAidRadius(5),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 56\n          }\n        }, \"Confirmed: \" + each.Total_Staff_Confirmed + \" Deaths: \" + each.Staff_Total_COVID_19_Deaths + \" Address: \" + each.Provider_Address)));\n      }\n    }) : '', this.state.show_wildlife ? this.state.COVID_19_Manhattan.map((each, index) => {\n      if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n        var position = [each.latitude, each.longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          position: position,\n          icon: this.getBuildingIcon(each.Total_Staff_Confirmed),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(Circle, {\n          center: {\n            lat: each.latitude,\n            lng: each.longitude\n          },\n          fillColor: this.getNursingAidCircle(each.Staff_Total_COVID_19_Deaths),\n          fillOpacity: 1,\n          radius: this.getNursingAidRadius(5),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 56\n          }\n        }, \"Confirmed: \" + each.Total_Staff_Confirmed + \" Deaths: \" + each.Staff_Total_COVID_19_Deaths + \" Address: \" + each.Provider_Address)));\n      }\n    }) : '', this.state.show_wildlife ? this.state.hospital_list.map((each, index) => {\n      if (isNaN(each.location_1.longitude) === false && isNaN(each.location_1.latitude) === false && each.location_1.latitude != null && each.location_1.longitude != null) {\n        var position = [each.location_1.latitude, each.location_1.longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          position: position,\n          icon: this.getHospitalIcon(each.death),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(Popup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 17\n          }\n        }), each.facility_name, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 31\n          }\n        })));\n      }\n    }) : '', this.state.show_wildlife ? this.state.virus_data.map((each, index) => {\n      if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n        var position = [each.latitude, each.longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          position: position,\n          icon: this.getEmptyIcon(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(Circle, {\n          center: {\n            lat: each.latitude,\n            lng: each.longitude\n          },\n          fillColor: this.getAidCircle(each.deaths),\n          fillOpacity: 1,\n          radius: this.getAidRadius(each.deaths),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 59\n          }\n        }, \"Confirmed:\" + each.confirmed)));\n      }\n    }) : ''), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }\n    }, \"Testing Data\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.onSelectionChanged,\n      name: \"counties\",\n      id: \"counties\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"New York\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 7\n      }\n    }, \"Manhattan\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Bronx\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 7\n      }\n    }, \"Bronx\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Queens\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 7\n      }\n    }, \"Queens\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Kings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 6\n      }\n    }, \"Kings\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: {\n        size: 6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      width: 1000,\n      height: 250,\n      data: this.state.all_testing_data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 1\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      sm: {\n        size: 5,\n        offset: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"chart\",\n      src: \"/vaxzones/images/population.png\",\n      height: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 5\n      }\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ranjanbiswas/Projects/vaxzones/src/App.js"],"names":["React","Component","Tab","Tabs","L","BarChart","Zoom","Form","Input","Button","Modal","ModalHeader","ModalBody","ModalFooter","Row","Col","Map","TileLayer","Marker","Popup","GeoJSON","Circle","Tooltip","data","travel","worldmap","virus_data","virus_mar_data","virus_apr_data","virus_may_data","virus_jun_data","virus_jul_data","virus_aug_data","virus_sep_data","virus_oct_data","virus_nov_data","testing_data","hospital_list","nursing_bronx","COVID_19_Manhattan","ReactPlayer","TwitterTimelineEmbed","Footer","Header","RangeSlider","worldGeoJSON","googleMapsClient","require","createClient","key","Promise","myGoogleIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","myIcon","mySecondIcon","circle","color","fillColor","fillOpacity","radius","App","getNursingAidCircle","value","isNaN","parseInt","getNursingAidRadius","getAidCircle","getAidRadius","onClickedUp","state","console","log","setState","onValueChanged","onClickedDown","onSelectionChanged","event","target","filter_history","filter","pilot","County","rows","i","length","push","Test_Date","Total_Number_of_Tests_Performed","all_testing_data","onValueChangedButton","filter_data","province_state","location","lat","lng","zoom","show_wildlife","getHospitalIcon","score","greenIcon","divIcon","className","html","yellowIcon","orangeIcon","redIcon","emptyIcon","getBuildingIcon","getEmptyIcon","getDivIcon","componentDidMount","render","position","map","each","index","longitude","latitude","deaths","combined_key","Total_Staff_Confirmed","Staff_Total_COVID_19_Deaths","Provider_Address","location_1","death","facility_name","confirmed","size","offset"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Tab from 'react-bootstrap/Tab'\nimport Tabs from 'react-bootstrap/Tabs'\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { BarChart } from \"reaviz\";\nimport { Zoom } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css'\nimport {Form, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col} from 'reactstrap'\nimport { Map, TileLayer, Marker, Popup,GeoJSON,Circle,Tooltip } from 'react-leaflet'\nimport './App.css';\nimport data from './data/diplomacy.json'\nimport travel from './data/travel_advisory.json'\nimport worldmap from './data/world_map.json'\nimport virus_data from './data/virus_data.json'\nimport virus_mar_data from './data/virus_mar_data.json'\nimport virus_apr_data from './data/virus_data.json'\nimport virus_may_data from './data/virus_may_data.json'\nimport virus_jun_data from './data/virus_data.json'\nimport virus_jul_data from './data/virus_jul_data.json'\nimport virus_aug_data from './data/virus_data.json'\nimport virus_sep_data from './data/virus_sep_data.json'\nimport virus_oct_data from './data/virus_data.json'\nimport virus_nov_data from './data/virus_nov_data.json'\nimport testing_data from './data/testing_data.json'\nimport hospital_list from './data/hospital_list.json'\nimport nursing_bronx from './data/nursing_bronx.json'\nimport COVID_19_Manhattan from './data/COVID_19_Manhattan.json'\nimport ReactPlayer from 'react-player/youtube'\nimport { TwitterTimelineEmbed} from 'react-twitter-embed';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport worldGeoJSON from 'geojson-world-map';\n\nconst googleMapsClient = require('@google/maps').createClient({\n  key: 'add key here',\n  Promise: Promise\n});\n\nvar myGoogleIcon = L.icon({\n  iconUrl: '/images/google_icon.png',\n  iconSize: [25,41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n  });\n\nvar myIcon = L.icon({\niconUrl: '/images/building_icon.png',\niconSize: [25,41],\niconAnchor: [12.5, 41],\npopupAnchor: [0, -41]\n});\n\n\nvar mySecondIcon = L.icon({\n  iconUrl: './images/star.png',\n  iconSize: [25,41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n  });\n\nvar circle = L.circle([51.508, -0.11], {\n  color: 'red',\n  fillColor: '#f03',\n  fillOpacity: 0.5,\n  radius: 50\n});\n\nclass App extends Component {\n\n\n\n  getNursingAidCircle = (value) => \n  {\n    if(isNaN(value) == true || value == null)\n    {\n      return 'white';\n    }\n    var color = 'white';\n  \n  value = parseInt(value);\n  \n  if(value < 1)\n  {\n    color = 'green'\n  }\n\n  else \n  {\n    color = 'red';\n  }\n  \n  return color\n  \n  }\n\n  getNursingAidRadius = (value) => {\n\n    var radius = 500;\n    if(isNaN(value) == true || value == null)\n    {\n      return 0;\n    }\n   \n    return radius;\n  }\n\n  getAidCircle = (value) => \n  {\n    if(isNaN(value) == true || value == null)\n    {\n      return 'white';\n    }\n    var color = 'white';\n  \n  value = parseInt(value);\n  \n  if(value < 10)\n  {\n    color = 'green'\n  }\n  else if(value >= 10 && value < 1000)\n  {\n    color = 'blue';\n  }\n  else \n  {\n    color = 'red';\n  }\n  \n  return color\n  \n  }\n\n  getAidRadius = (value) => {\n\n    if(isNaN(value) == true || value == null)\n    {\n      return 100;\n    }\n    var radius = 1000;\n\n    value = parseInt(value);\n    if(value >= 0 && value < 10)\n    {\n      radius = 10 * value;\n    }\n    else if(value >= 10 && value < 1000)\n    {\n      radius = 5 * value;\n    }\n    else\n    {\n      radius = 1 * value/2;\n    }\n    return radius;\n  }\n\n  onClickedUp = () =>\n  {\n    if(parseInt(this.state.value) === 11)\n    return;\n    console.log(this.state.value);\n    this.setState({value: parseInt(this.state.value) + 2});\n    this.onValueChanged();\n\n  }\n\n \n  onClickedDown =() =>\n  {\n    if(parseInt(this.state.value) === 1)\n    return;\n    this.setState({value: parseInt(this.state.value) - 2 });\n    this.onValueChanged();\n    \n  }\n\n  onSelectionChanged = (event) => {\n    var value = event.target.value;\n\n      var filter_history = testing_data.filter(function (pilot) {\n      return (pilot.County) == value;\n    });\n   \n    var rows = [];\n      for (var i = 0; i < filter_history.length; i++) {\n        rows.push({\"key\": filter_history[i].Test_Date,\n          \"data\" : parseInt(filter_history[i].Total_Number_of_Tests_Performed)});\n      };\n \n      this.setState({all_testing_data: rows});\n\n  }\n\n  onValueChangedButton = (value) => {\n    \n  \n    if(value == 3)\n    {\n      var filter_data= virus_mar_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n\n      this.setState({virus_data: filter_data});\n    }\n     else if(value== 4)\n    {\n      var filter_data= virus_apr_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n         else if(event.target.value == 5)\n    {\n      var filter_data= virus_may_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n            else if(event.target.value == 6)\n    {\n      var filter_data= virus_jun_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n    else if(event.target.value == 7)\n    {\n      var filter_data= virus_jul_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n      else if(event.target.value == 8)\n    {\n      var filter_data= virus_aug_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n        else if(event.target.value == 9)\n    {\n      var filter_data= virus_sep_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n    else if(event.target.value == 10)\n    {\n      var filter_data= virus_oct_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n    else\n    {\n      var filter_data= virus_nov_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n\n  }\n\n  onValueChanged = (event) => {\n    \n    this.setState({value: event.target.value});\n    if(event.target.value == 3)\n    {\n      var filter_data= virus_mar_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n\n      this.setState({virus_data: filter_data});\n    }\n     else if(event.target.value == 4)\n    {\n      var filter_data= virus_apr_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n         else if(event.target.value == 5)\n    {\n      var filter_data= virus_may_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n            else if(event.target.value == 6)\n    {\n      var filter_data= virus_jun_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n    else if(event.target.value == 7)\n    {\n      var filter_data= virus_jul_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n      else if(event.target.value == 8)\n    {\n      var filter_data= virus_aug_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n        else if(event.target.value == 9)\n    {\n      var filter_data= virus_sep_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n    else if(event.target.value == 10)\n    {\n      var filter_data= virus_oct_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n    else\n    {\n      var filter_data= virus_nov_data.filter(function (pilot) {\n        return pilot.province_state == \"New York\";\n      });\n      this.setState({virus_data: filter_data});\n    }\n\n  }\n\n  state={\n    location: {\n      lat: 40.766505,\n      lng: -73.877285,\n      },\n    zoom: 13,\n    all_testing_data:[\n      \n    ],\n    value:3,\n    virus_data: virus_data,\n    virus_mar_data: virus_mar_data,\n    virus_apr_data: virus_apr_data,\n    virus_may_data: virus_may_data,\n    virus_jun_data: virus_jun_data,\n    virus_jul_data: virus_jul_data,\n    virus_sep_data: virus_sep_data,\n    virus_oct_data: virus_oct_data,\n    virus_nov_data: virus_nov_data,\n    testing_data: testing_data,\n    hospital_list: hospital_list,\n    nursing_bronx: nursing_bronx,\n    COVID_19_Manhattan: COVID_19_Manhattan,\n    show_wildlife: true\n  }\n\n  getHospitalIcon = (score) =>\n  {\n \n    if(score == null)\n    score = 0;\n \n   var greenIcon = L.divIcon({\n     className : 'div-green-icon',\n     html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/building_icon.png\"/></span>'\n   })\n \n   var yellowIcon = L.divIcon({\n     className : 'div-yellow-icon',\n     html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var orangeIcon = L.divIcon({\n     className : 'div-orange-icon',\n     html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var redIcon = L.divIcon({\n     className : 'div-red-icon',\n     html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var emptyIcon = L.divIcon({\n     className : 'div-red-icon',\n     html: '<span></span>'\n   })\n \n   if(parseInt(score) > 0)\n   return redIcon;\n \n   return greenIcon;\n \n  }\n\n\n  getBuildingIcon = (score) =>\n  {\n \n    if(score == null)\n    score = 0;\n \n   var greenIcon = L.divIcon({\n     className : 'div-green-icon',\n     html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var yellowIcon = L.divIcon({\n     className : 'div-yellow-icon',\n     html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var orangeIcon = L.divIcon({\n     className : 'div-orange-icon',\n     html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var redIcon = L.divIcon({\n     className : 'div-red-icon',\n     html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n   })\n \n   var emptyIcon = L.divIcon({\n     className : 'div-red-icon',\n     html: '<span></span>'\n   })\n \n   if(parseInt(score) > 0)\n   return redIcon;\n \n   return greenIcon;\n \n  }\n\n\n  getEmptyIcon = () =>\n  {\n    var emptyIcon = L.divIcon({\n      className : 'div-red-icon',\n      html: '<span></span>'\n    })\n\n    return emptyIcon;\n  }\n\n  getDivIcon = (score) =>\n {\n\n  score = parseInt(score);\n\n  var greenIcon = L.divIcon({\n    className : 'div-green-icon',\n    html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n  })\n\n  var yellowIcon = L.divIcon({\n    className : 'div-yellow-icon',\n    html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n  })\n\n  var orangeIcon = L.divIcon({\n    className : 'div-orange-icon',\n    html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n  })\n\n  var redIcon = L.divIcon({\n    className : 'div-red-icon',\n    html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaxzones/images/google_icon.png\"/></span>'\n  })\n\n  var emptyIcon = L.divIcon({\n    className : 'div-red-icon',\n    html: '<span></span>'\n  })\n\n\n  return greenIcon;\n\n }\n\n  componentDidMount(){\n\n    var filter_history = testing_data.filter(function (pilot) {\n      return (pilot.County) == \"New York\";\n    });\n   \n    var rows = [];\n      for (var i = 0; i < filter_history.length; i++) {\n        rows.push({\"key\": filter_history[i].Test_Date,\n          \"data\" : parseInt(filter_history[i].Total_Number_of_Tests_Performed)});\n      };\n      //console.log(rows);\n      this.setState({all_testing_data: rows});\n    /*\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    \n    var raw = JSON.stringify({\"username\":\"testapi1\",\"password\":\"coronavirus19\"});\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://covid19.cloudeya.org/token\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n      */\n\n     var filter_data= virus_mar_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    this.setState({virus_data: filter_data});\n/*\n     var filter_data= virus_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    var filter_may_data= virus_may_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n    var filter_sep_data= virus_sep_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n    var filter_oct_data= virus_oct_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    var filter_nov_data= virus_nov_data.filter(function (pilot) {\n      return pilot.province_state == \"New York\";\n    });\n\n    this.setState({virus_data: virus_oct_data});\n*/\n/*\n    var key =  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RhcGkxIiwiaWF0IjoxNjA0ODk2NTAzLCJleHAiOjE2MDUwOTY1MDN9.X0JT6_eWG-gvLEEikOqyrBrPdnvAZcBEYSgG4fSECOI\"\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Authorization\", \"Bearer \" + key);\n\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n     redirect: 'follow'\n    };\n\nfetch(\"https://covid19.cloudeya.org/MAR2020\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n    */\n\n  }\n\n\n  render(){\n\n    const position=[this.state.location.lat, this.state.location.lng]\n  return (\n    <div className=\"App\">\n     <br/>\n     <h3>Covid-19 Detection over Time</h3>\n     <button  onClick={this.onClickedUp}>Up</button> <button onClick={this.onClickedDown}>Down</button>\n   <RangeSlider min={3} max={11}\n   value={this.state.value} step={2}\n   onChange={this.onValueChanged} />\n\n      <Map id=\"map\" className=\"map\" center={position} zoom={this.state.zoom}>\n        <TileLayer noWrap=\"true\"\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {\nthis.state.show_wildlife ? \n\nthis.state.virus_data.map((each, index) => {\n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n  \n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position} icon={this.getDivIcon(each.deaths)}>\n         <Popup><br /> \n          {each.combined_key}<br />  \n          </Popup>\n      </Marker>\n      }})\n: ''\n        }\n\n\n        {\nthis.state.show_wildlife ? \n\nthis.state.nursing_bronx.map((each, index) => {\n     \n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n  \n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position} icon={this.getBuildingIcon(each.Total_Staff_Confirmed)}>\n          <Circle \n                  center={{lat:each.latitude, lng: each.longitude}}\n                  fillColor={this.getNursingAidCircle(each.Staff_Total_COVID_19_Deaths)} \n                  fillOpacity = {1}\n                  radius={this.getNursingAidRadius(5)}><Tooltip>{\"Confirmed: \" + each.Total_Staff_Confirmed +  \" Deaths: \" + each.Staff_Total_COVID_19_Deaths +  \" Address: \" + each.Provider_Address}</Tooltip></Circle> \n      </Marker>\n      }})\n: ''\n        }\n\n\n        {\nthis.state.show_wildlife ? \n\nthis.state.COVID_19_Manhattan.map((each, index) => {\n      \n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n  \n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position} icon={this.getBuildingIcon(each.Total_Staff_Confirmed)}>\n          <Circle \n                  center={{lat:each.latitude, lng: each.longitude}}\n                  fillColor={this.getNursingAidCircle(each.Staff_Total_COVID_19_Deaths)} \n                  fillOpacity = {1}\n                  radius={this.getNursingAidRadius(5)}><Tooltip>{\"Confirmed: \" + each.Total_Staff_Confirmed +  \" Deaths: \" + each.Staff_Total_COVID_19_Deaths +  \" Address: \" + each.Provider_Address}</Tooltip></Circle> \n      </Marker>\n      }})\n: ''\n        } \n\n        {\nthis.state.show_wildlife ? \n\nthis.state.hospital_list.map((each, index) => {\n     \n          if (isNaN(each.location_1.longitude) === false && isNaN(each.location_1.latitude) === false && each.location_1.latitude != null && each.location_1.longitude != null) {\n  \n        var position=[each.location_1.latitude, each.location_1.longitude]\n        return <Marker key={index} position={position} icon={this.getHospitalIcon(each.death)}>\n         <Popup><br /> \n          {each.facility_name}<br />  \n          </Popup>\n      </Marker>\n      }})\n: ''\n        }\n      \n        {\n          this.state.show_wildlife ? \n\nthis.state.virus_data.map((each, index) => {\n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false && each.latitude != null && each.longitude != null) {\n\n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position} icon={this.getEmptyIcon()}>\n        <Circle \n                  center={{lat:each.latitude, lng: each.longitude}}\n                  fillColor={this.getAidCircle(each.deaths)} \n                  fillOpacity = {1}\n                  radius={this.getAidRadius(each.deaths)}><Tooltip>{\"Confirmed:\" + each.confirmed}</Tooltip></Circle> \n      </Marker>\n      }})\n: ''\n\n        }\n        </Map>\n        <h3>Testing Data</h3>\n        <select onChange={this.onSelectionChanged} name=\"counties\" id=\"counties\">\n      <option value=\"New York\">Manhattan</option>\n      <option value=\"Bronx\">Bronx</option>\n      <option value=\"Queens\">Queens</option>\n     <option value=\"Kings\">Kings</option>\n      </select>\n      <hr/>\n      <Row>\n      <Col sm={{ size: 6}}>\n<BarChart width={1000} height={250} data={this.state.all_testing_data} />\n    </Col>\n    <Col sm={{ size: 5, offset: 1 }}>\n    <img alt=\"chart\" src=\"/vaxzones/images/population.png\" height=\"200px\" />\n    </Col>\n    </Row>\n\n        \n      <hr/>\n        </div>)\n\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}