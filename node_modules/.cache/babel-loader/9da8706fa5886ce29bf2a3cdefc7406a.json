{"ast":null,"code":"/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toCSS(matrix) {\n  return toString(matrix);\n}\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\n\nexport function toSVG(matrix) {\n  return toString(matrix);\n}\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\n\nexport function toString(matrix) {\n  return \"matrix(\".concat(matrix.a, \",\").concat(matrix.b, \",\").concat(matrix.c, \",\").concat(matrix.d, \",\").concat(matrix.e, \",\").concat(matrix.f, \")\");\n}","map":{"version":3,"sources":["/Users/ranjanbiswas/Documents/projects/VacZones/vaczones/node_modules/transformation-matrix/src/toString.js"],"names":["toCSS","matrix","toString","toSVG","a","b","c","d","e","f"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,KAAT,CAAgBC,MAAhB,EAAwB;AAC7B,SAAOC,QAAQ,CAACD,MAAD,CAAf;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,KAAT,CAAgBF,MAAhB,EAAwB;AAC7B,SAAOC,QAAQ,CAACD,MAAD,CAAf;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAmBD,MAAnB,EAA2B;AAChC,0BAAiBA,MAAM,CAACG,CAAxB,cAA6BH,MAAM,CAACI,CAApC,cAAyCJ,MAAM,CAACK,CAAhD,cAAqDL,MAAM,CAACM,CAA5D,cAAiEN,MAAM,CAACO,CAAxE,cAA6EP,MAAM,CAACQ,CAApF;AACD","sourcesContent":["/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toCSS (matrix) {\n  return toString(matrix)\n}\n\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toSVG (matrix) {\n  return toString(matrix)\n}\n\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toString (matrix) {\n  return `matrix(${matrix.a},${matrix.b},${matrix.c},${matrix.d},${matrix.e},${matrix.f})`\n}\n"]},"metadata":{},"sourceType":"module"}