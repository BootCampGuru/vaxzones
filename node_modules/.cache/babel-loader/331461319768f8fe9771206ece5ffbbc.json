{"ast":null,"code":"var _jsxFileName = \"/Users/ranjanbiswas/Documents/projects/VacZones/vaczones/src/App.js\";\nimport React, { Component } from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { BarChart } from \"reaviz\";\nimport { Zoom } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css';\nimport { Form, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\nimport { Map, TileLayer, Marker, Popup, GeoJSON, Circle, Tooltip } from 'react-leaflet';\nimport './App.css';\nimport data from './data/diplomacy.json';\nimport embassies from './data/embassies.json';\nimport travel from './data/travel_advisory.json';\nimport worldmap from './data/world_map.json';\nimport virus_data from './data/virus_data.json';\nimport embassyhistorydata from './data/embassy_history.json';\nimport ReactPlayer from 'react-player/youtube';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport worldGeoJSON from 'geojson-world-map';\n\nconst googleMapsClient = require('@google/maps').createClient({\n  key: 'add key here',\n  Promise: Promise\n});\n\nvar myGoogleIcon = L.icon({\n  iconUrl: '/images/google_icon.png',\n  iconSize: [25, 41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n});\nvar myIcon = L.icon({\n  iconUrl: './images/building_icon.png',\n  iconSize: [25, 41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n});\nvar mySecondIcon = L.icon({\n  iconUrl: './images/star.png',\n  iconSize: [25, 41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n});\nvar circle = L.circle([51.508, -0.11], {\n  color: 'red',\n  fillColor: '#f03',\n  fillOpacity: 0.5,\n  radius: 50\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getAidCircle = value => {\n      var color = 'white';\n      value = parseInt(value);\n\n      if (value < 100) {\n        color = 'green';\n      } else if (value >= 100 && value < 1000) {\n        color = 'orange';\n      } else if (value >= 1000 && value < 1000000) {\n        color = 'red';\n      }\n\n      return color;\n    };\n\n    this.getAidRadius = value => {\n      var radius = 1000;\n      value = parseInt(value);\n\n      if (value >= 0 && value < 100) {\n        radius = 100;\n      } else if (value >= 100 && value < 1000) {\n        radius = 500;\n      }\n\n      return radius;\n    };\n\n    this.onValueChanged = event => {\n      this.setState({\n        value: event.target.value\n      });\n      var filter_history = embassyhistorydata.filter(function (pilot) {\n        return parseInt(pilot.year) < parseInt(event.target.value);\n      });\n      var filter_not_history = embassyhistorydata.filter(function (pilot) {\n        return parseInt(pilot.year) < parseInt(event.target.value) && pilot.event !== \"closure\";\n      }); //console.log(filter_history);\n\n      this.setState({\n        embassyhistorynotclosure: filter_not_history\n      });\n    };\n\n    this.state = {\n      location: {\n        lat: 40.853570,\n        lng: -73.863260\n      },\n      zoom: 15,\n      embassy_data: embassies,\n      virtus_data: virus_data,\n      show_wildlife: true\n    };\n\n    this.getDivIcon = score => {\n      score = parseInt(score);\n      var greenIcon = L.divIcon({\n        className: 'div-green-icon',\n        html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaczones/images/google_icon.png\"/></span>'\n      });\n      var yellowIcon = L.divIcon({\n        className: 'div-yellow-icon',\n        html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/diploun/images/cloudy.png\"/></span>'\n      });\n      var orangeIcon = L.divIcon({\n        className: 'div-orange-icon',\n        html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/diploun/images/pollution.png\"/></span>'\n      });\n      var redIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/diploun/images/radioactive.png\"/></span>'\n      });\n      var emptyIcon = L.divIcon({\n        className: 'div-red-icon',\n        html: '<span></span>'\n      });\n      return score > 0 && score <= 50 ? greenIcon : score > 50 && score <= 100 ? yellowIcon : score > 100 && score <= 150 ? orangeIcon : score > 150 ? redIcon : emptyIcon;\n    };\n  }\n\n  componentDidMount() {\n    /*\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    \n    var raw = JSON.stringify({\"username\":\"testapi1\",\"password\":\"coronavirus19\"});\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://covid19.cloudeya.org/token\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n      */\n    var key = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RhcGkxIiwiaWF0IjoxNjA0ODk2NTAzLCJleHAiOjE2MDUwOTY1MDN9.X0JT6_eWG-gvLEEikOqyrBrPdnvAZcBEYSgG4fSECOI\";\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Authorization\", \"Bearer \" + key);\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    fetch(\"https://covid19.cloudeya.org/MAR2020\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  }\n\n  render() {\n    const position = [this.state.location.lat, this.state.location.lng];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(RangeSlider, {\n      min: 1,\n      max: 2020,\n      value: this.state.value,\n      step: 1,\n      onChange: this.onValueChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(Map, {\n      id: \"map\",\n      className: \"map\",\n      center: position,\n      zoom: this.state.zoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      noWrap: \"true\",\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }), this.state.show_wildlife ? this.state.embassy_data.map((each, index) => {\n      if (isNaN(each.longitude) === false && isNaN(each.latitude) === false) {\n        var position = [each.latitude, each.longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          position: position,\n          icon: this.getDivIcon(each.Deaths),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(Popup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }\n        }), each.confirmed, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 27\n          }\n        })));\n      }\n    }) : '', this.state.show_wildlife ? this.state.embassy_data.map((each, index) => {\n      if (isNaN(each.longitude) === false && isNaN(each.latitude) === false) {\n        var position = [each.latitude, each.longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          position: position,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(Circle, {\n          center: {\n            lat: each.longitude,\n            lng: each.longitude\n          },\n          fillColor: this.getAidCircle(each.confirmed),\n          fillOpacity: 0.5,\n          radius: this.getAidRadius(each.Deaths),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 59\n          }\n        }, each.Deaths + ':' + each.recovered)));\n      }\n    }) : ''));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ranjanbiswas/Documents/projects/VacZones/vaczones/src/App.js"],"names":["React","Component","Tab","Tabs","L","BarChart","Zoom","Form","Input","Button","Modal","ModalHeader","ModalBody","ModalFooter","Row","Col","Map","TileLayer","Marker","Popup","GeoJSON","Circle","Tooltip","data","embassies","travel","worldmap","virus_data","embassyhistorydata","ReactPlayer","TwitterTimelineEmbed","Footer","Header","RangeSlider","worldGeoJSON","googleMapsClient","require","createClient","key","Promise","myGoogleIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","myIcon","mySecondIcon","circle","color","fillColor","fillOpacity","radius","App","getAidCircle","value","parseInt","getAidRadius","onValueChanged","event","setState","target","filter_history","filter","pilot","year","filter_not_history","embassyhistorynotclosure","state","location","lat","lng","zoom","embassy_data","virtus_data","show_wildlife","getDivIcon","score","greenIcon","divIcon","className","html","yellowIcon","orangeIcon","redIcon","emptyIcon","componentDidMount","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","text","result","console","log","catch","error","render","position","map","each","index","isNaN","longitude","latitude","Deaths","confirmed","recovered"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,0BAAP;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAO,uCAAP;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,WAApC,EAAiDC,SAAjD,EAA4DC,WAA5D,EAAyEC,GAAzE,EAA8EC,GAA9E,QAAwF,YAAxF;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAuCC,OAAvC,EAA+CC,MAA/C,EAAsDC,OAAtD,QAAqE,eAArE;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,oBAAT,QAAoC,qBAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,oEAAP;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,YAAxB,CAAqC;AAC5DC,EAAAA,GAAG,EAAE,cADuD;AAE5DC,EAAAA,OAAO,EAAEA;AAFmD,CAArC,CAAzB;;AAKA,IAAIC,YAAY,GAAGpC,CAAC,CAACqC,IAAF,CAAO;AACxBC,EAAAA,OAAO,EAAE,yBADe;AAExBC,EAAAA,QAAQ,EAAE,CAAC,EAAD,EAAI,EAAJ,CAFc;AAGxBC,EAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,EAAP,CAHY;AAIxBC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL;AAJW,CAAP,CAAnB;AAOA,IAAIC,MAAM,GAAG1C,CAAC,CAACqC,IAAF,CAAO;AACpBC,EAAAA,OAAO,EAAE,4BADW;AAEpBC,EAAAA,QAAQ,EAAE,CAAC,EAAD,EAAI,EAAJ,CAFU;AAGpBC,EAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,EAAP,CAHQ;AAIpBC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL;AAJO,CAAP,CAAb;AAQA,IAAIE,YAAY,GAAG3C,CAAC,CAACqC,IAAF,CAAO;AACxBC,EAAAA,OAAO,EAAE,mBADe;AAExBC,EAAAA,QAAQ,EAAE,CAAC,EAAD,EAAI,EAAJ,CAFc;AAGxBC,EAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,EAAP,CAHY;AAIxBC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL;AAJW,CAAP,CAAnB;AAOA,IAAIG,MAAM,GAAG5C,CAAC,CAAC4C,MAAF,CAAS,CAAC,MAAD,EAAS,CAAC,IAAV,CAAT,EAA0B;AACrCC,EAAAA,KAAK,EAAE,KAD8B;AAErCC,EAAAA,SAAS,EAAE,MAF0B;AAGrCC,EAAAA,WAAW,EAAE,GAHwB;AAIrCC,EAAAA,MAAM,EAAE;AAJ6B,CAA1B,CAAb;;AAOA,MAAMC,GAAN,SAAkBpD,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAE1BqD,YAF0B,GAEVC,KAAD,IACf;AAEE,UAAIN,KAAK,GAAG,OAAZ;AAEFM,MAAAA,KAAK,GAAGC,QAAQ,CAACD,KAAD,CAAhB;;AAEA,UAAGA,KAAK,GAAG,GAAX,EACA;AACEN,QAAAA,KAAK,GAAG,OAAR;AACD,OAHD,MAIK,IAAGM,KAAK,IAAI,GAAT,IAAgBA,KAAK,GAAG,IAA3B,EACL;AACEN,QAAAA,KAAK,GAAG,QAAR;AACD,OAHI,MAIA,IAAGM,KAAK,IAAI,IAAT,IAAiBA,KAAK,GAAG,OAA5B,EACL;AACEN,QAAAA,KAAK,GAAG,KAAR;AACD;;AAED,aAAOA,KAAP;AAEC,KAxByB;;AAAA,SA0B1BQ,YA1B0B,GA0BVF,KAAD,IAAW;AAExB,UAAIH,MAAM,GAAG,IAAb;AAEAG,MAAAA,KAAK,GAAGC,QAAQ,CAACD,KAAD,CAAhB;;AACA,UAAGA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,GAAzB,EACA;AACEH,QAAAA,MAAM,GAAG,GAAT;AACD,OAHD,MAIK,IAAGG,KAAK,IAAI,GAAT,IAAgBA,KAAK,GAAG,IAA3B,EACL;AACEH,QAAAA,MAAM,GAAG,GAAT;AACD;;AACD,aAAOA,MAAP;AACD,KAxCyB;;AAAA,SA0C1BM,cA1C0B,GA0CRC,KAAD,IAAW;AAE1B,WAAKC,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaN;AAArB,OAAd;AACA,UAAIO,cAAc,GAAGlC,kBAAkB,CAACmC,MAAnB,CAA0B,UAAUC,KAAV,EAAiB;AAC9D,eAAOR,QAAQ,CAACQ,KAAK,CAACC,IAAP,CAAR,GAAuBT,QAAQ,CAACG,KAAK,CAACE,MAAN,CAAaN,KAAd,CAAtC;AACD,OAFoB,CAArB;AAIA,UAAIW,kBAAkB,GAAGtC,kBAAkB,CAACmC,MAAnB,CAA0B,UAAUC,KAAV,EAAiB;AAClE,eAAOR,QAAQ,CAACQ,KAAK,CAACC,IAAP,CAAR,GAAuBT,QAAQ,CAACG,KAAK,CAACE,MAAN,CAAaN,KAAd,CAA/B,IAAuDS,KAAK,CAACL,KAAN,KAAgB,SAA9E;AACD,OAFwB,CAAzB,CAP0B,CAU1B;;AACA,WAAKC,QAAL,CAAc;AAACO,QAAAA,wBAAwB,EAAED;AAA3B,OAAd;AAED,KAvDyB;;AAAA,SAyD1BE,KAzD0B,GAyDpB;AACJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,GAAG,EAAE,SADG;AAERC,QAAAA,GAAG,EAAE,CAAC;AAFE,OADN;AAKJC,MAAAA,IAAI,EAAE,EALF;AAMJC,MAAAA,YAAY,EAAEjD,SANV;AAOJkD,MAAAA,WAAW,EAAE/C,UAPT;AAQJgD,MAAAA,aAAa,EAAE;AARX,KAzDoB;;AAAA,SAoE1BC,UApE0B,GAoEZC,KAAD,IACd;AAECA,MAAAA,KAAK,GAAGrB,QAAQ,CAACqB,KAAD,CAAhB;AAEA,UAAIC,SAAS,GAAG1E,CAAC,CAAC2E,OAAF,CAAU;AACxBC,QAAAA,SAAS,EAAG,gBADY;AAExBC,QAAAA,IAAI,EAAE,2EAA2EJ,KAA3E,GAAmF;AAFjE,OAAV,CAAhB;AAKA,UAAIK,UAAU,GAAG9E,CAAC,CAAC2E,OAAF,CAAU;AACzBC,QAAAA,SAAS,EAAG,iBADa;AAEzBC,QAAAA,IAAI,EAAE,4EAA4EJ,KAA5E,GAAoF;AAFjE,OAAV,CAAjB;AAKA,UAAIM,UAAU,GAAG/E,CAAC,CAAC2E,OAAF,CAAU;AACzBC,QAAAA,SAAS,EAAG,iBADa;AAEzBC,QAAAA,IAAI,EAAE,4EAA4EJ,KAA5E,GAAoF;AAFjE,OAAV,CAAjB;AAKA,UAAIO,OAAO,GAAGhF,CAAC,CAAC2E,OAAF,CAAU;AACtBC,QAAAA,SAAS,EAAG,cADU;AAEtBC,QAAAA,IAAI,EAAE,yEAAyEJ,KAAzE,GAAiF;AAFjE,OAAV,CAAd;AAKA,UAAIQ,SAAS,GAAGjF,CAAC,CAAC2E,OAAF,CAAU;AACxBC,QAAAA,SAAS,EAAG,cADY;AAExBC,QAAAA,IAAI,EAAE;AAFkB,OAAV,CAAhB;AAMA,aAAOJ,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAI,EAAtB,GAA2BC,SAA3B,GAAuCD,KAAK,GAAG,EAAR,IAAcA,KAAK,IAAI,GAAvB,GAA6BK,UAA7B,GAC9CL,KAAK,GAAG,GAAR,IAAeA,KAAK,IAAI,GAAxB,GAA8BM,UAA9B,GACAN,KAAK,GAAG,GAAR,GAAcO,OAAd,GACAC,SAHA;AAKA,KAxG0B;AAAA;;AA0G1BC,EAAAA,iBAAiB,GAAE;AACjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI,QAAIhD,GAAG,GAAI,+JAAX;AAEA,QAAIiD,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAF,IAAAA,SAAS,CAACE,MAAV,CAAiB,eAAjB,EAAkC,YAAYnD,GAA9C;AAEA,QAAIoD,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAEL,SAFU;AAGpBM,MAAAA,QAAQ,EAAE;AAHU,KAArB;AAMJC,IAAAA,KAAK,CAAC,sCAAD,EAAyCJ,cAAzC,CAAL,CACGK,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFlB,EAGGG,KAHH,CAGSC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CAHlB;AAMG;;AAGDC,EAAAA,MAAM,GAAE;AACN,UAAMC,QAAQ,GAAC,CAAC,KAAKpC,KAAL,CAAWC,QAAX,CAAoBC,GAArB,EAA0B,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,GAA9C,CAAf;AACF,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAED,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,GAAG,EAAE,IAA1B;AACA,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWb,KADlB;AACyB,MAAA,IAAI,EAAE,CAD/B;AAEA,MAAA,QAAQ,EAAE,KAAKG,cAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC,eAKE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,SAAS,EAAC,KAAxB;AAA8B,MAAA,MAAM,EAAE8C,QAAtC;AAAgD,MAAA,IAAI,EAAE,KAAKpC,KAAL,CAAWI,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAC,MAAlB;AACE,MAAA,WAAW,EAAC,2EADd;AAEE,MAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQN,KAAKJ,KAAL,CAAWO,aAAX,GAEA,KAAKP,KAAL,CAAWK,YAAX,CAAwBgC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,UAAIC,KAAK,CAACF,IAAI,CAACG,SAAN,CAAL,KAA0B,KAA1B,IAAmCD,KAAK,CAACF,IAAI,CAACI,QAAN,CAAL,KAAyB,KAAhE,EAAuE;AACzE,YAAIN,QAAQ,GAAC,CAACE,IAAI,CAACI,QAAN,EAAgBJ,IAAI,CAACG,SAArB,CAAb;AACA,4BAAO,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEF,KAAb;AAAoB,UAAA,QAAQ,EAAEH,QAA9B;AAAwC,UAAA,IAAI,EAAE,KAAK5B,UAAL,CAAgB8B,IAAI,CAACK,MAArB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACN,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,EACEL,IAAI,CAACM,SADP,eACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADjB,CADM,CAAP;AAKD;AAAC,KARR,CAFA,GAWE,EAnBI,EAwBI,KAAK5C,KAAL,CAAWO,aAAX,GAEV,KAAKP,KAAL,CAAWK,YAAX,CAAwBgC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,UAAIC,KAAK,CAACF,IAAI,CAACG,SAAN,CAAL,KAA0B,KAA1B,IAAmCD,KAAK,CAACF,IAAI,CAACI,QAAN,CAAL,KAAyB,KAAhE,EAAuE;AACzE,YAAIN,QAAQ,GAAC,CAACE,IAAI,CAACI,QAAN,EAAgBJ,IAAI,CAACG,SAArB,CAAb;AACA,4BAAO,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEF,KAAb;AAAoB,UAAA,QAAQ,EAAEH,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACP,oBAAC,MAAD;AACU,UAAA,MAAM,EAAE;AAAClC,YAAAA,GAAG,EAACoC,IAAI,CAACG,SAAV;AAAqBtC,YAAAA,GAAG,EAAEmC,IAAI,CAACG;AAA/B,WADlB;AAEU,UAAA,SAAS,EAAE,KAAKvD,YAAL,CAAkBoD,IAAI,CAACM,SAAvB,CAFrB;AAGU,UAAA,WAAW,EAAI,GAHzB;AAIU,UAAA,MAAM,EAAE,KAAKvD,YAAL,CAAkBiD,IAAI,CAACK,MAAvB,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIkD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAUL,IAAI,CAACK,MAAL,GAAc,GAAd,GAAoBL,IAAI,CAACO,SAAnC,CAJlD,CADO,CAAP;AAOD;AAAC,KAVR,CAFU,GAaR,EArCI,CALF,CADF;AAiDD;;AAvM2B;;AAyM5B,eAAe5D,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport Tab from 'react-bootstrap/Tab'\nimport Tabs from 'react-bootstrap/Tabs'\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { BarChart } from \"reaviz\";\nimport { Zoom } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css'\nimport {Form, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col} from 'reactstrap'\nimport { Map, TileLayer, Marker, Popup,GeoJSON,Circle,Tooltip } from 'react-leaflet'\nimport './App.css';\nimport data from './data/diplomacy.json'\nimport embassies from './data/embassies.json'\nimport travel from './data/travel_advisory.json'\nimport worldmap from './data/world_map.json'\nimport virus_data from './data/virus_data.json'\nimport embassyhistorydata from './data/embassy_history.json'\nimport ReactPlayer from 'react-player/youtube'\nimport { TwitterTimelineEmbed} from 'react-twitter-embed';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport worldGeoJSON from 'geojson-world-map';\n\nconst googleMapsClient = require('@google/maps').createClient({\n  key: 'add key here',\n  Promise: Promise\n});\n\nvar myGoogleIcon = L.icon({\n  iconUrl: '/images/google_icon.png',\n  iconSize: [25,41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n  });\n\nvar myIcon = L.icon({\niconUrl: './images/building_icon.png',\niconSize: [25,41],\niconAnchor: [12.5, 41],\npopupAnchor: [0, -41]\n});\n\n\nvar mySecondIcon = L.icon({\n  iconUrl: './images/star.png',\n  iconSize: [25,41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n  });\n\nvar circle = L.circle([51.508, -0.11], {\n  color: 'red',\n  fillColor: '#f03',\n  fillOpacity: 0.5,\n  radius: 50\n});\n\nclass App extends Component {\n\n  getAidCircle = (value) => \n  {\n  \n    var color = 'white';\n  \n  value = parseInt(value);\n  \n  if(value < 100)\n  {\n    color = 'green'\n  }\n  else if(value >= 100 && value < 1000)\n  {\n    color = 'orange';\n  }\n  else if(value >= 1000 && value < 1000000)\n  {\n    color = 'red';\n  }\n  \n  return color\n  \n  }\n\n  getAidRadius = (value) => {\n\n    var radius = 1000;\n\n    value = parseInt(value);\n    if(value >= 0 && value < 100)\n    {\n      radius = 100;\n    }\n    else if(value >= 100 && value < 1000)\n    {\n      radius = 500;\n    }\n    return radius;\n  }\n\n  onValueChanged = (event) => {\n    \n    this.setState({value: event.target.value});\n    var filter_history = embassyhistorydata.filter(function (pilot) {\n      return parseInt(pilot.year) < parseInt(event.target.value);\n    });\n\n    var filter_not_history = embassyhistorydata.filter(function (pilot) {\n      return parseInt(pilot.year) < parseInt(event.target.value) && pilot.event !== \"closure\" ;\n    });\n    //console.log(filter_history);\n    this.setState({embassyhistorynotclosure: filter_not_history})\n\n  }\n\n  state={\n    location: {\n      lat: 40.853570,\n      lng: -73.863260,\n      },\n    zoom: 15,\n    embassy_data: embassies,\n    virtus_data: virus_data,\n    show_wildlife: true\n  }\n\n  getDivIcon = (score) =>\n {\n\n  score = parseInt(score);\n\n  var greenIcon = L.divIcon({\n    className : 'div-green-icon',\n    html: '<span style=\"color: white; background-color: green; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/vaczones/images/google_icon.png\"/></span>'\n  })\n\n  var yellowIcon = L.divIcon({\n    className : 'div-yellow-icon',\n    html: '<span style=\"color: black; background-color: yellow; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/diploun/images/cloudy.png\"/></span>'\n  })\n\n  var orangeIcon = L.divIcon({\n    className : 'div-orange-icon',\n    html: '<span style=\"color: black; background-color: orange; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/diploun/images/pollution.png\"/></span>'\n  })\n\n  var redIcon = L.divIcon({\n    className : 'div-red-icon',\n    html: '<span style=\"color: white; background-color: red; font-size: 14px;\">' + score + '<img width=\"16px\" src=\"/diploun/images/radioactive.png\"/></span>'\n  })\n\n  var emptyIcon = L.divIcon({\n    className : 'div-red-icon',\n    html: '<span></span>'\n  })\n\n\n  return score > 0 && score <= 50 ? greenIcon : score > 50 && score <= 100 ? yellowIcon :\n  score > 100 && score <= 150 ? orangeIcon :\n  score > 150 ? redIcon :\n  emptyIcon;\n\n }\n\n  componentDidMount(){\n    /*\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    \n    var raw = JSON.stringify({\"username\":\"testapi1\",\"password\":\"coronavirus19\"});\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://covid19.cloudeya.org/token\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n      */\n\n\n    var key =  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RhcGkxIiwiaWF0IjoxNjA0ODk2NTAzLCJleHAiOjE2MDUwOTY1MDN9.X0JT6_eWG-gvLEEikOqyrBrPdnvAZcBEYSgG4fSECOI\"\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Authorization\", \"Bearer \" + key);\n\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n     redirect: 'follow'\n    };\n\nfetch(\"https://covid19.cloudeya.org/MAR2020\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n\n\n  }\n\n\n  render(){\n    const position=[this.state.location.lat, this.state.location.lng]\n  return (\n    <div className=\"App\">\n     <br/>\n   <RangeSlider min={1} max={2020}\n   value={this.state.value} step={1}\n   onChange={this.onValueChanged} />\n      <Map id=\"map\" className=\"map\" center={position} zoom={this.state.zoom}>\n        <TileLayer noWrap=\"true\"\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {\n\nthis.state.show_wildlife ? \n\nthis.state.embassy_data.map((each, index) => {\n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false) {\n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position} icon={this.getDivIcon(each.Deaths)}>\n         <Popup><br /> \n          {each.confirmed}<br />  \n          </Popup>\n      </Marker>\n      }})\n: ''\n\n        }\n\n        {\n          this.state.show_wildlife ? \n\nthis.state.embassy_data.map((each, index) => {\n          if (isNaN(each.longitude) === false && isNaN(each.latitude) === false) {\n        var position=[each.latitude, each.longitude]\n        return <Marker key={index} position={position}>\n        <Circle \n                  center={{lat:each.longitude, lng: each.longitude}}\n                  fillColor={this.getAidCircle(each.confirmed)} \n                  fillOpacity = {0.5}\n                  radius={this.getAidRadius(each.Deaths)}><Tooltip>{each.Deaths + ':' + each.recovered}</Tooltip></Circle> \n      </Marker>\n      }})\n: ''\n\n        }\n        </Map>\n        </div>)\n\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}